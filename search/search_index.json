{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"AMY Documentation AMY is a web-based workshop administration application for The Carpentries and related projects. Its target audience is workshop coordinators, most of whom are non-programmers, who need to keep track of what workshops are being arranged, when they're supposed to occur, who's teaching what, and so on.","title":"Home"},{"location":"#amy-documentation","text":"AMY is a web-based workshop administration application for The Carpentries and related projects. Its target audience is workshop coordinators, most of whom are non-programmers, who need to keep track of what workshops are being arranged, when they're supposed to occur, who's teaching what, and so on.","title":"AMY Documentation"},{"location":"acknowledgements/","text":"This project was funded in part by a grant from the National Science Foundation (0953694) to Prof. Ethan White .","title":"Acknowledgements"},{"location":"amy_database_structure/","text":"Primary Tables in AMY The primary tables used in AMY (that will likely appear in every query) are those that store information on events, persons, memberships, and organizations. Additional tables provide more information about events, persons, memberships, and organizations. Events workshops_event - Primary table for all event data. Commonly used fields id Sequential, automatically assigned integer start and end Event start and end dates slug Event's unique identifier in the form YYYY-MM-DD-sitename url Event's website. Typically in the format username.github.io/YYYY-MM-DD-sitename (but not required) host_id An integer representing the Event Host. This is linked to the workshops_organization table Location based fields: venue The venue name of the event address The street address of the event latitude and longitude Stored as floating point (decimal) numbers country Stored as the two digit country code contact A list of email addresses listed as contacts for that workshop completed A Boolean field to note that all work (including workshop coordination and data entry) is complete. assigned_to_id The id of the Regional Coordinator or other Carpentries Core Team member assigned to this event. This is linked to the workshops_person table. language_id The integer id of the language used at the workshop. This is not typically recorded. This is linked to the workshops_language table open_TTT_applications Used only for instructor training events adminstrator_id An integer representing the event organizer. This is linked to the workshops_organization table. Historically any organization could be listed as an administrator. Recent updates to AMY limit this to Data Carpentry, Library Carpentry, Software Carpentry, The Carpentries, or self-organized. This enforcement is at the AMY app level, not at the database level. reg_key Eventbrite registration key Unused fields manual_attendance We are no longer collecting or recording attendance ~~ admin_fee ~~, ~~ invoice_status ~~ We are not recording financial data in AMY repository_last_commit_hash , repository_metadata , metadata_all_changes , metadata_changed Previously used to store metadata changes instructors_post instructors_pre learners_longterm learners_post learners_pre Previously used to store links to surveys. Persons workshops_person - Primary table for all person data. This includes all individuals, regardless of their role with The Carpentries. Commonly used fields id Sequential, automatically assigned integer personal middle family Three fields to hold the individual's name. Only personal is required. email Individual's primary email address. Used for user log in secondary_email Alternate email address. Optional. gender Options are Prefer not to say (undisclosed) Female Gender variant / non-conforming Male Other . gender_other Text if individual selected Other may_contact A boolean field. We may not contact people if this field is false github Individual's GitHub user id twitter Individual's Twitter user id orcid Individual's ORCID iD url Link to the individual's personal website airport_id An integer representing the person's self identified nearest. This is linked to the workshops_airport table affiliation A free text field representing the person's self identified institutional affliation. This is not linked to the workshops_organization table. occupation A free text field representing the person's self identified occupation user_notes Free text field with notes from the individual publish_profile A boolean field that acknowledges permission to publish the individual's profile on our website pages such as the Instructors , Trainers , or Maintainers pages country Self identified country of residence. Stored as the two digit country code . lesson_publication_consent Allows individual to consent to publishing their name associated with lesson contributions. Individual can select publication by name, ORCID iD, or GitHub id, or not consent to publishing their name or identity. Less commonly used fields last_login When the user last logged in (regardless of their activity or permissions) is_superuser Boolean field to note whether the person is a superuser , giving them all administrative privileges created_at Autogenerated timestamp when the record is created last_updated_at Autogenerated timestamp when the record was last updated duplication_reviewed_on Timestamp tracking when a potential duplicate individual's record was reviewed is_active A boolean field. Only active users are able to log in to AMY data_privacy_agreement Acknowledges user has read our data policy. Required the first time any user logs in Other fields password Not stored as plain text. Do not use or modify this field for anything. Memberships workshops_membership - Stores information about each membership agreement. id Sequential, automatically assigned integer. variant Membership type (Gold, Silver, etc.) agreement_start and agreement_end Membership term start and end dates extended Integer; number of days the membership term end date has been extended by; NULL value indicates no extension contribution_type Financial, Person-days, or Other workshops_without_admin_fee_per_agreement Integer; number of centrally organized workshops allowed workshops_without_admin_fee_rolled_from_previous Integer; number of centrally-organised workshops allowed that was rolled over from previous membership. This should be the same as workshops_without_admin_fee_rolled_over in preceding membership workshops_without_admin_fee_rolled_over Integer; number of centrally-organised workshops allowed that was rolled over to succeeding membership. The same number should be recorded in workshops_without_admin_fee_rolled_from_previous in succeeding membership public_instructor_training_seats Integer; number of public seats allowed in instructor training events in the original contract. additional_public_instructor_training_seats Integer; number of additional public seats allowed in instructor training events beyond the original contract. public_instructor_training_seats_rolled_from_previous Integer; number of public instructor training seats allowed that was rolled over from previous membership. This should be the same as public_instructor_training_seats_rolled_over in preceding membership public_instructor_training_seats_rolled_over Integer; number of public instructor training seats allowed that was rolled over to succeeding membership. The same number should be recorded in public_instructor_training_seats_rolled_from_previous in succeeding membership inhouse_instructor_training_seats Integer; number of in-house seats allowed in instructor training events in the original contract. additional_inhouse_instructor_training_seats Integer; number of additional in-house seats allowed in instructor training events beyond the original contract. inhouse_instructor_training_seats_rolled_from_previous Integer; number of in-house instructor training seats allowed that was rolled over from previous membership. This should be the same as inhouse_instructor_training_seats_rolled_over in preceding membership inhouse_instructor_training_seats_rolled_over Integer; number of in-house instructor training seats allowed that was rolled over to succeeding membership. The same number should be recorded in inhouse_instructor_training_seats_rolled_from_previous in succeeding membership agreement_link A link to the Member agreement in Google Drive registration_code A string representing the code used by the Member site for Eventbrite registration and the instructor training application public_status a string indicating agreement to publicising membership on The Carpentries websites emergency_contact text with emergency contact data for the membership consortium a boolean value indicating consortium (umbrella for more than one organisation member) Member workshops_member - Stores information about organisations and their roles in memberships. id Sequential, automatically assigned integer. membership_id - Integer linking membership instance organization_id - Integer linking organisation instance role_id - Integer linking member role instance MemberRole workshops_memberrole - Stores roles for organisations in memberships. id Sequential, automatically assigned integer. name string with role's name, e.g. contact_signatory - preferably a computer-friendly format verbose_name string with role's name suitable for humans, e.g. Contact Signatory MembershipTask fiscal_membershiptask - Stores information about persons and their roles in memberships. id Sequential, automatically assigned integer. membership_id - Integer linking membership instance person_id - Integer linking person instance role_id - Integer linking membership person role instance MembershipPersonRole fiscal_membershippersonrole - Stores roles for persons in memberships. id Sequential, automatically assigned integer. name string with role's name - preferably a computer-friendly format verbose_name string with role's name suitable for humans Organizations workshops_organization - Stores all organizations in AMY. id Sequential, automatically assigned integer. This is used by the host_id and administrator_id fields in the workshops_event table, and the organization_id field in the workshops_membership table. domain Website of the organization fullname Human friendly name of the organization country Stored as the two digit country code latitude and longitude Stored as floating point (decimal) numbers affiliated_organizations Many-to-many relationship between organizations; the purpose of this field is to \"link together\" organisations that in some way are related. For example, \"University of California\" organisation can be linked to \"University of California, Berkeley\", \"University of California, Davis\", and \"University of California, Los Angeles\". Additional Tables in AMY Badges workshops_badge Lists all available badges (SWC/DC/LC Instructor, Trainer, etc.) id Sequential, automatically assigned integer. This is used by badge_id in the workshops_award table. criteria Description of what this badge is title Verbose, human friendly name of badge (e.g., Software Carpentry Instructor or Trainer ) name \"back-end\" badge name (e.g., swc-instructor , trainer ) workshops_award Connects workshops_badge and workshops_person tables to show what Badges have been awarded to what Persons id Sequential, automatically assigned integer. awarded Date the badge was awarded. This is usually the date it was recorded in AMY, not the date the person completed all requirements. badge_id An integer representing the badge. This is linked to the workshops_badge table event_id An integer representing the event the badge came from. This is linked to the workshops_event table person_id An integer representing the person who got the badge. This is linked to the workshops_person table awarded_by_id An integer representing the person who awarded the badge (entered it in AMY). This is linked to the workshops_person table Roles workshops_role Lists all available roles (Instructor, Helper, Learner, etc.) id Sequential, automatically assigned integer. verbose_name Verbose, human friendly name of role (e.g., Workshop host , Supporting Instructor ) name \"back end\" task name (e.g., workshop-host , supporting-instructor ) workshops_task Connects workshops_role , workshops_event , and workshops_person tables to show what what Persons have served in what Roles at what Events id Sequential, automatically assigned integer. event_id An integer representing the event the person was at. This is linked to the workshops_event table person_id An integer representing the person who was at the event. This is linked to the workshops_person table role_id An integer representing the person's role. This is linked to the workshops_person table seat_membership_id Used for Instructor Training Learner role only. An integer representing the membership this seat was assigned to. seat_public Used for Instructor Training Learner role only. Determines if the seat counts as public or in-house for the specific membership. seat_open_training Used for Instructor Training Learner role only. Boolean field noting whether this was an open (non-member) training seat. title and url are not used. Tags workshops_tag Lists all availabe tags for an Event (SWC, DC, LC, Online, Pilot, Circuits, etc.) id Sequential, automatically assigned integer. name \"back end\" tag name details Description of what tag is used for priority Used to control the sort order in the AMY web interface. Not relevant for any other queries. workshops_event_tags Connects workshops_tag and workshops_event to show what Tags have been applied to what Events id Sequential, automatically assigned integer. event_id An integer representing the event that got that tag. This is linked to the workshops_event table tag_id An integer representing the tag that was assigned to that event. This is linked to the workshops_tag table. Training progress workshops_trainingrequirement Lists all available steps towards Instructor certification (Training Event, Discussion, etc.) id Sequential, automatically assigned integer. name Name of requirement ( DC Homework , LC Demo , etc.) url_required Notes whether a URL is required for this type of training requirement. This only applies to the Homework (lesson contribution) requirements. event_required Notes whether an event is required for this type of training requirement. This only applies to the Training (the actual event they attended). workshops_trainingprogress Connects workshops_trainingrequirement and workshops_person to show what Persons have completed what steps of the checkout process. id Sequential, automatically assigned integer. created_at and last_updated_at Dates the record was created and last updated. Automatically generated by database. state State of the trainee's progress. Options are pass , fail , not evaluated yet url Only for Homework (lesson contribution) requirement; links to the trainee's GitHub contribution notes Any human generated notes evaluated_by_id id of the user entering this record. This is linked to the workshops_person table event_id id of the event this trainee was at. This is linked to the workshops_event table requirement_id id of the requirement that is being recorded. This is linked to the workshops_trainingrequirement table* trainee_id id of the trainee being evaluated. This is linked to the workshops_person table Term consents_term - Stores all Terms in AMY (i.e. the privary policy). Archive Behavior When Terms are archived ( archived_at timestamp is set), that Term 's TermOptions and Consents are archived as well. If the Term was required, once archived it is no longer required in AMY. Commonly used fields slug slug of the term. Used to uniquely identify the term. content content of the term. This text shown to users when they consent. required_type determines whether or not a term is considered required for the user or not. If required it will be shown to the user when they log in to consent to. help_text additional text shown to the user in order to give more context on the term. TermOption consents_termoption - Stores all options for a stored Term in AMY. TermOptions are displayed when the user is asked to consent to a Term , and are considered answer choices for the Term . Archive Behavior When TermOptions are archived ( archived_at timestamp is set), any Consents that rely on that option are archived and a new unset Consent is created by AMY for the user. If the Term the option was attached to is required, archiving a TermOption may result in an email sent to any users who answered with this opition. Commonly used fields term a required foreign key to term. Unarchived term options attached to a term will be displayed to the user when the term is rendered. option_type determines whether or not a term option is considered an affirmative aggrement to the term or the user has declined the term. content the text displayed to the user when the term is rendered. archived_at - a nullable timestamp Consent consents_consent - Stores all consents for all users in AMY. Archive Behavior When Consents are archived ( archived_at timestamp is set), a new unset consent is created by AMY. Commonly used fields person - required foreign key to Person . term - required foreign key to Term . Provided for ease of use and reduction of queries. There is a check on the Consent model to ensure the given TermOption belongs to the Term. term_option - a nullable foreign key to TermOption. When this field is null, the Consent is unset. archived_at - a nullable timestamp","title":"Database Structure"},{"location":"amy_database_structure/#primary-tables-in-amy","text":"The primary tables used in AMY (that will likely appear in every query) are those that store information on events, persons, memberships, and organizations. Additional tables provide more information about events, persons, memberships, and organizations.","title":"Primary Tables in AMY"},{"location":"amy_database_structure/#events","text":"workshops_event - Primary table for all event data.","title":"Events"},{"location":"amy_database_structure/#commonly-used-fields","text":"id Sequential, automatically assigned integer start and end Event start and end dates slug Event's unique identifier in the form YYYY-MM-DD-sitename url Event's website. Typically in the format username.github.io/YYYY-MM-DD-sitename (but not required) host_id An integer representing the Event Host. This is linked to the workshops_organization table Location based fields: venue The venue name of the event address The street address of the event latitude and longitude Stored as floating point (decimal) numbers country Stored as the two digit country code contact A list of email addresses listed as contacts for that workshop completed A Boolean field to note that all work (including workshop coordination and data entry) is complete. assigned_to_id The id of the Regional Coordinator or other Carpentries Core Team member assigned to this event. This is linked to the workshops_person table. language_id The integer id of the language used at the workshop. This is not typically recorded. This is linked to the workshops_language table open_TTT_applications Used only for instructor training events adminstrator_id An integer representing the event organizer. This is linked to the workshops_organization table. Historically any organization could be listed as an administrator. Recent updates to AMY limit this to Data Carpentry, Library Carpentry, Software Carpentry, The Carpentries, or self-organized. This enforcement is at the AMY app level, not at the database level. reg_key Eventbrite registration key","title":"Commonly used fields"},{"location":"amy_database_structure/#unused-fields","text":"manual_attendance We are no longer collecting or recording attendance ~~ admin_fee ~~, ~~ invoice_status ~~ We are not recording financial data in AMY repository_last_commit_hash , repository_metadata , metadata_all_changes , metadata_changed Previously used to store metadata changes instructors_post instructors_pre learners_longterm learners_post learners_pre Previously used to store links to surveys.","title":"Unused fields"},{"location":"amy_database_structure/#persons","text":"workshops_person - Primary table for all person data. This includes all individuals, regardless of their role with The Carpentries.","title":"Persons"},{"location":"amy_database_structure/#commonly-used-fields_1","text":"id Sequential, automatically assigned integer personal middle family Three fields to hold the individual's name. Only personal is required. email Individual's primary email address. Used for user log in secondary_email Alternate email address. Optional. gender Options are Prefer not to say (undisclosed) Female Gender variant / non-conforming Male Other . gender_other Text if individual selected Other may_contact A boolean field. We may not contact people if this field is false github Individual's GitHub user id twitter Individual's Twitter user id orcid Individual's ORCID iD url Link to the individual's personal website airport_id An integer representing the person's self identified nearest. This is linked to the workshops_airport table affiliation A free text field representing the person's self identified institutional affliation. This is not linked to the workshops_organization table. occupation A free text field representing the person's self identified occupation user_notes Free text field with notes from the individual publish_profile A boolean field that acknowledges permission to publish the individual's profile on our website pages such as the Instructors , Trainers , or Maintainers pages country Self identified country of residence. Stored as the two digit country code . lesson_publication_consent Allows individual to consent to publishing their name associated with lesson contributions. Individual can select publication by name, ORCID iD, or GitHub id, or not consent to publishing their name or identity.","title":"Commonly used fields"},{"location":"amy_database_structure/#less-commonly-used-fields","text":"last_login When the user last logged in (regardless of their activity or permissions) is_superuser Boolean field to note whether the person is a superuser , giving them all administrative privileges created_at Autogenerated timestamp when the record is created last_updated_at Autogenerated timestamp when the record was last updated duplication_reviewed_on Timestamp tracking when a potential duplicate individual's record was reviewed is_active A boolean field. Only active users are able to log in to AMY data_privacy_agreement Acknowledges user has read our data policy. Required the first time any user logs in","title":"Less commonly used fields"},{"location":"amy_database_structure/#other-fields","text":"password Not stored as plain text. Do not use or modify this field for anything.","title":"Other fields"},{"location":"amy_database_structure/#memberships","text":"workshops_membership - Stores information about each membership agreement. id Sequential, automatically assigned integer. variant Membership type (Gold, Silver, etc.) agreement_start and agreement_end Membership term start and end dates extended Integer; number of days the membership term end date has been extended by; NULL value indicates no extension contribution_type Financial, Person-days, or Other workshops_without_admin_fee_per_agreement Integer; number of centrally organized workshops allowed workshops_without_admin_fee_rolled_from_previous Integer; number of centrally-organised workshops allowed that was rolled over from previous membership. This should be the same as workshops_without_admin_fee_rolled_over in preceding membership workshops_without_admin_fee_rolled_over Integer; number of centrally-organised workshops allowed that was rolled over to succeeding membership. The same number should be recorded in workshops_without_admin_fee_rolled_from_previous in succeeding membership public_instructor_training_seats Integer; number of public seats allowed in instructor training events in the original contract. additional_public_instructor_training_seats Integer; number of additional public seats allowed in instructor training events beyond the original contract. public_instructor_training_seats_rolled_from_previous Integer; number of public instructor training seats allowed that was rolled over from previous membership. This should be the same as public_instructor_training_seats_rolled_over in preceding membership public_instructor_training_seats_rolled_over Integer; number of public instructor training seats allowed that was rolled over to succeeding membership. The same number should be recorded in public_instructor_training_seats_rolled_from_previous in succeeding membership inhouse_instructor_training_seats Integer; number of in-house seats allowed in instructor training events in the original contract. additional_inhouse_instructor_training_seats Integer; number of additional in-house seats allowed in instructor training events beyond the original contract. inhouse_instructor_training_seats_rolled_from_previous Integer; number of in-house instructor training seats allowed that was rolled over from previous membership. This should be the same as inhouse_instructor_training_seats_rolled_over in preceding membership inhouse_instructor_training_seats_rolled_over Integer; number of in-house instructor training seats allowed that was rolled over to succeeding membership. The same number should be recorded in inhouse_instructor_training_seats_rolled_from_previous in succeeding membership agreement_link A link to the Member agreement in Google Drive registration_code A string representing the code used by the Member site for Eventbrite registration and the instructor training application public_status a string indicating agreement to publicising membership on The Carpentries websites emergency_contact text with emergency contact data for the membership consortium a boolean value indicating consortium (umbrella for more than one organisation member)","title":"Memberships"},{"location":"amy_database_structure/#member","text":"workshops_member - Stores information about organisations and their roles in memberships. id Sequential, automatically assigned integer. membership_id - Integer linking membership instance organization_id - Integer linking organisation instance role_id - Integer linking member role instance","title":"Member"},{"location":"amy_database_structure/#memberrole","text":"workshops_memberrole - Stores roles for organisations in memberships. id Sequential, automatically assigned integer. name string with role's name, e.g. contact_signatory - preferably a computer-friendly format verbose_name string with role's name suitable for humans, e.g. Contact Signatory","title":"MemberRole"},{"location":"amy_database_structure/#membershiptask","text":"fiscal_membershiptask - Stores information about persons and their roles in memberships. id Sequential, automatically assigned integer. membership_id - Integer linking membership instance person_id - Integer linking person instance role_id - Integer linking membership person role instance","title":"MembershipTask"},{"location":"amy_database_structure/#membershippersonrole","text":"fiscal_membershippersonrole - Stores roles for persons in memberships. id Sequential, automatically assigned integer. name string with role's name - preferably a computer-friendly format verbose_name string with role's name suitable for humans","title":"MembershipPersonRole"},{"location":"amy_database_structure/#organizations","text":"workshops_organization - Stores all organizations in AMY. id Sequential, automatically assigned integer. This is used by the host_id and administrator_id fields in the workshops_event table, and the organization_id field in the workshops_membership table. domain Website of the organization fullname Human friendly name of the organization country Stored as the two digit country code latitude and longitude Stored as floating point (decimal) numbers affiliated_organizations Many-to-many relationship between organizations; the purpose of this field is to \"link together\" organisations that in some way are related. For example, \"University of California\" organisation can be linked to \"University of California, Berkeley\", \"University of California, Davis\", and \"University of California, Los Angeles\".","title":"Organizations"},{"location":"amy_database_structure/#additional-tables-in-amy","text":"","title":"Additional Tables in AMY"},{"location":"amy_database_structure/#badges","text":"workshops_badge Lists all available badges (SWC/DC/LC Instructor, Trainer, etc.) id Sequential, automatically assigned integer. This is used by badge_id in the workshops_award table. criteria Description of what this badge is title Verbose, human friendly name of badge (e.g., Software Carpentry Instructor or Trainer ) name \"back-end\" badge name (e.g., swc-instructor , trainer ) workshops_award Connects workshops_badge and workshops_person tables to show what Badges have been awarded to what Persons id Sequential, automatically assigned integer. awarded Date the badge was awarded. This is usually the date it was recorded in AMY, not the date the person completed all requirements. badge_id An integer representing the badge. This is linked to the workshops_badge table event_id An integer representing the event the badge came from. This is linked to the workshops_event table person_id An integer representing the person who got the badge. This is linked to the workshops_person table awarded_by_id An integer representing the person who awarded the badge (entered it in AMY). This is linked to the workshops_person table","title":"Badges"},{"location":"amy_database_structure/#roles","text":"workshops_role Lists all available roles (Instructor, Helper, Learner, etc.) id Sequential, automatically assigned integer. verbose_name Verbose, human friendly name of role (e.g., Workshop host , Supporting Instructor ) name \"back end\" task name (e.g., workshop-host , supporting-instructor ) workshops_task Connects workshops_role , workshops_event , and workshops_person tables to show what what Persons have served in what Roles at what Events id Sequential, automatically assigned integer. event_id An integer representing the event the person was at. This is linked to the workshops_event table person_id An integer representing the person who was at the event. This is linked to the workshops_person table role_id An integer representing the person's role. This is linked to the workshops_person table seat_membership_id Used for Instructor Training Learner role only. An integer representing the membership this seat was assigned to. seat_public Used for Instructor Training Learner role only. Determines if the seat counts as public or in-house for the specific membership. seat_open_training Used for Instructor Training Learner role only. Boolean field noting whether this was an open (non-member) training seat. title and url are not used.","title":"Roles"},{"location":"amy_database_structure/#tags","text":"workshops_tag Lists all availabe tags for an Event (SWC, DC, LC, Online, Pilot, Circuits, etc.) id Sequential, automatically assigned integer. name \"back end\" tag name details Description of what tag is used for priority Used to control the sort order in the AMY web interface. Not relevant for any other queries. workshops_event_tags Connects workshops_tag and workshops_event to show what Tags have been applied to what Events id Sequential, automatically assigned integer. event_id An integer representing the event that got that tag. This is linked to the workshops_event table tag_id An integer representing the tag that was assigned to that event. This is linked to the workshops_tag table.","title":"Tags"},{"location":"amy_database_structure/#training-progress","text":"workshops_trainingrequirement Lists all available steps towards Instructor certification (Training Event, Discussion, etc.) id Sequential, automatically assigned integer. name Name of requirement ( DC Homework , LC Demo , etc.) url_required Notes whether a URL is required for this type of training requirement. This only applies to the Homework (lesson contribution) requirements. event_required Notes whether an event is required for this type of training requirement. This only applies to the Training (the actual event they attended). workshops_trainingprogress Connects workshops_trainingrequirement and workshops_person to show what Persons have completed what steps of the checkout process. id Sequential, automatically assigned integer. created_at and last_updated_at Dates the record was created and last updated. Automatically generated by database. state State of the trainee's progress. Options are pass , fail , not evaluated yet url Only for Homework (lesson contribution) requirement; links to the trainee's GitHub contribution notes Any human generated notes evaluated_by_id id of the user entering this record. This is linked to the workshops_person table event_id id of the event this trainee was at. This is linked to the workshops_event table requirement_id id of the requirement that is being recorded. This is linked to the workshops_trainingrequirement table* trainee_id id of the trainee being evaluated. This is linked to the workshops_person table","title":"Training progress"},{"location":"amy_database_structure/#term","text":"consents_term - Stores all Terms in AMY (i.e. the privary policy).","title":"Term"},{"location":"amy_database_structure/#archive-behavior","text":"When Terms are archived ( archived_at timestamp is set), that Term 's TermOptions and Consents are archived as well. If the Term was required, once archived it is no longer required in AMY.","title":"Archive Behavior"},{"location":"amy_database_structure/#commonly-used-fields_2","text":"slug slug of the term. Used to uniquely identify the term. content content of the term. This text shown to users when they consent. required_type determines whether or not a term is considered required for the user or not. If required it will be shown to the user when they log in to consent to. help_text additional text shown to the user in order to give more context on the term.","title":"Commonly used fields"},{"location":"amy_database_structure/#termoption","text":"consents_termoption - Stores all options for a stored Term in AMY. TermOptions are displayed when the user is asked to consent to a Term , and are considered answer choices for the Term .","title":"TermOption"},{"location":"amy_database_structure/#archive-behavior_1","text":"When TermOptions are archived ( archived_at timestamp is set), any Consents that rely on that option are archived and a new unset Consent is created by AMY for the user. If the Term the option was attached to is required, archiving a TermOption may result in an email sent to any users who answered with this opition.","title":"Archive Behavior"},{"location":"amy_database_structure/#commonly-used-fields_3","text":"term a required foreign key to term. Unarchived term options attached to a term will be displayed to the user when the term is rendered. option_type determines whether or not a term option is considered an affirmative aggrement to the term or the user has declined the term. content the text displayed to the user when the term is rendered. archived_at - a nullable timestamp","title":"Commonly used fields"},{"location":"amy_database_structure/#consent","text":"consents_consent - Stores all consents for all users in AMY.","title":"Consent"},{"location":"amy_database_structure/#archive-behavior_2","text":"When Consents are archived ( archived_at timestamp is set), a new unset consent is created by AMY.","title":"Archive Behavior"},{"location":"amy_database_structure/#commonly-used-fields_4","text":"person - required foreign key to Person . term - required foreign key to Term . Provided for ease of use and reduction of queries. There is a check on the Consent model to ensure the given TermOption belongs to the Term. term_option - a nullable foreign key to TermOption. When this field is null, the Consent is unset. archived_at - a nullable timestamp","title":"Commonly used fields"},{"location":"authors/","text":"Authors Updated on 2021-01-31. These people contributed to AMY: pbanaszkiewicz gvwilson chrismedrela aditnryn wking maneesha sane rbeagrie fmichonneau maneesha sburns neon-ninja staeff drio marwahaha dependabot[bot] shapiromatron shubhsingh594 Raniere Silva Erin Becker carlosp420 jduckles cudevmaxwell nikhilweee prerit2010 darshan95 askingalot Christopher Medrela Jonah Duckles timtomch tracykteal The list was generated using this Python script: import requests URL = \"https://api.github.com/repos/carpentries/amy/contributors?anon=1\" data = requests.get(URL).json() contributors = [ (c.get(\"name\", c.get(\"login\", \"anonymous\")), c.get(\"html_url\")) for c in data ] for login, url in contributors: if url: print(f'* [{login}]({url})') else: print(f'* {login}')","title":"Authors"},{"location":"authors/#authors","text":"Updated on 2021-01-31. These people contributed to AMY: pbanaszkiewicz gvwilson chrismedrela aditnryn wking maneesha sane rbeagrie fmichonneau maneesha sburns neon-ninja staeff drio marwahaha dependabot[bot] shapiromatron shubhsingh594 Raniere Silva Erin Becker carlosp420 jduckles cudevmaxwell nikhilweee prerit2010 darshan95 askingalot Christopher Medrela Jonah Duckles timtomch tracykteal The list was generated using this Python script: import requests URL = \"https://api.github.com/repos/carpentries/amy/contributors?anon=1\" data = requests.get(URL).json() contributors = [ (c.get(\"name\", c.get(\"login\", \"anonymous\")), c.get(\"html_url\")) for c in data ] for login, url in contributors: if url: print(f'* [{login}]({url})') else: print(f'* {login}')","title":"Authors"},{"location":"models_in_applications/","text":"Models hierarchy according to application and versioning system For a long time, AMY was almost single-application project: most of the logic, models and views was contained in workshops application; there was also api application and extforms for showing forms to the external users. In the meantime, workshops grew to a massive size and needed splitting into smaller applications. However, some previous design decisions made the split complicated. Namely versioning system, provided by [django-reversion][], due to [model instance serialization][], is not flexible when it comes to data migration, and very hard when it comes to underlying model move to another app. Not all models have versioning system enabled. Those that don't were moved to corresponding applications. The new application structure contains: * api - as previously for API, * dashboard - for admin and trainee dashboard views, * extforms - as previously for forms available externally, ie. for unauthenticated users, * extrequests - for all *Request objects ( EventRequest , EventSubmission , DCSelfOrganizedEventRequest , ~~ ProfileUpdateRequest ~~, ~~ InvoiceRequest ~~ - by the way all these models are deprecated and to be removed in future - WorkshopRequest , and TrainingRequest ), * fiscal - for organisations and memberships, * reports - for reports, * trainings - for managing trainees and trainings, * workshops - for persons and workshops management, including tasks and badges. workshops application still takes a lead in many areas, and for now should be considered \"core\" application. For example it defines many reusable classes, like TestBase for base test case, or multiple model mixins. Versioned models Below you'll find list of models with versioning enabled; they were originally in the workshops application and stayed there. Their logical belonging is indicated in this tree below. extrequests : TrainingRequest , WorkshopRequest , non-versioned, but their removal causes huge problems with migration, since they're referenced by WorkshopRequest : AcademicLevel , ComputingExperienceLevel , fiscal : Membership , Organization , trainings : TrainingRequirement , TrainingProgress , workshops : Airport , Person , Event , Task . Non-versioned models Below you'll find list of models without versioning system; they were originally created in the workshops application, but were moved to the corresponding apps. extrequests : DataAnalysisLevel , DCWorkshopTopic , DCWorkshopDomain , ~~ ProfileUpdateRequest ~~, EventRequest , EventSubmission , DCSelfOrganizedEventRequest , fiscal : no models trainings : no models workshops : Language , Lesson , Qualification , Badge , Award , Curriculum , Role , Tag , KnowledgeDomain .","title":"Models hierarchy according to application and versioning system"},{"location":"models_in_applications/#models-hierarchy-according-to-application-and-versioning-system","text":"For a long time, AMY was almost single-application project: most of the logic, models and views was contained in workshops application; there was also api application and extforms for showing forms to the external users. In the meantime, workshops grew to a massive size and needed splitting into smaller applications. However, some previous design decisions made the split complicated. Namely versioning system, provided by [django-reversion][], due to [model instance serialization][], is not flexible when it comes to data migration, and very hard when it comes to underlying model move to another app. Not all models have versioning system enabled. Those that don't were moved to corresponding applications. The new application structure contains: * api - as previously for API, * dashboard - for admin and trainee dashboard views, * extforms - as previously for forms available externally, ie. for unauthenticated users, * extrequests - for all *Request objects ( EventRequest , EventSubmission , DCSelfOrganizedEventRequest , ~~ ProfileUpdateRequest ~~, ~~ InvoiceRequest ~~ - by the way all these models are deprecated and to be removed in future - WorkshopRequest , and TrainingRequest ), * fiscal - for organisations and memberships, * reports - for reports, * trainings - for managing trainees and trainings, * workshops - for persons and workshops management, including tasks and badges. workshops application still takes a lead in many areas, and for now should be considered \"core\" application. For example it defines many reusable classes, like TestBase for base test case, or multiple model mixins.","title":"Models hierarchy according to application and versioning system"},{"location":"models_in_applications/#versioned-models","text":"Below you'll find list of models with versioning enabled; they were originally in the workshops application and stayed there. Their logical belonging is indicated in this tree below. extrequests : TrainingRequest , WorkshopRequest , non-versioned, but their removal causes huge problems with migration, since they're referenced by WorkshopRequest : AcademicLevel , ComputingExperienceLevel , fiscal : Membership , Organization , trainings : TrainingRequirement , TrainingProgress , workshops : Airport , Person , Event , Task .","title":"Versioned models"},{"location":"models_in_applications/#non-versioned-models","text":"Below you'll find list of models without versioning system; they were originally created in the workshops application, but were moved to the corresponding apps. extrequests : DataAnalysisLevel , DCWorkshopTopic , DCWorkshopDomain , ~~ ProfileUpdateRequest ~~, EventRequest , EventSubmission , DCSelfOrganizedEventRequest , fiscal : no models trainings : no models workshops : Language , Lesson , Qualification , Badge , Award , Curriculum , Role , Tag , KnowledgeDomain .","title":"Non-versioned models"},{"location":"procedures/","text":"Procedures Specifying a milestone (version) AMY follows Semantic Versioning when possible; however, since this is a web application and not a library, we have come up with these rules to bumping versions: hotfix or a fix release: bump patch version normal release: bump minor version major changes (e.g. big project gets merged): bump major version. In future, once CI/CD is implemented, we may consider switching to commitizen which will help with generating changelogs and bumping versions accordingly. Milestone name should indicate the release version . For example, if next release is v3.15.0 , then the milestone collecting issues and PRs should be named v3.15 or v3.15.0 . On the End of Each Milestone Close milestone using GitHub UI . Write down release notes and add it to the repository in docs/releases directory. Release notes should have two sections: new features and bugfixes, each one enumerating changes and mentioning their authors. Base your work on the list of all closed pull requests for given milestone, available on GitHub. Follow Release Procedure . Follow Deployment Procedure . Write to amy@lists.carpentries.org mailing list. The suggested subject of the new thread is \"[AMY] New release v2.X.Y\". Release Procedure We assume that you want to release AMY v2.X.Y. Execute the following commands on your local machine, not production. Move to AMY root directory (the one with manage.py file) using cd command. Make sure you have configured repositories: origin for your repository on GitHub upstream for carpentries/amy repo on GitHub For example, this is the correct configuration for chrismedrela : $ git remote -v origin git@github.com:chrismedrela/amy.git (fetch) origin git@github.com:chrismedrela/amy.git (push) upstream git@github.com:carpentries/amy.git (fetch) upstream git@github.com:carpentries/amy.git (push) Make sure your local develop and main branches are up to date: $ git checkout develop $ git pull upstream develop $ git push origin develop $ git checkout main $ git pull upstream main $ git push origin main Pushes to your origin remote are optional. Merge develop into main branch (be careful, as there are sometimes conflicts that need to be manually resolved): $ git checkout main $ git merge --no-ff develop Bump version on main (non-dev version corresponding to the milestone): $ # manually edit version in `amy/__init__.py` and `package.json` $ # use non-dev version string, e.g. `\"v3.3.0\"` $ git add amy/__init__.py package.json $ git commit -m \"Bumping version to vX.Y.0\" Just to be safe, run tests: $ make test Tag a release. $ git tag -a \"vX.Y.0\" -s -m \"AMY release vX.Y.0\" Omit -s flag if you cannot create signed tags. See Git documentation for more info about signed tags. Push main and the new tag everywhere: $ git push origin main --tags $ git push upstream main --tags Bump version on develop (dev version corresponding to the milestone): $ git checkout develop $ # manually edit version in `amy/__init__.py` and `package.json` $ # use dev version string, e.g. `\"v3.4.0-dev\"` $ git add amy/__init__.py package.json $ git commit -m \"Bumping version to vX.Y.0-dev\" This step is only needed if next development cycle begins (ie. no hotfix release was done). And push it everywhere: $ git push upstream develop $ git push origin develop Deployment procedure using Ansible Moved to relevant repository README.md .","title":"Procedures"},{"location":"procedures/#procedures","text":"","title":"Procedures"},{"location":"procedures/#specifying-a-milestone-version","text":"AMY follows Semantic Versioning when possible; however, since this is a web application and not a library, we have come up with these rules to bumping versions: hotfix or a fix release: bump patch version normal release: bump minor version major changes (e.g. big project gets merged): bump major version. In future, once CI/CD is implemented, we may consider switching to commitizen which will help with generating changelogs and bumping versions accordingly. Milestone name should indicate the release version . For example, if next release is v3.15.0 , then the milestone collecting issues and PRs should be named v3.15 or v3.15.0 .","title":"Specifying a milestone (version)"},{"location":"procedures/#on-the-end-of-each-milestone","text":"Close milestone using GitHub UI . Write down release notes and add it to the repository in docs/releases directory. Release notes should have two sections: new features and bugfixes, each one enumerating changes and mentioning their authors. Base your work on the list of all closed pull requests for given milestone, available on GitHub. Follow Release Procedure . Follow Deployment Procedure . Write to amy@lists.carpentries.org mailing list. The suggested subject of the new thread is \"[AMY] New release v2.X.Y\".","title":"On the End of Each Milestone"},{"location":"procedures/#release-procedure","text":"We assume that you want to release AMY v2.X.Y. Execute the following commands on your local machine, not production. Move to AMY root directory (the one with manage.py file) using cd command. Make sure you have configured repositories: origin for your repository on GitHub upstream for carpentries/amy repo on GitHub For example, this is the correct configuration for chrismedrela : $ git remote -v origin git@github.com:chrismedrela/amy.git (fetch) origin git@github.com:chrismedrela/amy.git (push) upstream git@github.com:carpentries/amy.git (fetch) upstream git@github.com:carpentries/amy.git (push) Make sure your local develop and main branches are up to date: $ git checkout develop $ git pull upstream develop $ git push origin develop $ git checkout main $ git pull upstream main $ git push origin main Pushes to your origin remote are optional. Merge develop into main branch (be careful, as there are sometimes conflicts that need to be manually resolved): $ git checkout main $ git merge --no-ff develop Bump version on main (non-dev version corresponding to the milestone): $ # manually edit version in `amy/__init__.py` and `package.json` $ # use non-dev version string, e.g. `\"v3.3.0\"` $ git add amy/__init__.py package.json $ git commit -m \"Bumping version to vX.Y.0\" Just to be safe, run tests: $ make test Tag a release. $ git tag -a \"vX.Y.0\" -s -m \"AMY release vX.Y.0\" Omit -s flag if you cannot create signed tags. See Git documentation for more info about signed tags. Push main and the new tag everywhere: $ git push origin main --tags $ git push upstream main --tags Bump version on develop (dev version corresponding to the milestone): $ git checkout develop $ # manually edit version in `amy/__init__.py` and `package.json` $ # use dev version string, e.g. `\"v3.4.0-dev\"` $ git add amy/__init__.py package.json $ git commit -m \"Bumping version to vX.Y.0-dev\" This step is only needed if next development cycle begins (ie. no hotfix release was done). And push it everywhere: $ git push upstream develop $ git push origin develop","title":"Release Procedure"},{"location":"procedures/#deployment-procedure-using-ansible","text":"Moved to relevant repository README.md .","title":"Deployment procedure using Ansible"},{"location":"sending_mails/","text":"Sending mails Command It's possible to send annual \"check your AMY data\" mail to all instructors with following command: ./manage.py instructor_activity . Parameters This command uses optional arguments: --send-out-for-real : You need to use this to really send the emails. --no-may-contact-only : By default, the command only send mails to people who agreed to receive them ( may_contact == True ). Setting this argument, the command will mail all of our instructors. --django-mailing : This switch changes underlying sending mechanism. By default it uses mail UNIX command. See Sending for more information. -s SENDER --sender SENDER : Set \"From: \" field value. Default is workshops@carpentries.org . Sending There are two mechanisms that instructor_activity can use. UNIX mail command The way we use this command: mail -s \"{subject}\" -r {sender} {recipient} < {message} Django mailing system Django requires setting some envvars in order to send emails. AMY_DEBUG=false : required in order to send emails not to /dev/null AMY_SECRET_KEY : probably must have any string value AMY_RECAPTCHA_PUBLIC_KEY : must be present when not in debugging mode AMY_RECAPTCHA_PRIVATE_KEY : must be present when not in debugging mode AMY_EMAIL_HOST : SMTP server address AMY_EMAIL_HOST_USER : SMTP user AMY_EMAIL_HOST_PASSWORD : SMTP password AMY_EMAIL_PORT=587 : default port for TLS SMTP AMY_EMAIL_USE_TLS='true' Example usage: AMY_SECRET_KEY='asdasdasd' AMY_DEBUG=false \\ AMY_RECAPTCHA_PUBLIC_KEY='asdasdasd' AMY_RECAPTCHA_PRIVATE_KEY='asdasdasd' \\ AMY_EMAIL_HOST='smtp.gmail.com' \\ AMY_EMAIL_HOST_USER='amy-noreply@gmail.com' \\ AMY_EMAIL_HOST_PASSWORD='a very hard password' \\ AMY_EMAIL_PORT=587 AMY_EMAIL_USE_TLS='true' \\ ./manage.py instructor_activity --django-mailing --send-out-for-real","title":"Sending Mails"},{"location":"sending_mails/#sending-mails","text":"","title":"Sending mails"},{"location":"sending_mails/#command","text":"It's possible to send annual \"check your AMY data\" mail to all instructors with following command: ./manage.py instructor_activity .","title":"Command"},{"location":"sending_mails/#parameters","text":"This command uses optional arguments: --send-out-for-real : You need to use this to really send the emails. --no-may-contact-only : By default, the command only send mails to people who agreed to receive them ( may_contact == True ). Setting this argument, the command will mail all of our instructors. --django-mailing : This switch changes underlying sending mechanism. By default it uses mail UNIX command. See Sending for more information. -s SENDER --sender SENDER : Set \"From: \" field value. Default is workshops@carpentries.org .","title":"Parameters"},{"location":"sending_mails/#sending","text":"There are two mechanisms that instructor_activity can use.","title":"Sending"},{"location":"sending_mails/#unix-mail-command","text":"The way we use this command: mail -s \"{subject}\" -r {sender} {recipient} < {message}","title":"UNIX mail command"},{"location":"sending_mails/#django-mailing-system","text":"Django requires setting some envvars in order to send emails. AMY_DEBUG=false : required in order to send emails not to /dev/null AMY_SECRET_KEY : probably must have any string value AMY_RECAPTCHA_PUBLIC_KEY : must be present when not in debugging mode AMY_RECAPTCHA_PRIVATE_KEY : must be present when not in debugging mode AMY_EMAIL_HOST : SMTP server address AMY_EMAIL_HOST_USER : SMTP user AMY_EMAIL_HOST_PASSWORD : SMTP password AMY_EMAIL_PORT=587 : default port for TLS SMTP AMY_EMAIL_USE_TLS='true' Example usage: AMY_SECRET_KEY='asdasdasd' AMY_DEBUG=false \\ AMY_RECAPTCHA_PUBLIC_KEY='asdasdasd' AMY_RECAPTCHA_PRIVATE_KEY='asdasdasd' \\ AMY_EMAIL_HOST='smtp.gmail.com' \\ AMY_EMAIL_HOST_USER='amy-noreply@gmail.com' \\ AMY_EMAIL_HOST_PASSWORD='a very hard password' \\ AMY_EMAIL_PORT=587 AMY_EMAIL_USE_TLS='true' \\ ./manage.py instructor_activity --django-mailing --send-out-for-real","title":"Django mailing system"},{"location":"user_guide/","text":"User Guide Names Use local names (e.g., Uniwersytet w Bia\u0142ymstoku) for locations rather than anglicized names (e.g., University of Bialystok), but stick to something close to the Latin alphabet (no Cyrillic or kanji). New users Only people with admin privileges should be able to log in, so when you create a new user, even though you've specified a password for that user, they won't be able to log in. May contact The \"may contact\" box on the Person record indicates whether we're allowed to mail people \u2014 some people don't want to be contacted. For this reason, some listings of people don't show emails sometimes (because people didn't let us contact them). Publishing events Events will be published automatically (with a delay up to 1 hour) on Software-Carpentry's website when following conditions are met: they have a starting date they have a URL they have location (country, venue, address, latitude and longitude)","title":"User Guide"},{"location":"user_guide/#user-guide","text":"","title":"User Guide"},{"location":"user_guide/#names","text":"Use local names (e.g., Uniwersytet w Bia\u0142ymstoku) for locations rather than anglicized names (e.g., University of Bialystok), but stick to something close to the Latin alphabet (no Cyrillic or kanji).","title":"Names"},{"location":"user_guide/#new-users","text":"Only people with admin privileges should be able to log in, so when you create a new user, even though you've specified a password for that user, they won't be able to log in.","title":"New users"},{"location":"user_guide/#may-contact","text":"The \"may contact\" box on the Person record indicates whether we're allowed to mail people \u2014 some people don't want to be contacted. For this reason, some listings of people don't show emails sometimes (because people didn't let us contact them).","title":"May contact"},{"location":"user_guide/#publishing-events","text":"Events will be published automatically (with a delay up to 1 hour) on Software-Carpentry's website when following conditions are met: they have a starting date they have a URL they have location (country, venue, address, latitude and longitude)","title":"Publishing events"},{"location":"database/migration/","text":"Migration from SQLite to PostgreSQL Clear PostgreSQL database with drop/create commands or with manage.py : DROP SCHEMA public CASCADE; CREATE SCHEMA public; or $ DATABASE_URL=postgresql://amy:...@.../amy python manage.py reset_db Migrate the new server with latest migrations: $ DATABASE_URL=postgresql://amy:...@.../amy python manage.py migrate Some of the migrations have data migrations, and create entries in the database. The same data will be included in the database dump from SQLite, so one way to work around this issue is to flush the database (remove existing data): $ DATABASE_URL=postgresql://amy:...@.../amy python manage.py flush Flushing doesn't affect installed permissions, content types and sites. They need to be cleaned individually: TRUNCATE auth_permission CASCADE; TRUNCATE django_site CASCADE; TRUNCATE django_content_type CASCADE; All these three will be brought back with separate dump. WARNING! Don't remove migration data from django_migration table. Make latest backup of SQLite database: $ cd /webapps/amy.carpentries.org/repo/ && sqlite3 db.sqlite3 \".backup newest_backup.sqlite3\" Prepare data dump with Django: $ DATABASE_URL=sqlite:///newest_backup.sqlite3 python manage.py dumpdata contenttypes auth.permission sites --indent 1 > data_others.json $ DATABASE_URL=sqlite:///newest_backup.sqlite3 python manage.py dumpdata -e contenttypes -e auth.permission -e sites --indent 1 > data.json Load the first dump into PostgreSQL: $ DATABASE_URL=postgresql://amy:...@.../amy python manage.py loaddata data_others.json Verify the number of objects installed: 311. Load the second dump into PostgreSQL: $ DATABASE_URL=postgresql://amy:...@.../amy python manage.py loaddata data.json Verify the number of objects installed: 353514 (or more).","title":"Migration from SQLite to PostgreSQL"},{"location":"database/migration/#migration-from-sqlite-to-postgresql","text":"Clear PostgreSQL database with drop/create commands or with manage.py : DROP SCHEMA public CASCADE; CREATE SCHEMA public; or $ DATABASE_URL=postgresql://amy:...@.../amy python manage.py reset_db Migrate the new server with latest migrations: $ DATABASE_URL=postgresql://amy:...@.../amy python manage.py migrate Some of the migrations have data migrations, and create entries in the database. The same data will be included in the database dump from SQLite, so one way to work around this issue is to flush the database (remove existing data): $ DATABASE_URL=postgresql://amy:...@.../amy python manage.py flush Flushing doesn't affect installed permissions, content types and sites. They need to be cleaned individually: TRUNCATE auth_permission CASCADE; TRUNCATE django_site CASCADE; TRUNCATE django_content_type CASCADE; All these three will be brought back with separate dump. WARNING! Don't remove migration data from django_migration table. Make latest backup of SQLite database: $ cd /webapps/amy.carpentries.org/repo/ && sqlite3 db.sqlite3 \".backup newest_backup.sqlite3\" Prepare data dump with Django: $ DATABASE_URL=sqlite:///newest_backup.sqlite3 python manage.py dumpdata contenttypes auth.permission sites --indent 1 > data_others.json $ DATABASE_URL=sqlite:///newest_backup.sqlite3 python manage.py dumpdata -e contenttypes -e auth.permission -e sites --indent 1 > data.json Load the first dump into PostgreSQL: $ DATABASE_URL=postgresql://amy:...@.../amy python manage.py loaddata data_others.json Verify the number of objects installed: 311. Load the second dump into PostgreSQL: $ DATABASE_URL=postgresql://amy:...@.../amy python manage.py loaddata data.json Verify the number of objects installed: 353514 (or more).","title":"Migration from SQLite to PostgreSQL"},{"location":"design/","text":"AMY Design Notes This document includes details on implementation of AMY internals. Table of contents: Database models (to be moved to docstrings in workshops/models.py ) Templates hierarchy Views hierarchy Server infrastructure","title":"Design"},{"location":"design/#amy-design-notes","text":"This document includes details on implementation of AMY internals. Table of contents: Database models (to be moved to docstrings in workshops/models.py ) Templates hierarchy Views hierarchy Server infrastructure","title":"AMY Design Notes"},{"location":"design/database_models/","text":"Database models This document describes and summarizes roles of database models used in AMY ( workshops/models.py ). Mixins Following classes are used to extend Django models with the same features: PermissionsMixin : Django mechanism for extending custom user classes, see documentation . AssignmentMixin : adds assigned_to field to the model. ActiveMixin : adds active boolean field to the model. CreatedUpdatedMixin : adds created_at and last_updated_at datetime fields to the model. Reversion mechanism Some of the models are using a @reversion.register decorator. This decorator comes from a django-reversion package indended for storing and easily restoring of historic \"versions\" of model instances. Auxiliary functions and models django-countries ( documentation ) is used for location purposes within Airport , Organization and Event -related models. django-airports was considered for implementing world-wide airports, but it turned out it required geo extensions to the database. An is_admin function defined within models is used for determining if a person has administration role. People who are superusers (in terms of Django authentication system) or belong to one of administrative groups (again in terms of Django authentication system), including \"administrators\", \"steering committee\", \"trainers\" and \"invoicing\", are thought to be administrators. User management and authentication A custom user model ( Person ) was defined according to Django documentation. Base models Organization Membership Airport Person and PersonManager Event Role Task and TaskManager Lesson Qualification Badge Award KnowledgeDomain Tag Language Requests and form-models EventRequest EventSubmission DCSelfOrganizedEventRequest AcademicLevel ComputingExperienceLevel DataAnalysisLevel DCWorkshopTopic DCWorkshopDomain Training-connected models TrainingRequest TrainingRequirement TrainingProgress Query sets TagQuerySet EventQuerySet BadgeQuerySet Deprecated TodoItemQuerySet TodoItem","title":"Database Models"},{"location":"design/database_models/#database-models","text":"This document describes and summarizes roles of database models used in AMY ( workshops/models.py ).","title":"Database models"},{"location":"design/database_models/#mixins","text":"Following classes are used to extend Django models with the same features: PermissionsMixin : Django mechanism for extending custom user classes, see documentation . AssignmentMixin : adds assigned_to field to the model. ActiveMixin : adds active boolean field to the model. CreatedUpdatedMixin : adds created_at and last_updated_at datetime fields to the model.","title":"Mixins"},{"location":"design/database_models/#reversion-mechanism","text":"Some of the models are using a @reversion.register decorator. This decorator comes from a django-reversion package indended for storing and easily restoring of historic \"versions\" of model instances.","title":"Reversion mechanism"},{"location":"design/database_models/#auxiliary-functions-and-models","text":"django-countries ( documentation ) is used for location purposes within Airport , Organization and Event -related models. django-airports was considered for implementing world-wide airports, but it turned out it required geo extensions to the database. An is_admin function defined within models is used for determining if a person has administration role. People who are superusers (in terms of Django authentication system) or belong to one of administrative groups (again in terms of Django authentication system), including \"administrators\", \"steering committee\", \"trainers\" and \"invoicing\", are thought to be administrators.","title":"Auxiliary functions and models"},{"location":"design/database_models/#user-management-and-authentication","text":"A custom user model ( Person ) was defined according to Django documentation.","title":"User management and authentication"},{"location":"design/database_models/#base-models","text":"","title":"Base models"},{"location":"design/database_models/#organization","text":"","title":"Organization"},{"location":"design/database_models/#membership","text":"","title":"Membership"},{"location":"design/database_models/#airport","text":"","title":"Airport"},{"location":"design/database_models/#person-and-personmanager","text":"","title":"Person and PersonManager"},{"location":"design/database_models/#event","text":"","title":"Event"},{"location":"design/database_models/#role","text":"","title":"Role"},{"location":"design/database_models/#task-and-taskmanager","text":"","title":"Task and TaskManager"},{"location":"design/database_models/#lesson","text":"","title":"Lesson"},{"location":"design/database_models/#qualification","text":"","title":"Qualification"},{"location":"design/database_models/#badge","text":"","title":"Badge"},{"location":"design/database_models/#award","text":"","title":"Award"},{"location":"design/database_models/#knowledgedomain","text":"","title":"KnowledgeDomain"},{"location":"design/database_models/#tag","text":"","title":"Tag"},{"location":"design/database_models/#language","text":"","title":"Language"},{"location":"design/database_models/#requests-and-form-models","text":"","title":"Requests and form-models"},{"location":"design/database_models/#eventrequest","text":"","title":"EventRequest"},{"location":"design/database_models/#eventsubmission","text":"","title":"EventSubmission"},{"location":"design/database_models/#dcselforganizedeventrequest","text":"","title":"DCSelfOrganizedEventRequest"},{"location":"design/database_models/#academiclevel","text":"","title":"AcademicLevel"},{"location":"design/database_models/#computingexperiencelevel","text":"","title":"ComputingExperienceLevel"},{"location":"design/database_models/#dataanalysislevel","text":"","title":"DataAnalysisLevel"},{"location":"design/database_models/#dcworkshoptopic","text":"","title":"DCWorkshopTopic"},{"location":"design/database_models/#dcworkshopdomain","text":"","title":"DCWorkshopDomain"},{"location":"design/database_models/#training-connected-models","text":"","title":"Training-connected models"},{"location":"design/database_models/#trainingrequest","text":"","title":"TrainingRequest"},{"location":"design/database_models/#trainingrequirement","text":"","title":"TrainingRequirement"},{"location":"design/database_models/#trainingprogress","text":"","title":"TrainingProgress"},{"location":"design/database_models/#query-sets","text":"","title":"Query sets"},{"location":"design/database_models/#tagqueryset","text":"","title":"TagQuerySet"},{"location":"design/database_models/#eventqueryset","text":"","title":"EventQuerySet"},{"location":"design/database_models/#badgequeryset","text":"","title":"BadgeQuerySet"},{"location":"design/database_models/#deprecated","text":"","title":"Deprecated"},{"location":"design/database_models/#todoitemqueryset","text":"","title":"TodoItemQuerySet"},{"location":"design/database_models/#todoitem","text":"","title":"TodoItem"},{"location":"design/server_infrastructure/","text":"Server infrastructure AMY is hosted by the Software Carpentry Foundation on Rackspace server. WWW server AMY is hosted by Nginx and has 4 roles: handles TLS handles static files at /static serves a Django application through uWSGI (working as a proxy) serves a maintenance page when upstream proxy is not available, for example during upgrade. Nginx configuration is similar to vhost-like Apache configuration. The web server was installed through Ubuntu repositories and should start automatically with system's boot. With service nginx it's possible to control the server's behavior. All configuration is stored in /etc/nginx , but AMY-related config files (for example a site/vhost configuration file) are symlinked. All Nginx AMY-related configuration is stored in AMY catalog. Both Nginx and uWSGI run as separate users and separate groups. Nginx logs are located in /var/log/nginx/ . uWSGI AMY, as a WSGI application, is run by uWSGI in an emperor-mode . In this mode, uWSGI creates a fixed number of AMY processes based on a configuration file amy_uwsgi.ini . Additionally it watches this file, and upon detecting any changes, it automatically reloads the whole application, which makes it easy to bring changes to the production. There's a special script, /etc/init/uwsgi-emperor.conf , that helps manage uWSGI with initctl manager. It provides for example these commands: start uwsgi-emperor stop uwsgi-emperor All the uWSGI configuration is stored in AMY catalog. uWSGI logs are located in /etc/uwsgi/emperor.log and in AMY catalog. AMY catalog In amy_site (AMY catalog) there are stored: amy - application source from Git amy.log.gz - compressed log file amy_nginx.conf - Nginx site configuration for AMY amy.pid , amy.sock - uWSGI-generated files amy_uwsgi.ini - uWSGI configuration file static_html - a maintenace page catalog uwsgi_env - file with all environment variables required to run AMY (one variable per line); this file is read in by uWSGI venv - a Python virtual environment catalog. Virtual environment To get into AMY's virtual environment, issue source ~/amy_site/venv/bin/activate . You should now be able to control installed Python packages. The standard deployment procedure is documented in a separate file. Database server There is none. AMY uses SQLite database, so the only database file that's important lives in AMY's installation directory. Plans to migrate to PostgreSQL database server were ceased due to bigger development efforts for beginners, but should they be reconsidered, the database server may need to be on a separate machine. Backup will require adjusting to the new database server. Backup For now, only the database is being backed-up. There aren't any other assets like user-uploaded graphics that would require a regular copy. Since currently the whole AMY database is contained in a single file, the backup process is done with a simple scp amy_server:path_to_db_file ./current_time command. It copies the remote database file into local directory while adjusting file's name to contain current timestamp. There are two backup servers running, both in different locations than AMY server. Backup is being made every 1 hour on both, but the offset is different: one server backs-up on 1:00, 2:00, 3:00, etc., the other backs-up on 1:30, 2:30, 3:30, etc.","title":"Server Infrastructure"},{"location":"design/server_infrastructure/#server-infrastructure","text":"AMY is hosted by the Software Carpentry Foundation on Rackspace server.","title":"Server infrastructure"},{"location":"design/server_infrastructure/#www-server","text":"AMY is hosted by Nginx and has 4 roles: handles TLS handles static files at /static serves a Django application through uWSGI (working as a proxy) serves a maintenance page when upstream proxy is not available, for example during upgrade. Nginx configuration is similar to vhost-like Apache configuration. The web server was installed through Ubuntu repositories and should start automatically with system's boot. With service nginx it's possible to control the server's behavior. All configuration is stored in /etc/nginx , but AMY-related config files (for example a site/vhost configuration file) are symlinked. All Nginx AMY-related configuration is stored in AMY catalog. Both Nginx and uWSGI run as separate users and separate groups. Nginx logs are located in /var/log/nginx/ .","title":"WWW server"},{"location":"design/server_infrastructure/#uwsgi","text":"AMY, as a WSGI application, is run by uWSGI in an emperor-mode . In this mode, uWSGI creates a fixed number of AMY processes based on a configuration file amy_uwsgi.ini . Additionally it watches this file, and upon detecting any changes, it automatically reloads the whole application, which makes it easy to bring changes to the production. There's a special script, /etc/init/uwsgi-emperor.conf , that helps manage uWSGI with initctl manager. It provides for example these commands: start uwsgi-emperor stop uwsgi-emperor All the uWSGI configuration is stored in AMY catalog. uWSGI logs are located in /etc/uwsgi/emperor.log and in AMY catalog.","title":"uWSGI"},{"location":"design/server_infrastructure/#amy-catalog","text":"In amy_site (AMY catalog) there are stored: amy - application source from Git amy.log.gz - compressed log file amy_nginx.conf - Nginx site configuration for AMY amy.pid , amy.sock - uWSGI-generated files amy_uwsgi.ini - uWSGI configuration file static_html - a maintenace page catalog uwsgi_env - file with all environment variables required to run AMY (one variable per line); this file is read in by uWSGI venv - a Python virtual environment catalog.","title":"AMY catalog"},{"location":"design/server_infrastructure/#virtual-environment","text":"To get into AMY's virtual environment, issue source ~/amy_site/venv/bin/activate . You should now be able to control installed Python packages. The standard deployment procedure is documented in a separate file.","title":"Virtual environment"},{"location":"design/server_infrastructure/#database-server","text":"There is none. AMY uses SQLite database, so the only database file that's important lives in AMY's installation directory. Plans to migrate to PostgreSQL database server were ceased due to bigger development efforts for beginners, but should they be reconsidered, the database server may need to be on a separate machine. Backup will require adjusting to the new database server.","title":"Database server"},{"location":"design/server_infrastructure/#backup","text":"For now, only the database is being backed-up. There aren't any other assets like user-uploaded graphics that would require a regular copy. Since currently the whole AMY database is contained in a single file, the backup process is done with a simple scp amy_server:path_to_db_file ./current_time command. It copies the remote database file into local directory while adjusting file's name to contain current timestamp. There are two backup servers running, both in different locations than AMY server. Backup is being made every 1 hour on both, but the offset is different: one server backs-up on 1:00, 2:00, 3:00, etc., the other backs-up on 1:30, 2:30, 3:30, etc.","title":"Backup"},{"location":"design/template_hierarchy/","text":"Template hierarchy Here's a description of base templates, which almost all the other templates inherit from. Base templates All templates use fluid container from Bootstrap 4.1 . There are multiple types of views in AMY: wide (e.g. 'Dashboard') -- base_nav.html , wide with sidebar (e.g. 'All Events') -- base_nav_sidebar.html , wide with two content columns (e.g. EventRequest accept view, rarely used) -- base_nav_twocolumn.html . These templates all inherit from base.html , which holds the HTML structure, includes CSS styles and JS code, displays messages, footer, etc. The base_nav.html is nothing more but base.html extended with a navigation. Navigation changes depending on user - one navigation bar ( navigation.html ) exists for admin users, a different one ( navigation_trainee.html ) exists for trainees. A correct navigation bar is being included in base_nav.html . Blocks available in base template Django template blocks used in base.html template: extrastyle in <head> , when you need to load some additional CSS files or embed styles right into the page, extrajs in <head> , for loading additional JavaScript files / codes, navbar used in templates that include a navigation bar, main with all the main content in case someone really needs to change it (caution: quite a lot is going on in this block, make sure you don't brake it), leftcolumn for adding a sidebar or a column (used in base_nav_sidebar.html and base_nav_twocolumn.html ), maincolumn for changing main content column grid, logo used in views that display AMY logo (login page, log out page, password reset, etc.), title to display <h1> tag with page title, content for displaying page content. Widgets Additionally there were created widgets to support some of the tedious components: assignment.html displays a dropdown to change filtering events assigned to specific person (user, unassigned, or no filtering), assignment_modal.html displays a modal \"window\" on the page; this window is used to select person assigned to specified object, pagination.html displays a neat button groups split with \"...\" to not show too much pages at once.","title":"Template Hierarchy"},{"location":"design/template_hierarchy/#template-hierarchy","text":"Here's a description of base templates, which almost all the other templates inherit from.","title":"Template hierarchy"},{"location":"design/template_hierarchy/#base-templates","text":"All templates use fluid container from Bootstrap 4.1 . There are multiple types of views in AMY: wide (e.g. 'Dashboard') -- base_nav.html , wide with sidebar (e.g. 'All Events') -- base_nav_sidebar.html , wide with two content columns (e.g. EventRequest accept view, rarely used) -- base_nav_twocolumn.html . These templates all inherit from base.html , which holds the HTML structure, includes CSS styles and JS code, displays messages, footer, etc. The base_nav.html is nothing more but base.html extended with a navigation. Navigation changes depending on user - one navigation bar ( navigation.html ) exists for admin users, a different one ( navigation_trainee.html ) exists for trainees. A correct navigation bar is being included in base_nav.html .","title":"Base templates"},{"location":"design/template_hierarchy/#blocks-available-in-base-template","text":"Django template blocks used in base.html template: extrastyle in <head> , when you need to load some additional CSS files or embed styles right into the page, extrajs in <head> , for loading additional JavaScript files / codes, navbar used in templates that include a navigation bar, main with all the main content in case someone really needs to change it (caution: quite a lot is going on in this block, make sure you don't brake it), leftcolumn for adding a sidebar or a column (used in base_nav_sidebar.html and base_nav_twocolumn.html ), maincolumn for changing main content column grid, logo used in views that display AMY logo (login page, log out page, password reset, etc.), title to display <h1> tag with page title, content for displaying page content.","title":"Blocks available in base template"},{"location":"design/template_hierarchy/#widgets","text":"Additionally there were created widgets to support some of the tedious components: assignment.html displays a dropdown to change filtering events assigned to specific person (user, unassigned, or no filtering), assignment_modal.html displays a modal \"window\" on the page; this window is used to select person assigned to specified object, pagination.html displays a neat button groups split with \"...\" to not show too much pages at once.","title":"Widgets"},{"location":"releases/","text":"Release notes Release notes since v0.9.1 to v1.8.0 were taken from Piotr Banaszkiewicz 's blog and adapted to a general template used here.","title":"Release notes"},{"location":"releases/#release-notes","text":"Release notes since v0.9.1 to v1.8.0 were taken from Piotr Banaszkiewicz 's blog and adapted to a general template used here.","title":"Release notes"},{"location":"releases/TEMPLATE/","text":"AMY release vX.Y.Z Major/Minor AMY vX.Y.Z was released on YYYY-MM-DD. Thanks to ... ... ... for doing excellent job. New features PersonA added something excellent . PersonB added something excellent . PersonC added something excellent . Bugfixes PersonA fixed something extraordinary . PersonB fixed something extraordinary. See #NNNN and #NNNN . PersonC fixed something extraordinary .","title":"AMY release vX.Y.Z"},{"location":"releases/TEMPLATE/#amy-release-vxyz","text":"Major/Minor AMY vX.Y.Z was released on YYYY-MM-DD. Thanks to ... ... ... for doing excellent job.","title":"AMY release vX.Y.Z"},{"location":"releases/TEMPLATE/#new-features","text":"PersonA added something excellent . PersonB added something excellent . PersonC added something excellent .","title":"New features"},{"location":"releases/TEMPLATE/#bugfixes","text":"PersonA fixed something extraordinary . PersonB fixed something extraordinary. See #NNNN and #NNNN . PersonC fixed something extraordinary .","title":"Bugfixes"},{"location":"releases/v0.9.1/","text":"AMY release v0.9.1 This note was taken from v1.0.0; sorry for the brevity. Greg has worked on the \"problems\" page: switched its layout to 3-column, added better email messages, etc. He also extended our API to return airport's country.","title":"AMY release v0.9.1"},{"location":"releases/v0.9.1/#amy-release-v091","text":"This note was taken from v1.0.0; sorry for the brevity. Greg has worked on the \"problems\" page: switched its layout to 3-column, added better email messages, etc. He also extended our API to return airport's country.","title":"AMY release v0.9.1"},{"location":"releases/v0.9.2/","text":"AMY release v0.9.2 This note was taken from v1.0.0; sorry for the brevity. Piotr hot-fixed an issue with creating M2M with intermediary model in model forms (basically impossible, we have to do this manually).","title":"AMY release v0.9.2"},{"location":"releases/v0.9.2/#amy-release-v092","text":"This note was taken from v1.0.0; sorry for the brevity. Piotr hot-fixed an issue with creating M2M with intermediary model in model forms (basically impossible, we have to do this manually).","title":"AMY release v0.9.2"},{"location":"releases/v0.9.5/","text":"AMY release v0.9.5 This note was taken from v1.0.0; sorry for the brevity. This release adds workshop request forms and profile update request form to AMY.","title":"AMY release v0.9.5"},{"location":"releases/v0.9.5/#amy-release-v095","text":"This note was taken from v1.0.0; sorry for the brevity. This release adds workshop request forms and profile update request form to AMY.","title":"AMY release v0.9.5"},{"location":"releases/v0.9.6/","text":"AMY release v0.9.6 This note was taken from v1.0.0; sorry for the brevity. Piotr hot-fixed a bug with settings: we should load more email settings from environmental variables in order to use emails from Django.","title":"AMY release v0.9.6"},{"location":"releases/v0.9.6/#amy-release-v096","text":"This note was taken from v1.0.0; sorry for the brevity. Piotr hot-fixed a bug with settings: we should load more email settings from environmental variables in order to use emails from Django.","title":"AMY release v0.9.6"},{"location":"releases/v0.9.7/","text":"AMY release v0.9.7 This note was taken from v1.0.0; sorry for the brevity. Piotr added a new country: 'Online' (for international / online events, like some Instructor Trainings). The dashboard was changed to show not only upcoming, but also ongoing workshops (in the same column). Greg added some helper commands to report inconsistencies in PDF certificates for instructors. Greg also removed old command used for checking AMY's database against SWC site's archive. Site has moved to use AMY's API, so the archive was gone and the command was made redundant. Piotr updated check.py script (used for checking workshop settings correctness) from workshop-template repository. Greg cleared up titles of forms introduced in v0.9.5. Piotr split these forms' templates and added SWC and DC logos to them.","title":"AMY release v0.9.7"},{"location":"releases/v0.9.7/#amy-release-v097","text":"This note was taken from v1.0.0; sorry for the brevity. Piotr added a new country: 'Online' (for international / online events, like some Instructor Trainings). The dashboard was changed to show not only upcoming, but also ongoing workshops (in the same column). Greg added some helper commands to report inconsistencies in PDF certificates for instructors. Greg also removed old command used for checking AMY's database against SWC site's archive. Site has moved to use AMY's API, so the archive was gone and the command was made redundant. Piotr updated check.py script (used for checking workshop settings correctness) from workshop-template repository. Greg cleared up titles of forms introduced in v0.9.5. Piotr split these forms' templates and added SWC and DC logos to them.","title":"AMY release v0.9.7"},{"location":"releases/v1.0.0/","text":"AMY release v1.0.0 That was a looong ride, but we're finally here! AMY is mature enough to be given the v1.0.0 tag. New features We have a new database for development use. Piotr changed the way AMY handles event URLs: admins cannot use GitHub repository URL for event's URL migration was used to change all URLs to website-URL format (if possible) Piotr also fixed import/update from URL feature to auto-select country if possible \u2026and to auto-use correct website URL instead of repository URL. AMY auto-counts event attendees if provided with a list of attendees (for example via bulk-upload). External links now open in new tabs. Now there are more options to Event.invoice (for example with reason for lack of invoice). New remove awards functionality. Bug fixes Bulk-uploaded CSVs with entries that contained empty rows (for example: ,,,,,, ) were treated as correct, but not anymore. \"Artificial\" country European Union had been removed and was brought back since some hosts were using it. API now returns website URLs to events instead of original URLs.","title":"AMY release v1.0.0"},{"location":"releases/v1.0.0/#amy-release-v100","text":"That was a looong ride, but we're finally here! AMY is mature enough to be given the v1.0.0 tag.","title":"AMY release v1.0.0"},{"location":"releases/v1.0.0/#new-features","text":"We have a new database for development use. Piotr changed the way AMY handles event URLs: admins cannot use GitHub repository URL for event's URL migration was used to change all URLs to website-URL format (if possible) Piotr also fixed import/update from URL feature to auto-select country if possible \u2026and to auto-use correct website URL instead of repository URL. AMY auto-counts event attendees if provided with a list of attendees (for example via bulk-upload). External links now open in new tabs. Now there are more options to Event.invoice (for example with reason for lack of invoice). New remove awards functionality.","title":"New features"},{"location":"releases/v1.0.0/#bug-fixes","text":"Bulk-uploaded CSVs with entries that contained empty rows (for example: ,,,,,, ) were treated as correct, but not anymore. \"Artificial\" country European Union had been removed and was brought back since some hosts were using it. API now returns website URLs to events instead of original URLs.","title":"Bug fixes"},{"location":"releases/v1.1.0/","text":"AMY release v1.1.0 This is the second post-gsoc release of AMY, the workshop management tool for Software-Carpentry . Below you can find a release notes for v1.1.0 . Announcement We're very happy to announce that development of AMY versions 1.1, 1.2 and 1.3 is supported by prof. Ethan White . Thanks a lot! New features New switch for Open/Closed requests (both profile update requests and workshop requests). Admins will be able to look up dismissed or finished requests. \"Recently changed\" log was moved to a separate view so that it doesn't clutter the dashboard. Some objects (events, hosts, persons, airports, tasks) are followed by django-reversion . Thanks to that fact we can now show who+when created any of these objects and who+when last modified it. Each event marked as \"uninvoiced\" can easily be invoiced by the admin thanks to the new \"Invoice\" button on the event's details page. New report: people who have been through instructor training but didn't finish. Self-organized workshops can now have a \"self-organized\" host. New report: show how often instructors teach. Admins can mark events as completed and throw them out of the filter results. Big : events can have multiple TODO items associated with them. Bug fixes Small typo in README.md fixed. Logic for displaying uninvoiced events was fixed so that events marked as uninvoiced but without any admin fee do show up on the dashboard. Fields layout on the profile update request details page was changed to avoid confusion. Better wording in email request to workshop hosts for attendees figures.","title":"AMY release v1.1.0"},{"location":"releases/v1.1.0/#amy-release-v110","text":"This is the second post-gsoc release of AMY, the workshop management tool for Software-Carpentry . Below you can find a release notes for v1.1.0 .","title":"AMY release v1.1.0"},{"location":"releases/v1.1.0/#announcement","text":"We're very happy to announce that development of AMY versions 1.1, 1.2 and 1.3 is supported by prof. Ethan White . Thanks a lot!","title":"Announcement"},{"location":"releases/v1.1.0/#new-features","text":"New switch for Open/Closed requests (both profile update requests and workshop requests). Admins will be able to look up dismissed or finished requests. \"Recently changed\" log was moved to a separate view so that it doesn't clutter the dashboard. Some objects (events, hosts, persons, airports, tasks) are followed by django-reversion . Thanks to that fact we can now show who+when created any of these objects and who+when last modified it. Each event marked as \"uninvoiced\" can easily be invoiced by the admin thanks to the new \"Invoice\" button on the event's details page. New report: people who have been through instructor training but didn't finish. Self-organized workshops can now have a \"self-organized\" host. New report: show how often instructors teach. Admins can mark events as completed and throw them out of the filter results. Big : events can have multiple TODO items associated with them.","title":"New features"},{"location":"releases/v1.1.0/#bug-fixes","text":"Small typo in README.md fixed. Logic for displaying uninvoiced events was fixed so that events marked as uninvoiced but without any admin fee do show up on the dashboard. Fields layout on the profile update request details page was changed to avoid confusion. Better wording in email request to workshop hosts for attendees figures.","title":"Bug fixes"},{"location":"releases/v1.10.0/","text":"AMY release v1.10.0 Major AMY v1.10.0 was released on 2017-04-04. New features and enhancements Chris made database filename customizable . Piotr backported release notes from his blog to the repo . Piotr added a new REST endpoint for exporting badges grouped by person . Piotr enhanced bulk person upload functionality - added \"use that person\" button and interpreted \"role\" column . Aditya reordered fields on workshop request form . Piotr cleaned up our Makefile . Piotr enlarged tags filter, so you can see all tags without scrolling now. See #1125 and #1131 . Piotr added a button to mail selected workshops staff Piotr sped up person detailed and edit views as well as admin dashboard Chris installed django_extensions which made development easier . Chris removed unused timeline from admin dashboard . Chris added notes field to training requests . Chris sped up training list view . Chris implemented prepopulation of group name in training request form . Bugfixes Chris corrected title on badge detail page . Aditya refactored a lot and fixed bugs related to authorization . Aditya fixed where you're redirected after deleting a record . Chris made airport code insensitive in profile update requests . Piotr simplified search form by using GET instead of POST method . Jonah fixed wording in membership and organization detailed view . Piotr fixed a bug preventing you from merging two trainees if they had any training progress . Aditya fixed not working delete button on training progress edit view . Piotr fixed a bunch of bugs related to where cancelled events are displayed and how they're counted . Chris removed cancelled workshops from uninvoiced events list in admin dashboard . Chris fixed a bug resulting in 500 Internal Server Error when viewing a person . Chris introduced warnings (in addition to errors) in event validation . Chris ensured that admins can see navigation bar on external forms . Chris added missing field (user notes) when editing a person .","title":"AMY release v1.10.0"},{"location":"releases/v1.10.0/#amy-release-v1100","text":"Major AMY v1.10.0 was released on 2017-04-04.","title":"AMY release v1.10.0"},{"location":"releases/v1.10.0/#new-features-and-enhancements","text":"Chris made database filename customizable . Piotr backported release notes from his blog to the repo . Piotr added a new REST endpoint for exporting badges grouped by person . Piotr enhanced bulk person upload functionality - added \"use that person\" button and interpreted \"role\" column . Aditya reordered fields on workshop request form . Piotr cleaned up our Makefile . Piotr enlarged tags filter, so you can see all tags without scrolling now. See #1125 and #1131 . Piotr added a button to mail selected workshops staff Piotr sped up person detailed and edit views as well as admin dashboard Chris installed django_extensions which made development easier . Chris removed unused timeline from admin dashboard . Chris added notes field to training requests . Chris sped up training list view . Chris implemented prepopulation of group name in training request form .","title":"New features and enhancements"},{"location":"releases/v1.10.0/#bugfixes","text":"Chris corrected title on badge detail page . Aditya refactored a lot and fixed bugs related to authorization . Aditya fixed where you're redirected after deleting a record . Chris made airport code insensitive in profile update requests . Piotr simplified search form by using GET instead of POST method . Jonah fixed wording in membership and organization detailed view . Piotr fixed a bug preventing you from merging two trainees if they had any training progress . Aditya fixed not working delete button on training progress edit view . Piotr fixed a bunch of bugs related to where cancelled events are displayed and how they're counted . Chris removed cancelled workshops from uninvoiced events list in admin dashboard . Chris fixed a bug resulting in 500 Internal Server Error when viewing a person . Chris introduced warnings (in addition to errors) in event validation . Chris ensured that admins can see navigation bar on external forms . Chris added missing field (user notes) when editing a person .","title":"Bugfixes"},{"location":"releases/v1.10.1/","text":"AMY release v1.10.1 Minor AMY v1.10.1 was released on 2017-04-16. Bugfixes Aditya fixed \"update from url\" button .","title":"AMY release v1.10.1"},{"location":"releases/v1.10.1/#amy-release-v1101","text":"Minor AMY v1.10.1 was released on 2017-04-16.","title":"AMY release v1.10.1"},{"location":"releases/v1.10.1/#bugfixes","text":"Aditya fixed \"update from url\" button .","title":"Bugfixes"},{"location":"releases/v1.11.0/","text":"AMY release v1.11.0 Major AMY v1.11.0 was released on 2017-07-10. This is mainly a bug-fix release. Thanks to Aditya for a lot of code reviews. New features Chris made sure AMY sends emails to senders of training request form Chris updated the command line tool to generate fake database Chris and Piotr documented deployment procedure Greg and Piotr included info about awarders in certificates Bugfixes Chris raised REST API throttle rate for logged in users . James sorted airports Chris fixed messed up revision pages Chris fixed misleading help text in \"import from URL\" modal Chris made family name optional Chris made sure invalid values in autocomplete fields are not ignored Chris fixed a bug preventing you from editing people Chris prevented navbar from wrapping and covering content on smaller screens Chris fixed a bug that would appear if we switched to PostgreSQL Chris fixed not working search page","title":"AMY release v1.11.0"},{"location":"releases/v1.11.0/#amy-release-v1110","text":"Major AMY v1.11.0 was released on 2017-07-10. This is mainly a bug-fix release. Thanks to Aditya for a lot of code reviews.","title":"AMY release v1.11.0"},{"location":"releases/v1.11.0/#new-features","text":"Chris made sure AMY sends emails to senders of training request form Chris updated the command line tool to generate fake database Chris and Piotr documented deployment procedure Greg and Piotr included info about awarders in certificates","title":"New features"},{"location":"releases/v1.11.0/#bugfixes","text":"Chris raised REST API throttle rate for logged in users . James sorted airports Chris fixed messed up revision pages Chris fixed misleading help text in \"import from URL\" modal Chris made family name optional Chris made sure invalid values in autocomplete fields are not ignored Chris fixed a bug preventing you from editing people Chris prevented navbar from wrapping and covering content on smaller screens Chris fixed a bug that would appear if we switched to PostgreSQL Chris fixed not working search page","title":"Bugfixes"},{"location":"releases/v1.11.1/","text":"AMY release v1.11.1 Minor AMY v1.11.1 was released on 2017-11-07. This release brings first big part of developer documentation and some smaller (but urgent) fixes requested by AMY users. Merged pull-requests Piotr implemented urgent fixes to the trainee-dashboard Piotr added some developer-notes Chris improved deployment procedure","title":"AMY release v1.11.1"},{"location":"releases/v1.11.1/#amy-release-v1111","text":"Minor AMY v1.11.1 was released on 2017-11-07. This release brings first big part of developer documentation and some smaller (but urgent) fixes requested by AMY users.","title":"AMY release v1.11.1"},{"location":"releases/v1.11.1/#merged-pull-requests","text":"Piotr implemented urgent fixes to the trainee-dashboard Piotr added some developer-notes Chris improved deployment procedure","title":"Merged pull-requests"},{"location":"releases/v1.11.2/","text":"AMY release v1.11.2 Minor AMY v1.11.2 was released on 2018-04-02. This release brings: * changes to the training-request form (upstream updates), * additional \"Created-on\" field for exporting training requests as CSV.","title":"AMY release v1.11.2"},{"location":"releases/v1.11.2/#amy-release-v1112","text":"Minor AMY v1.11.2 was released on 2018-04-02. This release brings: * changes to the training-request form (upstream updates), * additional \"Created-on\" field for exporting training requests as CSV.","title":"AMY release v1.11.2"},{"location":"releases/v1.11.3/","text":"AMY release v1.11.3 This release is intended to upgrade AMY's dependencies and the source code accordingly to the changes required by newer versions of the dependencies. Bug fixes Aditya had started, and Piotr finished fixing an annoying lack of redirection from '/' to the dashboard ('/workshops/'), Piotr fixed a rare bug appearing when merging two persons, a database constraint (usernames or Twitter usernames or Github usernames) could be violated, Andy provided a fix for fake database generation. New features Jonah added two more badges to AMY that correspond to mentor trainings, Piotr upgraded AMY's dependencies since they were long overdue.","title":"AMY release v1.11.3"},{"location":"releases/v1.11.3/#amy-release-v1113","text":"This release is intended to upgrade AMY's dependencies and the source code accordingly to the changes required by newer versions of the dependencies.","title":"AMY release v1.11.3"},{"location":"releases/v1.11.3/#bug-fixes","text":"Aditya had started, and Piotr finished fixing an annoying lack of redirection from '/' to the dashboard ('/workshops/'), Piotr fixed a rare bug appearing when merging two persons, a database constraint (usernames or Twitter usernames or Github usernames) could be violated, Andy provided a fix for fake database generation.","title":"Bug fixes"},{"location":"releases/v1.11.3/#new-features","text":"Jonah added two more badges to AMY that correspond to mentor trainings, Piotr upgraded AMY's dependencies since they were long overdue.","title":"New features"},{"location":"releases/v1.11.4/","text":"AMY release v1.11.4 This release is intended to comply with GDPR regulations in European Union and focuses mostly on AMY compliance with this law. Bug fixes Piotr fixed introduced in v1.11.3 bug that caused SWC tag to disappear from production server. The bug was related to changes in merging object functionality. New features Jonah updated privacy policy location, Piotr added option for users to publish their profiles on The Carpentries websites, Piotr added a popup for users to agree to the privacy policy.","title":"AMY release v1.11.4"},{"location":"releases/v1.11.4/#amy-release-v1114","text":"This release is intended to comply with GDPR regulations in European Union and focuses mostly on AMY compliance with this law.","title":"AMY release v1.11.4"},{"location":"releases/v1.11.4/#bug-fixes","text":"Piotr fixed introduced in v1.11.3 bug that caused SWC tag to disappear from production server. The bug was related to changes in merging object functionality.","title":"Bug fixes"},{"location":"releases/v1.11.4/#new-features","text":"Jonah updated privacy policy location, Piotr added option for users to publish their profiles on The Carpentries websites, Piotr added a popup for users to agree to the privacy policy.","title":"New features"},{"location":"releases/v1.11.5/","text":"AMY release v1.11.4 This release provides a few hotfixes discovered after deploying previous GDPR release . Bug fixes Piotr fixed a JavaScript bug introduced in v1.11.4, that prevented from executing any further JavaScript lines, and therefore disabled Select2 widget from loading correctly. Piotr reworked query in export-instructors endpoint: removed doubled instructors, added missing locations due to wrong (main-)query, and added query_params to the list returned by OPTIONS request to this endpoint.","title":"AMY release v1.11.4"},{"location":"releases/v1.11.5/#amy-release-v1114","text":"This release provides a few hotfixes discovered after deploying previous GDPR release .","title":"AMY release v1.11.4"},{"location":"releases/v1.11.5/#bug-fixes","text":"Piotr fixed a JavaScript bug introduced in v1.11.4, that prevented from executing any further JavaScript lines, and therefore disabled Select2 widget from loading correctly. Piotr reworked query in export-instructors endpoint: removed doubled instructors, added missing locations due to wrong (main-)query, and added query_params to the list returned by OPTIONS request to this endpoint.","title":"Bug fixes"},{"location":"releases/v1.12.0/","text":"AMY release v1.12.0 Major AMY version v1.12.0 was released on 2018-07-05. New features Piotr enhanced workshop activity for trainees in their dashboard . Piotr implemented API endpoint for users to download their data from AMY . Piotr added a top navigation bar for trainees dashboard ; the dashboard is now split into multiple views, which allowed to simplify the UI. Piotr added notes to task pane on event edit view . Piotr added a new filter for API person-list view . Piotr added a Mailgun interface to AMY . Bugfixes Piotr fixed trainee search (missing events with both stalled and TTT tags) . Piotr incorporated Chris 's fix for truncated language names in database. Piotr fixed inconsistencies present in import/update events from URL window . Piotr fixed & restyled sidebar on numerous pages including \"Find Workshop Staff\"; form size in the sidebar was improved, and so was autocomplete widget's width. Piotr fixed CSV output from training requests by moving it to API. Piotr fixed a number of issues related to GitHub Auth ; the PR includes GitHub username validation, checking of user existence via GitHub API, and a fix for \"Logging in with GitHub allowed\" displayed for users who actually weren't able to login in with GH. Idea of looking up users from GitHub via its API was dropped. Piotr fixed links redirecting to Code of Conduct pages ; other links going to SWC pages or old emails were also updated.","title":"AMY release v1.12.0"},{"location":"releases/v1.12.0/#amy-release-v1120","text":"Major AMY version v1.12.0 was released on 2018-07-05.","title":"AMY release v1.12.0"},{"location":"releases/v1.12.0/#new-features","text":"Piotr enhanced workshop activity for trainees in their dashboard . Piotr implemented API endpoint for users to download their data from AMY . Piotr added a top navigation bar for trainees dashboard ; the dashboard is now split into multiple views, which allowed to simplify the UI. Piotr added notes to task pane on event edit view . Piotr added a new filter for API person-list view . Piotr added a Mailgun interface to AMY .","title":"New features"},{"location":"releases/v1.12.0/#bugfixes","text":"Piotr fixed trainee search (missing events with both stalled and TTT tags) . Piotr incorporated Chris 's fix for truncated language names in database. Piotr fixed inconsistencies present in import/update events from URL window . Piotr fixed & restyled sidebar on numerous pages including \"Find Workshop Staff\"; form size in the sidebar was improved, and so was autocomplete widget's width. Piotr fixed CSV output from training requests by moving it to API. Piotr fixed a number of issues related to GitHub Auth ; the PR includes GitHub username validation, checking of user existence via GitHub API, and a fix for \"Logging in with GitHub allowed\" displayed for users who actually weren't able to login in with GH. Idea of looking up users from GitHub via its API was dropped. Piotr fixed links redirecting to Code of Conduct pages ; other links going to SWC pages or old emails were also updated.","title":"Bugfixes"},{"location":"releases/v1.2.0/","text":"AMY release v1.2.0 This is the third post-gsoc release of AMY, the workshop management tool for Software-Carpentry . This release was supported by prof. Ethan White . Thanks a lot! Below you can find release notes for v1.2.0 . New features (big one) fix finding, parsing and validating of event tags: it will now work with <meta> tags on workshop websites after approving person's profile update request, the updated profile is displayed instead of the list of other update requests. password reset form was added, issues related to, for example, missing location data are now highlighted on event details page, (big one) admins can now be assigned to specific events or event requests, Greg changed descriptions section names on \"instructor issues\" page, the same page was updated by me so that we can have pending and \"gave-up-on\" trainees listed, the previous feature was introduced thanks to new 'stalled' tag, our API gained some filtering (go to https://amy.software-carpentry.org/api/v1/events/published/ , click \"OPTIONS\" and look at \"query_params\"; these can be added to the API calls, for example: https://amy.software-carpentry.org/api/v1/events/published/?host=123456789&administrator=987654321 ) the same API gained a new endpoint used for generating list of current members of Software-Carpentry Foundation; this is in no way official list of members, but it can be used to help determine who's eligible (credits for this one go to both Greg and me since I finished his pull request), it's now possible to search in events' URL, contact, venue and address fields, 2 new options for invoice status were added ( not invoiced for historical reasons and not invoiced because of membership ), more places (workshop issues, and on each workshop without attendance data) to send \"Give us attendance figures\" emails, more people to send to, profile update requests can now be edited by admins. Bug fixes wrong object type passed to \"\".format() method wrong characters permitted in event slugs (big one) inconsistant logic in EventQuerySet.(un)published_events methods","title":"AMY release v1.2.0"},{"location":"releases/v1.2.0/#amy-release-v120","text":"This is the third post-gsoc release of AMY, the workshop management tool for Software-Carpentry . This release was supported by prof. Ethan White . Thanks a lot! Below you can find release notes for v1.2.0 .","title":"AMY release v1.2.0"},{"location":"releases/v1.2.0/#new-features","text":"(big one) fix finding, parsing and validating of event tags: it will now work with <meta> tags on workshop websites after approving person's profile update request, the updated profile is displayed instead of the list of other update requests. password reset form was added, issues related to, for example, missing location data are now highlighted on event details page, (big one) admins can now be assigned to specific events or event requests, Greg changed descriptions section names on \"instructor issues\" page, the same page was updated by me so that we can have pending and \"gave-up-on\" trainees listed, the previous feature was introduced thanks to new 'stalled' tag, our API gained some filtering (go to https://amy.software-carpentry.org/api/v1/events/published/ , click \"OPTIONS\" and look at \"query_params\"; these can be added to the API calls, for example: https://amy.software-carpentry.org/api/v1/events/published/?host=123456789&administrator=987654321 ) the same API gained a new endpoint used for generating list of current members of Software-Carpentry Foundation; this is in no way official list of members, but it can be used to help determine who's eligible (credits for this one go to both Greg and me since I finished his pull request), it's now possible to search in events' URL, contact, venue and address fields, 2 new options for invoice status were added ( not invoiced for historical reasons and not invoiced because of membership ), more places (workshop issues, and on each workshop without attendance data) to send \"Give us attendance figures\" emails, more people to send to, profile update requests can now be edited by admins.","title":"New features"},{"location":"releases/v1.2.0/#bug-fixes","text":"wrong object type passed to \"\".format() method wrong characters permitted in event slugs (big one) inconsistant logic in EventQuerySet.(un)published_events methods","title":"Bug fixes"},{"location":"releases/v1.2.1_v1.3.0/","text":"AMY release v1.3.0 In the past month we've seen two releases of AMY: v1.2.1 and v1.3.0 . This is a joined release notes for both of them. New features use custom-built jQuery-UI (so that we no longer have conflicts with Bootstrap's tooltip module) Greg updated the script used to send instructors \"Hey, update your info\" mails (it's getting removed later on) it's possible to add memberships per host new badge: DC instructor new logic for dealing with two instructor badges timeline of TO-DO items basic models (e.g. lessons, tags, academic levels, etc.) are now manageable from Django's admin interface all persons view: add filtering by workshop type person taught at remove blurred production database in favor of generated fake database mailing script turned into better Django management command bulk upload now shows generated username and suggested people with matching names show preview of event on SWC website API: filter events by tags Bug fixes wrong URL used in event validation or import/update features is now indicated (and we won't receive wrong notifications about it) properly throw 404 on some pages (previously: 500) spaces are striped from Person and ProfileUpdateRequest fields (names, emails) disable location inputs on event details page if online country was preselected Removed Greg removed some unused scripts ( test-command-line-upload.sh ) and commands ( parse-instructor-info.py ) notifications about invalid HTTP header Host other removed scripts and commands","title":"AMY release v1.3.0"},{"location":"releases/v1.2.1_v1.3.0/#amy-release-v130","text":"In the past month we've seen two releases of AMY: v1.2.1 and v1.3.0 . This is a joined release notes for both of them.","title":"AMY release v1.3.0"},{"location":"releases/v1.2.1_v1.3.0/#new-features","text":"use custom-built jQuery-UI (so that we no longer have conflicts with Bootstrap's tooltip module) Greg updated the script used to send instructors \"Hey, update your info\" mails (it's getting removed later on) it's possible to add memberships per host new badge: DC instructor new logic for dealing with two instructor badges timeline of TO-DO items basic models (e.g. lessons, tags, academic levels, etc.) are now manageable from Django's admin interface all persons view: add filtering by workshop type person taught at remove blurred production database in favor of generated fake database mailing script turned into better Django management command bulk upload now shows generated username and suggested people with matching names show preview of event on SWC website API: filter events by tags","title":"New features"},{"location":"releases/v1.2.1_v1.3.0/#bug-fixes","text":"wrong URL used in event validation or import/update features is now indicated (and we won't receive wrong notifications about it) properly throw 404 on some pages (previously: 500) spaces are striped from Person and ProfileUpdateRequest fields (names, emails) disable location inputs on event details page if online country was preselected","title":"Bug fixes"},{"location":"releases/v1.2.1_v1.3.0/#removed","text":"Greg removed some unused scripts ( test-command-line-upload.sh ) and commands ( parse-instructor-info.py ) notifications about invalid HTTP header Host other removed scripts and commands","title":"Removed"},{"location":"releases/v1.3.1/","text":"AMY release v1.3.1 This note was taken from v1.4.0; sorry for the brevity. One bugfix: don't break whole timeline widget when there are TODOs without due date.","title":"AMY release v1.3.1"},{"location":"releases/v1.3.1/#amy-release-v131","text":"This note was taken from v1.4.0; sorry for the brevity. One bugfix: don't break whole timeline widget when there are TODOs without due date.","title":"AMY release v1.3.1"},{"location":"releases/v1.3.2/","text":"AMY release v1.3.2 This note was taken from v1.4.0; sorry for the brevity. New feature: stop using dots ( . ) for usernames, use underscores ( _ ) instead. This was an interesting issue: since we rely on some Ruby software on the SWC website, we can't have dots in filenames (they're treated as parameter access operator, for example: banaszkiewicz.piotr is piotr parameter on banaszkiewicz object). But we have filenames that correspond to usernames in AMY. So it was necessary to drop dots and switch to underscores\u2026","title":"AMY release v1.3.2"},{"location":"releases/v1.3.2/#amy-release-v132","text":"This note was taken from v1.4.0; sorry for the brevity. New feature: stop using dots ( . ) for usernames, use underscores ( _ ) instead. This was an interesting issue: since we rely on some Ruby software on the SWC website, we can't have dots in filenames (they're treated as parameter access operator, for example: banaszkiewicz.piotr is piotr parameter on banaszkiewicz object). But we have filenames that correspond to usernames in AMY. So it was necessary to drop dots and switch to underscores\u2026","title":"AMY release v1.3.2"},{"location":"releases/v1.4.0/","text":"AMY release v1.4.0 Intense month of January is almost behind us, so it's time for new AMY release. Three versions have been released since v1.3.0 : v1.3.1 , v1.3.2 (both in separate release notes files) and finally v1.4.0 . Unfortunately, due to the way we have our project laid out on GitHub, some of the features implemented for v1.4.0 before v1.3.2 were included in the deployment; I will still put them here, though. The biggest highlights of this month are definitely: first approach to the new API API reports merging events. There were also some essential features, but not much. In v1.5 there will be a lot more. Data fixing We had to programmatically fix/complete some of our records: historical events on production server were assigned an administering organization (that's the one responsible for taking care of the workshop bureaucracy), new DC instructors were added: anyone with a special note or anyone who taught at DC workshop now has a DC instructor badge. New features Person model is now able to store person's occupation and ORCID code, events can hold links to survey results (pre-workshop for learners and for instructors, post-workshop for learners and for instructors, and long-term for learners), API call for getting members list is now for logged in users only, and returns members' usernames too, merging events: with option to select fields from either of events, or (in some cases) even to combine them together. The underlying code may be reused to fix persons merging, workshop issues page now allows to filter workshops by assigned admin move most of reports to the API; 3 reports now present a graph for easy use, 1 report was requested to be moved to API, and 1 new report was requested (and Piotr made it in API), API: new structure. It's using hyperlinks between resources and allows to view and filter for example people associated with specific events, slow tests were fixed (we gained probably around 10s on whole test suite, even though about 10-20 new tests were introduced); now it's time to speed up migrations, Greg added two new badges to the database: maintainer and trainer; Piotr made sure to allow for editing badges via Django Admin interface, and also added these new badges to the fake database command, Greg also added a new command for getting list of people who should be warned because their instructor training was about to close, meanwhile Piotr added a command for displaying report about instructor training completion rates. Bug fixes some fields containing numerical values were switched to other type of fields to prevent slider from appearing; the background for this issue was that when scrolling through a page with form, on MacOSX people would accidentally change values of numerical fields, generation of initial revisions was added to the process of creating a fake database for development use, some types of events ( stalled and unresponsive ) were kicked out from debrief lookup, some invoice options were changed to remain consistent with the rest.","title":"AMY release v1.4.0"},{"location":"releases/v1.4.0/#amy-release-v140","text":"Intense month of January is almost behind us, so it's time for new AMY release. Three versions have been released since v1.3.0 : v1.3.1 , v1.3.2 (both in separate release notes files) and finally v1.4.0 . Unfortunately, due to the way we have our project laid out on GitHub, some of the features implemented for v1.4.0 before v1.3.2 were included in the deployment; I will still put them here, though. The biggest highlights of this month are definitely: first approach to the new API API reports merging events. There were also some essential features, but not much. In v1.5 there will be a lot more.","title":"AMY release v1.4.0"},{"location":"releases/v1.4.0/#data-fixing","text":"We had to programmatically fix/complete some of our records: historical events on production server were assigned an administering organization (that's the one responsible for taking care of the workshop bureaucracy), new DC instructors were added: anyone with a special note or anyone who taught at DC workshop now has a DC instructor badge.","title":"Data fixing"},{"location":"releases/v1.4.0/#new-features","text":"Person model is now able to store person's occupation and ORCID code, events can hold links to survey results (pre-workshop for learners and for instructors, post-workshop for learners and for instructors, and long-term for learners), API call for getting members list is now for logged in users only, and returns members' usernames too, merging events: with option to select fields from either of events, or (in some cases) even to combine them together. The underlying code may be reused to fix persons merging, workshop issues page now allows to filter workshops by assigned admin move most of reports to the API; 3 reports now present a graph for easy use, 1 report was requested to be moved to API, and 1 new report was requested (and Piotr made it in API), API: new structure. It's using hyperlinks between resources and allows to view and filter for example people associated with specific events, slow tests were fixed (we gained probably around 10s on whole test suite, even though about 10-20 new tests were introduced); now it's time to speed up migrations, Greg added two new badges to the database: maintainer and trainer; Piotr made sure to allow for editing badges via Django Admin interface, and also added these new badges to the fake database command, Greg also added a new command for getting list of people who should be warned because their instructor training was about to close, meanwhile Piotr added a command for displaying report about instructor training completion rates.","title":"New features"},{"location":"releases/v1.4.0/#bug-fixes","text":"some fields containing numerical values were switched to other type of fields to prevent slider from appearing; the background for this issue was that when scrolling through a page with form, on MacOSX people would accidentally change values of numerical fields, generation of initial revisions was added to the process of creating a fake database for development use, some types of events ( stalled and unresponsive ) were kicked out from debrief lookup, some invoice options were changed to remain consistent with the rest.","title":"Bug fixes"},{"location":"releases/v1.5.0/","text":"AMY release v1.5.0 Development of AMY in February had seen a boost due to the winter break, and that ended with today's release of v1.5.0 . New features The biggest new features for this release: new workshops requests once accepted are linked to resulting events admins now can submit invoices from AMY admins can now receive event submissions (this should work really well for self-organized workshops that already have a workshop page) Other changes: badge details view allows for filtering development and production software was updated production assets (JavaScript and CSS files) are now compressed and served with unique name persons merging was reworked and is now a lot better it's possible to find duplicates in the database now base templates were renamed to lower confusion API returns award date for every person for every badge added CSV renderer to some API endpoint for exporting members debrief was renamed and also allows for CSV export Award model gained awarded_by field pointing to the person responsible for awarding a badge person lookup in some places now works for \"Name Lastname\" pattern too. Changes contributed by Greg : CSV export of instructor completion rates CSV export of missing instructor certificates (Greg's responsible for training new instructors.) Bug fixes Django Rest Framework erroring URLs were removed (still not sure what caused them to error-out) dashboard and workshop issues now show only active (== not stalled, not marked as complete) events workshop issues was extended by providing a list of workshops without any assigned instructors a rare error when looking someone up was fixed API throttle rates have been increased current and upcoming events on the dashboard are now based off of published events.","title":"AMY release v1.5.0"},{"location":"releases/v1.5.0/#amy-release-v150","text":"Development of AMY in February had seen a boost due to the winter break, and that ended with today's release of v1.5.0 .","title":"AMY release v1.5.0"},{"location":"releases/v1.5.0/#new-features","text":"The biggest new features for this release: new workshops requests once accepted are linked to resulting events admins now can submit invoices from AMY admins can now receive event submissions (this should work really well for self-organized workshops that already have a workshop page) Other changes: badge details view allows for filtering development and production software was updated production assets (JavaScript and CSS files) are now compressed and served with unique name persons merging was reworked and is now a lot better it's possible to find duplicates in the database now base templates were renamed to lower confusion API returns award date for every person for every badge added CSV renderer to some API endpoint for exporting members debrief was renamed and also allows for CSV export Award model gained awarded_by field pointing to the person responsible for awarding a badge person lookup in some places now works for \"Name Lastname\" pattern too. Changes contributed by Greg : CSV export of instructor completion rates CSV export of missing instructor certificates (Greg's responsible for training new instructors.)","title":"New features"},{"location":"releases/v1.5.0/#bug-fixes","text":"Django Rest Framework erroring URLs were removed (still not sure what caused them to error-out) dashboard and workshop issues now show only active (== not stalled, not marked as complete) events workshop issues was extended by providing a list of workshops without any assigned instructors a rare error when looking someone up was fixed API throttle rates have been increased current and upcoming events on the dashboard are now based off of published events.","title":"Bug fixes"},{"location":"releases/v1.5.1/","text":"AMY release v1.5.1 This past month we had a number of submissions from prospect GSOC'16 students (yay!) and, for the first time, number of bugs fixed exceeded number of new enhancements. Since the number of new features is small, we decided to release a minor version ( v1.5.1 ). Contributions by GSOC students March 2016 held GSOC'16 applications period for students. We had a lot of students this year and we encouraged them to take a look at AMY and maybe fix something. This resulted in a number of good contributions. New features Starting with new features since there's so few of them: Greg extended the check_certificates.py command to additionally return events people participated in Shubham Singh added \"Notes\" field to instructor profile update form Shubham Singh added new tag \"hackaton\" Greg removed command check_badges.py Piotr enabled autogeneration of user's username after they're added to the database Greg added link to Privacy Policy in the footer. Bug fixes Nikhil Verma found and fixed \"List duplicates\" page error when no duplicates existed Chris Medrela found and fixed 404 page for revision that didn't exist Greg fixed NameError in check_certificates.py Piotr fixed a 500 error appearing when user submitted incomplete form used for matching people's names Maneesha Sane fixed minimal number of instructors required in our workshop request form Piotr fixed API renderers (CSV, YAML) not iterating generators but displaying their textual representations Piotr fixed instructors-num-taught report to include people's names Piotr fixed a small typo in the name of post-workshop survey for instructors (it was called \"pre\") Piotr made the emails case-insensitive Piotr fixed some 500 errors related to event importing.","title":"AMY release v1.5.1"},{"location":"releases/v1.5.1/#amy-release-v151","text":"This past month we had a number of submissions from prospect GSOC'16 students (yay!) and, for the first time, number of bugs fixed exceeded number of new enhancements. Since the number of new features is small, we decided to release a minor version ( v1.5.1 ).","title":"AMY release v1.5.1"},{"location":"releases/v1.5.1/#contributions-by-gsoc-students","text":"March 2016 held GSOC'16 applications period for students. We had a lot of students this year and we encouraged them to take a look at AMY and maybe fix something. This resulted in a number of good contributions.","title":"Contributions by GSOC students"},{"location":"releases/v1.5.1/#new-features","text":"Starting with new features since there's so few of them: Greg extended the check_certificates.py command to additionally return events people participated in Shubham Singh added \"Notes\" field to instructor profile update form Shubham Singh added new tag \"hackaton\" Greg removed command check_badges.py Piotr enabled autogeneration of user's username after they're added to the database Greg added link to Privacy Policy in the footer.","title":"New features"},{"location":"releases/v1.5.1/#bug-fixes","text":"Nikhil Verma found and fixed \"List duplicates\" page error when no duplicates existed Chris Medrela found and fixed 404 page for revision that didn't exist Greg fixed NameError in check_certificates.py Piotr fixed a 500 error appearing when user submitted incomplete form used for matching people's names Maneesha Sane fixed minimal number of instructors required in our workshop request form Piotr fixed API renderers (CSV, YAML) not iterating generators but displaying their textual representations Piotr fixed instructors-num-taught report to include people's names Piotr fixed a small typo in the name of post-workshop survey for instructors (it was called \"pre\") Piotr made the emails case-insensitive Piotr fixed some 500 errors related to event importing.","title":"Bug fixes"},{"location":"releases/v1.5.2/","text":"AMY bugfix release v1.5.2 and bug postmortem This is an investigation story by Piotr . 24 hours ago, Maneesha Sane noticed and informed on GitHub that one of the tags in AMY is missing. This observation led to an investigation on the servers and eventually to fix for a critical bug that caused the data loss. But before we jump into sysadmin work\u2026 What is a \"tag\" in AMY terms? A tag is label that we give to various workshops. For example, all Software Carpentry workshops will have SWC tag, and all Data Carpentry workshops will have DC tag. There are more labels we use, and the one that went missing was DC . One event can have between zero and all the tags we have in the system, which means it's a many-to-many relationship between events and tags. This type of relationship requires additional intermediate table in the database. Contents from that table were missing because they were removed with removal of the DC tag. Investigation I started the investigation by narrowing timespan where the event, that led to data loss, occurred. Then I followed by reading WWW server access logs to find out what happened in that timespan in hope I could find the bug. After narrowing list of suspects, I was able to reproduce the bug. Finally I retrieved the lost data from the most recent backup that still had it. Ways to remove tags from AMY There's no interface for removing tags other than Django's auto-generated admin interface; only a couple of people have access to it. So the data loss was either human error or it was caused by code bug. This conclusion helped me define what I should be looking for in the WWW server log. Narrowing event occurence timespan AMY's being backed-up by multiple systems; I logged into each of them and run multiple SQL queries on different databases to find out which backup had the DC tag and was the newest. It turned out that backup from 2016-04-06 17:00 UTC-4 was the most recent still with the DC tag. In the meantime I was fighting timezone correction\u2026 Our backup systems are in different datacenters and were running on different timezones. Reading access log First thing I checked in the access log is if anyone was using the admin panel to remove the tag. Unfortunately this possibility was quickly ruled out; so the loss was caused by code bug. However, after reading the log no action stood out. Short, important side story: Software Carpentry website rebuilds every 30 minutes. Each rebuild is shown in the log by multiple requests to AMY's API: {% highlight nginx %} [\u2026] GET /api/v1/export/badges.yaml => generated 69122 bytes [\u2026] [\u2026] GET /api/v1/export/instructors.yaml => generated 50488 bytes [\u2026] [\u2026] GET /api/v1/events/published.yaml?tag=SWC => generated 231344 bytes [\u2026] [\u2026] GET /api/v1/events/published.yaml?tag=DC => generated 17806 bytes [\u2026] [\u2026] GET /api/v1/events/published.yaml?tag=TTT => generated 7879 bytes [\u2026] {% endhighlight %} Website grabs published events tagged by SWC , DC and TTT tags. This sequence of requests repeats every 30 minutes. After reading the log over and over I noticed that two consecutive calls to /api/v1/events/published.yaml?tag=DC yielded results of very different response lengths: {% highlight nginx %} [\u2026] [Wed Apr 6 15:01:11 2016] GET /api/v1/events/published.yaml?tag=DC => generated 17806 bytes [\u2026] [... many more requests ...] [\u2026] [Wed Apr 6 15:30:10 2016] GET /api/v1/events/published.yaml?tag=DC => generated 261521 bytes [\u2026] {% endhighlight %} Apparently then the DC tag disappeared, the API started returning all the published events, no matter if they were tagged SWC or something else. This was a clear indication that the DC tag disappeared between 15:01 and 15:30. That timespan doesn't look like 17:00. Timezones... programmer's nightmare. Suspects There was some user activity in this 30-minutes long window and one thing caught my eye: {% highlight nginx %} [\u2026] POST /workshops/events/merge?event_a_0=2016-05-06-RDAP16-Atlanta&event_b_0=2016-05-06-asist [\u2026] {% endhighlight %} (The actual URL was slightly changed to remove unnecessary information.) This was a call to event merge functionality: someone wanted to merge workshops 2016-05-06-RDAP16-Atlanta and 2016-05-06-asist . {:.message} Short side note : merge functionality allows user to use more advanced strategy for merge; one can select which properties (or fields) in the final event should be used from event A ( 2016-05-06-RDAP16-Atlanta in our example) and which should be from event B ( 2016-05-06-asist ). Additionally in case of event's tags it's possible to combine them from both base events. I started testing different strategies. I had a feeling that the bug had something to do with strategy for event tags. :) Finally I reproduced the bug by using following strategy: base event: 2016-05-06-RDAP16-Atlanta (event A) tags: from event B. Data retrieval At that point I decided to retrieve the lost data using SQL import/export functionality from the optimal (newest & containing the lost data) backup found earlier. Bug The only code used in event merge functionality that would trigger accidental removal is: {% highlight python %} if value == 'obj_a' and manager != related_a: manager.all().delete() manager.add(*list(related_a.all())) elif value == 'obj_b' and manager != related_b: manager.all().delete() manager.add(*list(related_b.all())) {% endhighlight %} This code is used for substituting related objects (tags in our case). It works like this: if some field's strategy is to switch to objects from the other event, then remove all currently assigned objects and add objects from the other event's field. Translated into tags: if user wants to use event 2016-05-06-RDAP16-Atlanta as base event, but keep tags from the other event ( 2016-05-06-asist ) then remove current tags from base event and add tags from the other event. See what's going on here? Base event's tags were removed instead of being unassigned. Django: related manager and assignments In this section I'm going to talk about how relations work and if they can be unassigned instead of being removed. For many-to-many relationships (e.g. multiple events can be assigned multiple tags) Django creates an intermediate table that stores assignments. In this case, unassigning event from tag is as simple as removing that stored assignment from the intermediate table. For one-to-many relationships (e.g. multiple events can have the same organizer) there's no need for additional table; storing the organizer looks like event.organizer = SomeOrganizer . In case of the one-to-many relationships we can unassign the event from SomeOrganizer if and only if event.organizer field can store NULL value. If it cannot, then we have to remove the event. So the bug existed because the case of unassignment was not taken into account \u2013 only removal of related objects was accounted for. Fix: need to find out when we can unassign Long story short: in Django only related manager with .clear method can unassign; if this method is not present then the only option is removal. So fixed code looks like this (minus the comments): {% highlight python %} if value == 'obj_a' and manager != related_a: if hasattr(manager, 'clear'): manager.clear() else: manager.all().delete() manager.set(list(related_a.all())) elif value == 'obj_b' and manager != related_b: if hasattr(manager, 'clear'): manager.clear() else: manager.all().delete() manager.set(list(related_b.all())) {% endhighlight %} (Yes, it probably should use try - except block instead of hasattr ; pull request's welcome!) Final words All in all, I feel good about this bug; if anything, I'd like eliminate the errorneous timezone arithmetics. Also all backup mechanics and logging worked really nice. As a result of investigation described above, the bug and the solution to it last night I released AMY v1.5.2 .","title":"AMY bugfix release v1.5.2 and bug postmortem"},{"location":"releases/v1.5.2/#amy-bugfix-release-v152-and-bug-postmortem","text":"This is an investigation story by Piotr . 24 hours ago, Maneesha Sane noticed and informed on GitHub that one of the tags in AMY is missing. This observation led to an investigation on the servers and eventually to fix for a critical bug that caused the data loss. But before we jump into sysadmin work\u2026","title":"AMY bugfix release v1.5.2 and bug postmortem"},{"location":"releases/v1.5.2/#what-is-a-tag-in-amy-terms","text":"A tag is label that we give to various workshops. For example, all Software Carpentry workshops will have SWC tag, and all Data Carpentry workshops will have DC tag. There are more labels we use, and the one that went missing was DC . One event can have between zero and all the tags we have in the system, which means it's a many-to-many relationship between events and tags. This type of relationship requires additional intermediate table in the database. Contents from that table were missing because they were removed with removal of the DC tag.","title":"What is a \"tag\" in AMY terms?"},{"location":"releases/v1.5.2/#investigation","text":"I started the investigation by narrowing timespan where the event, that led to data loss, occurred. Then I followed by reading WWW server access logs to find out what happened in that timespan in hope I could find the bug. After narrowing list of suspects, I was able to reproduce the bug. Finally I retrieved the lost data from the most recent backup that still had it.","title":"Investigation"},{"location":"releases/v1.5.2/#ways-to-remove-tags-from-amy","text":"There's no interface for removing tags other than Django's auto-generated admin interface; only a couple of people have access to it. So the data loss was either human error or it was caused by code bug. This conclusion helped me define what I should be looking for in the WWW server log.","title":"Ways to remove tags from AMY"},{"location":"releases/v1.5.2/#narrowing-event-occurence-timespan","text":"AMY's being backed-up by multiple systems; I logged into each of them and run multiple SQL queries on different databases to find out which backup had the DC tag and was the newest. It turned out that backup from 2016-04-06 17:00 UTC-4 was the most recent still with the DC tag. In the meantime I was fighting timezone correction\u2026 Our backup systems are in different datacenters and were running on different timezones.","title":"Narrowing event occurence timespan"},{"location":"releases/v1.5.2/#reading-access-log","text":"First thing I checked in the access log is if anyone was using the admin panel to remove the tag. Unfortunately this possibility was quickly ruled out; so the loss was caused by code bug. However, after reading the log no action stood out. Short, important side story: Software Carpentry website rebuilds every 30 minutes. Each rebuild is shown in the log by multiple requests to AMY's API: {% highlight nginx %} [\u2026] GET /api/v1/export/badges.yaml => generated 69122 bytes [\u2026] [\u2026] GET /api/v1/export/instructors.yaml => generated 50488 bytes [\u2026] [\u2026] GET /api/v1/events/published.yaml?tag=SWC => generated 231344 bytes [\u2026] [\u2026] GET /api/v1/events/published.yaml?tag=DC => generated 17806 bytes [\u2026] [\u2026] GET /api/v1/events/published.yaml?tag=TTT => generated 7879 bytes [\u2026] {% endhighlight %} Website grabs published events tagged by SWC , DC and TTT tags. This sequence of requests repeats every 30 minutes. After reading the log over and over I noticed that two consecutive calls to /api/v1/events/published.yaml?tag=DC yielded results of very different response lengths: {% highlight nginx %} [\u2026] [Wed Apr 6 15:01:11 2016] GET /api/v1/events/published.yaml?tag=DC => generated 17806 bytes [\u2026] [... many more requests ...] [\u2026] [Wed Apr 6 15:30:10 2016] GET /api/v1/events/published.yaml?tag=DC => generated 261521 bytes [\u2026] {% endhighlight %} Apparently then the DC tag disappeared, the API started returning all the published events, no matter if they were tagged SWC or something else. This was a clear indication that the DC tag disappeared between 15:01 and 15:30. That timespan doesn't look like 17:00. Timezones... programmer's nightmare.","title":"Reading access log"},{"location":"releases/v1.5.2/#suspects","text":"There was some user activity in this 30-minutes long window and one thing caught my eye: {% highlight nginx %} [\u2026] POST /workshops/events/merge?event_a_0=2016-05-06-RDAP16-Atlanta&event_b_0=2016-05-06-asist [\u2026] {% endhighlight %} (The actual URL was slightly changed to remove unnecessary information.) This was a call to event merge functionality: someone wanted to merge workshops 2016-05-06-RDAP16-Atlanta and 2016-05-06-asist . {:.message} Short side note : merge functionality allows user to use more advanced strategy for merge; one can select which properties (or fields) in the final event should be used from event A ( 2016-05-06-RDAP16-Atlanta in our example) and which should be from event B ( 2016-05-06-asist ). Additionally in case of event's tags it's possible to combine them from both base events. I started testing different strategies. I had a feeling that the bug had something to do with strategy for event tags. :) Finally I reproduced the bug by using following strategy: base event: 2016-05-06-RDAP16-Atlanta (event A) tags: from event B.","title":"Suspects"},{"location":"releases/v1.5.2/#data-retrieval","text":"At that point I decided to retrieve the lost data using SQL import/export functionality from the optimal (newest & containing the lost data) backup found earlier.","title":"Data retrieval"},{"location":"releases/v1.5.2/#bug","text":"The only code used in event merge functionality that would trigger accidental removal is: {% highlight python %} if value == 'obj_a' and manager != related_a: manager.all().delete() manager.add(*list(related_a.all())) elif value == 'obj_b' and manager != related_b: manager.all().delete() manager.add(*list(related_b.all())) {% endhighlight %} This code is used for substituting related objects (tags in our case). It works like this: if some field's strategy is to switch to objects from the other event, then remove all currently assigned objects and add objects from the other event's field. Translated into tags: if user wants to use event 2016-05-06-RDAP16-Atlanta as base event, but keep tags from the other event ( 2016-05-06-asist ) then remove current tags from base event and add tags from the other event. See what's going on here? Base event's tags were removed instead of being unassigned.","title":"Bug"},{"location":"releases/v1.5.2/#django-related-manager-and-assignments","text":"In this section I'm going to talk about how relations work and if they can be unassigned instead of being removed. For many-to-many relationships (e.g. multiple events can be assigned multiple tags) Django creates an intermediate table that stores assignments. In this case, unassigning event from tag is as simple as removing that stored assignment from the intermediate table. For one-to-many relationships (e.g. multiple events can have the same organizer) there's no need for additional table; storing the organizer looks like event.organizer = SomeOrganizer . In case of the one-to-many relationships we can unassign the event from SomeOrganizer if and only if event.organizer field can store NULL value. If it cannot, then we have to remove the event. So the bug existed because the case of unassignment was not taken into account \u2013 only removal of related objects was accounted for.","title":"Django: related manager and assignments"},{"location":"releases/v1.5.2/#fix-need-to-find-out-when-we-can-unassign","text":"Long story short: in Django only related manager with .clear method can unassign; if this method is not present then the only option is removal. So fixed code looks like this (minus the comments): {% highlight python %} if value == 'obj_a' and manager != related_a: if hasattr(manager, 'clear'): manager.clear() else: manager.all().delete() manager.set(list(related_a.all())) elif value == 'obj_b' and manager != related_b: if hasattr(manager, 'clear'): manager.clear() else: manager.all().delete() manager.set(list(related_b.all())) {% endhighlight %} (Yes, it probably should use try - except block instead of hasattr ; pull request's welcome!)","title":"Fix: need to find out when we can unassign"},{"location":"releases/v1.5.2/#final-words","text":"All in all, I feel good about this bug; if anything, I'd like eliminate the errorneous timezone arithmetics. Also all backup mechanics and logging worked really nice. As a result of investigation described above, the bug and the solution to it last night I released AMY v1.5.2 .","title":"Final words"},{"location":"releases/v1.5.3/","text":"AMY release v1.5.3 A minor version v1.5.3 of AMY was released. New features Now it's easier to add person to the database if they already submitted a profile update request. This is specifically useful for admins if they want to add one person and can contact them to get more details (like affiliation or airport). Bug fixes Aditya fixed Django template tags autoescaping on the revision page (ie. each page the changes log links to) Aditya again fixed \"Update from URL\" functionality that didn't update event's URL in specific conditions. Thanks a lot, Aditya!","title":"AMY release v1.5.3"},{"location":"releases/v1.5.3/#amy-release-v153","text":"A minor version v1.5.3 of AMY was released.","title":"AMY release v1.5.3"},{"location":"releases/v1.5.3/#new-features","text":"Now it's easier to add person to the database if they already submitted a profile update request. This is specifically useful for admins if they want to add one person and can contact them to get more details (like affiliation or airport).","title":"New features"},{"location":"releases/v1.5.3/#bug-fixes","text":"Aditya fixed Django template tags autoescaping on the revision page (ie. each page the changes log links to) Aditya again fixed \"Update from URL\" functionality that didn't update event's URL in specific conditions. Thanks a lot, Aditya!","title":"Bug fixes"},{"location":"releases/v1.5.4/","text":"AMY release v1.5.4 Yesterday AMY v1.5.4 was released with a bunch of interesting changes. New features AMY is now capable of going through all active workshops and checking if their metadata (slug, start/end date, instructors and helpers) had changed. If so, a notification would be shown to the person associated with the event. Aditya improved history log by enabling it to show related objects' real names instead of IDs. Greg added a button to mail everyone involved in a workshop as part of his GSoC 2016 project, Chris added the trainings dashboard in its first shape Chris in collab with Greg added SWC/DC instructor badge indicators to: all persons, event details, and \"find instructors\" views Piotr upgraded the \"Find instructors\" view to enable admins to search for not only instructors, but also in-progress instructor trainees and people who once had been associated with the workshop organization. Therefore the new name for \"Finding instructors\" is now \"Find Workshop Staff\". Bug fixes Aditya fixed permissions issue when accessing event details page by people without permission to add ToDo items. Piotr fixed a small error preventing DataCarpentry logo from showing up on DC workshop request page. Piotr fixed a small error doubling people with both superuser and admin group permissions in the admin lookup backend. Even smaller error was pointing admins to use wrong URL in import event template. It is now fixed. Chris fixed the former \"debriefing\" view (now \"instructors by date\") errors concerning emails generation when some people's emails were unavailable. Chris fixed probably the oldest unnoticed issue ever: wrong link generated for airport's IATA code. Chris fixed missing template from one of the new features for this release.","title":"AMY release v1.5.4"},{"location":"releases/v1.5.4/#amy-release-v154","text":"Yesterday AMY v1.5.4 was released with a bunch of interesting changes.","title":"AMY release v1.5.4"},{"location":"releases/v1.5.4/#new-features","text":"AMY is now capable of going through all active workshops and checking if their metadata (slug, start/end date, instructors and helpers) had changed. If so, a notification would be shown to the person associated with the event. Aditya improved history log by enabling it to show related objects' real names instead of IDs. Greg added a button to mail everyone involved in a workshop as part of his GSoC 2016 project, Chris added the trainings dashboard in its first shape Chris in collab with Greg added SWC/DC instructor badge indicators to: all persons, event details, and \"find instructors\" views Piotr upgraded the \"Find instructors\" view to enable admins to search for not only instructors, but also in-progress instructor trainees and people who once had been associated with the workshop organization. Therefore the new name for \"Finding instructors\" is now \"Find Workshop Staff\".","title":"New features"},{"location":"releases/v1.5.4/#bug-fixes","text":"Aditya fixed permissions issue when accessing event details page by people without permission to add ToDo items. Piotr fixed a small error preventing DataCarpentry logo from showing up on DC workshop request page. Piotr fixed a small error doubling people with both superuser and admin group permissions in the admin lookup backend. Even smaller error was pointing admins to use wrong URL in import event template. It is now fixed. Chris fixed the former \"debriefing\" view (now \"instructors by date\") errors concerning emails generation when some people's emails were unavailable. Chris fixed probably the oldest unnoticed issue ever: wrong link generated for airport's IATA code. Chris fixed missing template from one of the new features for this release.","title":"Bug fixes"},{"location":"releases/v1.6.0/","text":"AMY release v1.6.0 After about 12 days of delay and 7 days of postponing, we finally closed and released AMY v1.6.0 . It packs a whole lot of changes and bugfixes! New features Piotr implemented a Data-Carpentry form for submitting requests for running self-organized workshops. Piotr added a histogram into frequency of instructors teaching report page. Aditya added \"Contact all\" button on the all persons page. Aditya continued W. Trevor King 's work on the Language model and now we can accurately track languages amongst multiple forms and related models (e.g. events and persons). Aditya added a summary of tasks per role on person's details page. Chris added an application form for individuals wanting to become instructors. Piotr added Language support in additional forms (original PR was missing language support in some forms). Big : Chris worked hard to bring GitHub authentication into AMY (with success!). There are some caveats, but we'll smoothen them out for the next release. This work included opening AMY to other users (a move we were afraid of), and tests for each and every test to ensure we got the permissions right. In the same PR, Chris added an AutoUpdateProfileForm used by users (who can log in from GitHub) to self-populate their profiles. Aditya defined sorting of tasks on the person's details page. Bug fixes Piotr fixed a bug that caused IntegrityError when people with similar tasks (task has a role , person , and an event ; tasks for these people were the same except person was different) were being merged. IntegrityError means that a uniqueness constraint was violated (ie. after the merge there were two Task(role, personA, event) , which is prohibited). Chris fixed interpolation on some of our charts that looked like the data was swinging, while in reality it wasn't. Aditya fixed default field values on the \"All activities over time\" page; now the fields have meaningful default values and the datetime inputs have a proper calendar widget. Aditya reworked teaching frequency report to eliminate bug that duplicated numbers for people simultaneously marked as SWC and DC instructors. Piotr fixed some corner cases in event validation (behavior for required or optional tags/metadata (see below)). Piotr fixed a bug resulting in 500 Server error when accessing weblink to a non-existing Host . Chris added one small migrations missing from the codebase. Greg fixed a bug in API that prevented list from working on the generator objects for some renderers ( CSV and Yaml ). Prerit Garg fixed a specific bug preventing saving a permissions form when person's email field is empty. Chris fixed a TrainingRequest form that display additional fields (that weren't supposed to appear). Other Chris refactored \"tags\" to \"metadata\"; tags as key-value pairs describing workshops' date, times, location, instructors and helpers. We changed the naming to \"metadata\" to not confuse with Tag model. Chris sped up our tests by changing hashing algorithm to a slower one, which -- surprisingly -- is one of suggested test speedup suggestions by Django development team.","title":"AMY release v1.6.0"},{"location":"releases/v1.6.0/#amy-release-v160","text":"After about 12 days of delay and 7 days of postponing, we finally closed and released AMY v1.6.0 . It packs a whole lot of changes and bugfixes!","title":"AMY release v1.6.0"},{"location":"releases/v1.6.0/#new-features","text":"Piotr implemented a Data-Carpentry form for submitting requests for running self-organized workshops. Piotr added a histogram into frequency of instructors teaching report page. Aditya added \"Contact all\" button on the all persons page. Aditya continued W. Trevor King 's work on the Language model and now we can accurately track languages amongst multiple forms and related models (e.g. events and persons). Aditya added a summary of tasks per role on person's details page. Chris added an application form for individuals wanting to become instructors. Piotr added Language support in additional forms (original PR was missing language support in some forms). Big : Chris worked hard to bring GitHub authentication into AMY (with success!). There are some caveats, but we'll smoothen them out for the next release. This work included opening AMY to other users (a move we were afraid of), and tests for each and every test to ensure we got the permissions right. In the same PR, Chris added an AutoUpdateProfileForm used by users (who can log in from GitHub) to self-populate their profiles. Aditya defined sorting of tasks on the person's details page.","title":"New features"},{"location":"releases/v1.6.0/#bug-fixes","text":"Piotr fixed a bug that caused IntegrityError when people with similar tasks (task has a role , person , and an event ; tasks for these people were the same except person was different) were being merged. IntegrityError means that a uniqueness constraint was violated (ie. after the merge there were two Task(role, personA, event) , which is prohibited). Chris fixed interpolation on some of our charts that looked like the data was swinging, while in reality it wasn't. Aditya fixed default field values on the \"All activities over time\" page; now the fields have meaningful default values and the datetime inputs have a proper calendar widget. Aditya reworked teaching frequency report to eliminate bug that duplicated numbers for people simultaneously marked as SWC and DC instructors. Piotr fixed some corner cases in event validation (behavior for required or optional tags/metadata (see below)). Piotr fixed a bug resulting in 500 Server error when accessing weblink to a non-existing Host . Chris added one small migrations missing from the codebase. Greg fixed a bug in API that prevented list from working on the generator objects for some renderers ( CSV and Yaml ). Prerit Garg fixed a specific bug preventing saving a permissions form when person's email field is empty. Chris fixed a TrainingRequest form that display additional fields (that weren't supposed to appear).","title":"Bug fixes"},{"location":"releases/v1.6.0/#other","text":"Chris refactored \"tags\" to \"metadata\"; tags as key-value pairs describing workshops' date, times, location, instructors and helpers. We changed the naming to \"metadata\" to not confuse with Tag model. Chris sped up our tests by changing hashing algorithm to a slower one, which -- surprisingly -- is one of suggested test speedup suggestions by Django development team.","title":"Other"},{"location":"releases/v1.6.1/","text":"AMY release v1.6.1 We're taking momentum! Two days after v1.6.0 release, we're releasing a minor bug-fix version v1.6.1 which is not as small as you might think. New features Aditya changed the default value for invoice status field for events to \"Not invoiced\" (it was: \"unknown\"). Piotr added a link to the login form on the logout page. In future, we're going to redirect to the login page with a message , but we're waiting for Django to release a feature that will allow us to do this easily. Piotr restyled login page so that it's clearer that people can use user+password OR GitHub account to log into AMY. Bug fixes Chris provided tests that make sure we don't have bugs associated with saving M2M-related objects in an AutoProfileUpdateForm . Piotr added a link to the profile view page in the top navigation bar. This links to a trainee-dashboard page if current user is not an admin, and to a person-details page otherwise. Chris fixed indentation of lists when they're placed inside of tables. Chris added clickable links in some help texts in the training request form . Chris fixed wording in one field of the aforementioned form. Piotr added a missing migration (we commonly forget to add migrations when there are small changes introduced). Other Aditya changed some text fields in AMY's models so that they cannot be equal to a NULL (or None ) value. Instead an empty string is used for these fields' default values. Some fields, especially ones with a uniqueness constraint, had to be left as nullable. In particular, this makes the Event.slug a required field.","title":"AMY release v1.6.1"},{"location":"releases/v1.6.1/#amy-release-v161","text":"We're taking momentum! Two days after v1.6.0 release, we're releasing a minor bug-fix version v1.6.1 which is not as small as you might think.","title":"AMY release v1.6.1"},{"location":"releases/v1.6.1/#new-features","text":"Aditya changed the default value for invoice status field for events to \"Not invoiced\" (it was: \"unknown\"). Piotr added a link to the login form on the logout page. In future, we're going to redirect to the login page with a message , but we're waiting for Django to release a feature that will allow us to do this easily. Piotr restyled login page so that it's clearer that people can use user+password OR GitHub account to log into AMY.","title":"New features"},{"location":"releases/v1.6.1/#bug-fixes","text":"Chris provided tests that make sure we don't have bugs associated with saving M2M-related objects in an AutoProfileUpdateForm . Piotr added a link to the profile view page in the top navigation bar. This links to a trainee-dashboard page if current user is not an admin, and to a person-details page otherwise. Chris fixed indentation of lists when they're placed inside of tables. Chris added clickable links in some help texts in the training request form . Chris fixed wording in one field of the aforementioned form. Piotr added a missing migration (we commonly forget to add migrations when there are small changes introduced).","title":"Bug fixes"},{"location":"releases/v1.6.1/#other","text":"Aditya changed some text fields in AMY's models so that they cannot be equal to a NULL (or None ) value. Instead an empty string is used for these fields' default values. Some fields, especially ones with a uniqueness constraint, had to be left as nullable. In particular, this makes the Event.slug a required field.","title":"Other"},{"location":"releases/v1.6.2/","text":"AMY release v1.6.2 Whoa, another one?! Yesterday we released v1.6.1 , today it's time for v1.6.2 with some very minor changes. New features New fields in the training request form: group name will enable us to register groups for the training, without (for now) the need for a new form comment will be a place for any additional information; instead of it, people would use additional skills . Event.slug received new help text containing a format description for admins to use. This field's validation was also changed so that it only allows entries in this specific format (this is additional to other validation done by Django, ie. only latin characters, digits, underscores and hyphens allowed). Bug fixes Migration 0088* , which was supposed to generate fake slugs for events without them, contained an error that we hit in the production, so Piotr fixed it by adding random characters to the slugs if uniqueness constraint was about to be violated.","title":"AMY release v1.6.2"},{"location":"releases/v1.6.2/#amy-release-v162","text":"Whoa, another one?! Yesterday we released v1.6.1 , today it's time for v1.6.2 with some very minor changes.","title":"AMY release v1.6.2"},{"location":"releases/v1.6.2/#new-features","text":"New fields in the training request form: group name will enable us to register groups for the training, without (for now) the need for a new form comment will be a place for any additional information; instead of it, people would use additional skills . Event.slug received new help text containing a format description for admins to use. This field's validation was also changed so that it only allows entries in this specific format (this is additional to other validation done by Django, ie. only latin characters, digits, underscores and hyphens allowed).","title":"New features"},{"location":"releases/v1.6.2/#bug-fixes","text":"Migration 0088* , which was supposed to generate fake slugs for events without them, contained an error that we hit in the production, so Piotr fixed it by adding random characters to the slugs if uniqueness constraint was about to be violated.","title":"Bug fixes"},{"location":"releases/v1.7.0/","text":"AMY release v1.7.0 After another two weeks of development and two weeks of delays, we're finally releasing AMY v1.7.0 This release is especially interesting since: it includes mostly Aditya's and Chris' PRs it includes two big PRs containing the biggest part of Aditya's and Chris' Summer projects. New features Chris helped check for missing migrations in automated continuous integration service Travis-CI Chris sped up Travis-CI checks of AMY's test suite by using a cache directory Aditya as part of his Summer work added titles and URLs to task objects in AMY (useful feature for PyData conference integration) Aditya changed form for creating new events so that admins can assign themselves to a new event while creating it Aditya added a Sponsorship model to AMY and integrated it with AMY (we can now track sponsors for events) Aditya migrated Host to Organization : it fixed some naming inconsistencies in v1.6 we dropped support for numerical event IDs to rely only on slugs (e.g. 2016-08-13-Krakow or 2017-01-xx-Boston ), now Aditya cleaned some remains left in the code from before dropping the support Piotr added support for cancelled tag used to mark events supposed to happen but not happening eventually Chris added instructor training workflow, ie. huge part of AMY used for instructor training Aditya added a feature for importing people, events, tasks from PyData conference site in a comfortable way Bug fixes Chris tracked and fixed an error in part of AMY responsible for allowing users to log in with other credentials than user/password (currently: GitHub login) Piotr fixed an API error occuring in some views (endpoints) when using CSV or YAML return format Chris added access to AMY for people in invoicing group Chris replaced entity &mdash; with actual char \u2014 Aditya added a contact field on Sponsorship model Chris fixed issue with user social integration with GitHub getting out of sync Piotr fixed JavaScript code responsible for generating dates (it was generating e.g. 2016-8-3 , it's now generating 2016-08-03 )","title":"AMY release v1.7.0"},{"location":"releases/v1.7.0/#amy-release-v170","text":"After another two weeks of development and two weeks of delays, we're finally releasing AMY v1.7.0 This release is especially interesting since: it includes mostly Aditya's and Chris' PRs it includes two big PRs containing the biggest part of Aditya's and Chris' Summer projects.","title":"AMY release v1.7.0"},{"location":"releases/v1.7.0/#new-features","text":"Chris helped check for missing migrations in automated continuous integration service Travis-CI Chris sped up Travis-CI checks of AMY's test suite by using a cache directory Aditya as part of his Summer work added titles and URLs to task objects in AMY (useful feature for PyData conference integration) Aditya changed form for creating new events so that admins can assign themselves to a new event while creating it Aditya added a Sponsorship model to AMY and integrated it with AMY (we can now track sponsors for events) Aditya migrated Host to Organization : it fixed some naming inconsistencies in v1.6 we dropped support for numerical event IDs to rely only on slugs (e.g. 2016-08-13-Krakow or 2017-01-xx-Boston ), now Aditya cleaned some remains left in the code from before dropping the support Piotr added support for cancelled tag used to mark events supposed to happen but not happening eventually Chris added instructor training workflow, ie. huge part of AMY used for instructor training Aditya added a feature for importing people, events, tasks from PyData conference site in a comfortable way","title":"New features"},{"location":"releases/v1.7.0/#bug-fixes","text":"Chris tracked and fixed an error in part of AMY responsible for allowing users to log in with other credentials than user/password (currently: GitHub login) Piotr fixed an API error occuring in some views (endpoints) when using CSV or YAML return format Chris added access to AMY for people in invoicing group Chris replaced entity &mdash; with actual char \u2014 Aditya added a contact field on Sponsorship model Chris fixed issue with user social integration with GitHub getting out of sync Piotr fixed JavaScript code responsible for generating dates (it was generating e.g. 2016-8-3 , it's now generating 2016-08-03 )","title":"Bug fixes"},{"location":"releases/v1.7.1/","text":"AMY bugfix release v1.7.1 This release contains mostly bug fixes for features we added in v1.7.0 . New features Chris added a command line tool for importing trainees progress from previous data format into AMY Bug fixes Chris removed an overlooked debugging message alert in one of the views Aditya added a cancel button to almost all the forms in AMY Piotr added a message to \"Apply for Instructor Training\" page saying that people cannot register for Fall 2016 open-access training anymore Aditya fixed \"Import from URL\" not working on workshop acceptance page Chris fixed some validation issue in one of training-related forms Chris added access to admin dashboard in AMY to trainers","title":"AMY bugfix release v1.7.1"},{"location":"releases/v1.7.1/#amy-bugfix-release-v171","text":"This release contains mostly bug fixes for features we added in v1.7.0 .","title":"AMY bugfix release v1.7.1"},{"location":"releases/v1.7.1/#new-features","text":"Chris added a command line tool for importing trainees progress from previous data format into AMY","title":"New features"},{"location":"releases/v1.7.1/#bug-fixes","text":"Chris removed an overlooked debugging message alert in one of the views Aditya added a cancel button to almost all the forms in AMY Piotr added a message to \"Apply for Instructor Training\" page saying that people cannot register for Fall 2016 open-access training anymore Aditya fixed \"Import from URL\" not working on workshop acceptance page Chris fixed some validation issue in one of training-related forms Chris added access to admin dashboard in AMY to trainers","title":"Bug fixes"},{"location":"releases/v1.7.2/","text":"AMY bugfix release v1.7.2 AMY v1.7.2 was released today. It contains one bug fix provided by Aditya . Aditya fixed a bug throwing 500 HTTP error when accessing /api/v1/todos/user/ . This API endpoint is being accessed by the browser whenever any admin user loads their dashboard.","title":"AMY bugfix release v1.7.2"},{"location":"releases/v1.7.2/#amy-bugfix-release-v172","text":"AMY v1.7.2 was released today. It contains one bug fix provided by Aditya . Aditya fixed a bug throwing 500 HTTP error when accessing /api/v1/todos/user/ . This API endpoint is being accessed by the browser whenever any admin user loads their dashboard.","title":"AMY bugfix release v1.7.2"},{"location":"releases/v1.8.0/","text":"AMY release v1.8.0 Major AMY v1.8.0 release was tagged. As you can see below, it was definitely focused on fixing bugs. New Features Aditya provided a template change that displays link between closed workshop request and corresponding event. Aditya hid survey-related fields on Event-related forms. Chris sped up (again :-) ) tests. Chris removed unnecessary help text for autocompletion fields. Aditya refactored delete views to use DeleteViewContext , essentially making code more DRY and easy to change. Piotr added deleting entries from bulk-upload feature. Piotr updated DataCarpentry self-organized workshops registration form. Bugfixes Aditya changed uniqueness constraints on Sponsorship model to reflect recent changes he made on that model. Aditya changed display of some Membership model fields. Aditya added missing CSRF tokens in PyData import page. Chris fixed a rare case of email address leakage (CC instead of BCC) in event details page, instructors by date and in workshop staff finder. Aditya changed a uniqueness constraint on Task model + added some other small improvements. Chris fixed non-working links and corrected ordering in all trainings page. Aditya refactored internal URLs file to use nested URLs structure and therefore made it a lot more readable. Chris made \"progress\" column in trainees view wider Aditya hid from import instances that were decided not to be imported Piotr fixed error message on faulty bulk-upload process. Piotr fixed a double-display of unpublished and published views in very specific circumstances. Piotr stopped counting in unresponsive workshops in workshops issues page.","title":"AMY release v1.8.0"},{"location":"releases/v1.8.0/#amy-release-v180","text":"Major AMY v1.8.0 release was tagged. As you can see below, it was definitely focused on fixing bugs.","title":"AMY release v1.8.0"},{"location":"releases/v1.8.0/#new-features","text":"Aditya provided a template change that displays link between closed workshop request and corresponding event. Aditya hid survey-related fields on Event-related forms. Chris sped up (again :-) ) tests. Chris removed unnecessary help text for autocompletion fields. Aditya refactored delete views to use DeleteViewContext , essentially making code more DRY and easy to change. Piotr added deleting entries from bulk-upload feature. Piotr updated DataCarpentry self-organized workshops registration form.","title":"New Features"},{"location":"releases/v1.8.0/#bugfixes","text":"Aditya changed uniqueness constraints on Sponsorship model to reflect recent changes he made on that model. Aditya changed display of some Membership model fields. Aditya added missing CSRF tokens in PyData import page. Chris fixed a rare case of email address leakage (CC instead of BCC) in event details page, instructors by date and in workshop staff finder. Aditya changed a uniqueness constraint on Task model + added some other small improvements. Chris fixed non-working links and corrected ordering in all trainings page. Aditya refactored internal URLs file to use nested URLs structure and therefore made it a lot more readable. Chris made \"progress\" column in trainees view wider Aditya hid from import instances that were decided not to be imported Piotr fixed error message on faulty bulk-upload process. Piotr fixed a double-display of unpublished and published views in very specific circumstances. Piotr stopped counting in unresponsive workshops in workshops issues page.","title":"Bugfixes"},{"location":"releases/v1.9.0/","text":"AMY release v1.9.0 Major AMY v1.9.0 version was released after v1.8.1 bugfix version. Many thanks to Piotr who focused on code reviews. Below, there is a list of changes introduced in v1.9.0 and v1.8.1 . New features Chris added possibility to query historical data (reports) with parameters. Greg and Piotr made membership concept first-class objects. Piotr disabled invoicing. Webpage with list of organizations displays current partnership level now, thanks to Chris . What's more, it's possible to filter organizations by their current or past partnership level now. Piotr moved publicly accessible forms (like workshop submission or profile update request) to separate URL endpoint ( forms/* ). Current events list in admin dashboard displays SWC/DC/LC labels now, thanks to Chris . Chris introduced Django Debug Toolbar which makes development easier. Piotr extended current search capabilities to training applications. Chris improved training request workflow (see #1004 , #1007 , #1050 ) and instructor training workflow (see #976 , #980 , #981 ). Chris added instructions and clarified how to use bulk add person form. Greg added title to organization webpage. Piotr disabled workshops submission. Aditya altered choices in partner form. Piotr added privacy consent fields to multiple forms. Bugfixes Chris added hyperlinks in report on all activity. Chris fixed a bug resulting in overestimation of number of trainees who became certified instructors. Aditya fixed a bug in organization bulk import. Chris enforced that contribution type (of membership) is required. Chris added a field for middle name to training request and instructor profile update forms. Chris added a field for notes in instructor profile update. Chris fixed a bug resulting in double counting of instructors counts. Chris fixed labels of invoice statuses. Aditya made it possible to import an event using GitHub repository URL in addition to GitHub Pages URL. Chris fixed a bug in filtering events by tags. Chris fixed not displayed report plots by migrating to a newer version of d3 library. Aditya improved \"cancel\" buttons. Piotr fixed a bug resulting in server error while deleting an airport. Piotr updated outdated files on production. Piotr fixed a bug in event import functionality.","title":"AMY release v1.9.0"},{"location":"releases/v1.9.0/#amy-release-v190","text":"Major AMY v1.9.0 version was released after v1.8.1 bugfix version. Many thanks to Piotr who focused on code reviews. Below, there is a list of changes introduced in v1.9.0 and v1.8.1 .","title":"AMY release v1.9.0"},{"location":"releases/v1.9.0/#new-features","text":"Chris added possibility to query historical data (reports) with parameters. Greg and Piotr made membership concept first-class objects. Piotr disabled invoicing. Webpage with list of organizations displays current partnership level now, thanks to Chris . What's more, it's possible to filter organizations by their current or past partnership level now. Piotr moved publicly accessible forms (like workshop submission or profile update request) to separate URL endpoint ( forms/* ). Current events list in admin dashboard displays SWC/DC/LC labels now, thanks to Chris . Chris introduced Django Debug Toolbar which makes development easier. Piotr extended current search capabilities to training applications. Chris improved training request workflow (see #1004 , #1007 , #1050 ) and instructor training workflow (see #976 , #980 , #981 ). Chris added instructions and clarified how to use bulk add person form. Greg added title to organization webpage. Piotr disabled workshops submission. Aditya altered choices in partner form. Piotr added privacy consent fields to multiple forms.","title":"New features"},{"location":"releases/v1.9.0/#bugfixes","text":"Chris added hyperlinks in report on all activity. Chris fixed a bug resulting in overestimation of number of trainees who became certified instructors. Aditya fixed a bug in organization bulk import. Chris enforced that contribution type (of membership) is required. Chris added a field for middle name to training request and instructor profile update forms. Chris added a field for notes in instructor profile update. Chris fixed a bug resulting in double counting of instructors counts. Chris fixed labels of invoice statuses. Aditya made it possible to import an event using GitHub repository URL in addition to GitHub Pages URL. Chris fixed a bug in filtering events by tags. Chris fixed not displayed report plots by migrating to a newer version of d3 library. Aditya improved \"cancel\" buttons. Piotr fixed a bug resulting in server error while deleting an airport. Piotr updated outdated files on production. Piotr fixed a bug in event import functionality.","title":"Bugfixes"},{"location":"releases/v1.9.1/","text":"AMY bugfix release v1.9.1 AMY v1.9.1 , intended to fix a major bug in /forms/request_training/ , incorporates a number of development-related changes that were scheduled for v1.10.0 . New development features Chris Improved formatting in ReportsViewSet . Aditya updated settings to work with local development (a change required by Django bugfix). Aditya changed Travis-CI configuration to work correctly with PyData installation; especially he managed to set up a test matrix for checking code with PyData installed and without. Aditya refactored views so that a prepopulation of forms would be easier to achieve for developers. Bugfixes Piotr fixed a bug in training request form, which prevented users from seeing a confirmation of their request.","title":"AMY bugfix release v1.9.1"},{"location":"releases/v1.9.1/#amy-bugfix-release-v191","text":"AMY v1.9.1 , intended to fix a major bug in /forms/request_training/ , incorporates a number of development-related changes that were scheduled for v1.10.0 .","title":"AMY bugfix release v1.9.1"},{"location":"releases/v1.9.1/#new-development-features","text":"Chris Improved formatting in ReportsViewSet . Aditya updated settings to work with local development (a change required by Django bugfix). Aditya changed Travis-CI configuration to work correctly with PyData installation; especially he managed to set up a test matrix for checking code with PyData installed and without. Aditya refactored views so that a prepopulation of forms would be easier to achieve for developers.","title":"New development features"},{"location":"releases/v1.9.1/#bugfixes","text":"Piotr fixed a bug in training request form, which prevented users from seeing a confirmation of their request.","title":"Bugfixes"},{"location":"releases/v2.0.0/","text":"AMY release v2.0.0 Major AMY v2.0.0 was released on 2018-08-05. The most noticeable feature of this release is a refreshed UI look. This was accomplished thanks to change in AMY internals - we switched JavaScript & CSS dependencies from Bower ( outdated ) to Yarn . New features Starting small, Piotr made improvements to the admin dashboard and the person details page . Piotr added validation for assigning trainee with progress - now they have to be a learner in a training task beforehand. Piotr enhanced some models and forms with a new field \"Country\". Piotr added a view for finding duplicate training requests, and a tool for merging them. Piotr switched Code of Conduct to a similar one proposed by GitHub. Piotr made some invasive changes to the UI . This is one huge PR and fixes some old issues (see more in linked PR), but mostly it should be considered as a UI refresh. Piotr changed what data is saved on person profile upon accepting that person's training request. Piotr changed how membership data (due workshops) is counted. Bugfixes Piotr changed a lot of things around training requests. See this PR and related issues: #1227 , Download selected trainee applications #1284 , Trainees with training event should be automatically accepted #1291 , Include Matched Event when downloading Training Applications #1292 , Fix explanatory text for Training Application Group Name. Piotr fixed a bug preventing all eligible trainees for instructor badges to show up in the results. Piotr provided some fixes for bulk-upload (see more details in linked PR).","title":"AMY release v2.0.0"},{"location":"releases/v2.0.0/#amy-release-v200","text":"Major AMY v2.0.0 was released on 2018-08-05. The most noticeable feature of this release is a refreshed UI look. This was accomplished thanks to change in AMY internals - we switched JavaScript & CSS dependencies from Bower ( outdated ) to Yarn .","title":"AMY release v2.0.0"},{"location":"releases/v2.0.0/#new-features","text":"Starting small, Piotr made improvements to the admin dashboard and the person details page . Piotr added validation for assigning trainee with progress - now they have to be a learner in a training task beforehand. Piotr enhanced some models and forms with a new field \"Country\". Piotr added a view for finding duplicate training requests, and a tool for merging them. Piotr switched Code of Conduct to a similar one proposed by GitHub. Piotr made some invasive changes to the UI . This is one huge PR and fixes some old issues (see more in linked PR), but mostly it should be considered as a UI refresh. Piotr changed what data is saved on person profile upon accepting that person's training request. Piotr changed how membership data (due workshops) is counted.","title":"New features"},{"location":"releases/v2.0.0/#bugfixes","text":"Piotr changed a lot of things around training requests. See this PR and related issues: #1227 , Download selected trainee applications #1284 , Trainees with training event should be automatically accepted #1291 , Include Matched Event when downloading Training Applications #1292 , Fix explanatory text for Training Application Group Name. Piotr fixed a bug preventing all eligible trainees for instructor badges to show up in the results. Piotr provided some fixes for bulk-upload (see more details in linked PR).","title":"Bugfixes"},{"location":"releases/v2.1.0/","text":"AMY release v2.1.0 Major AMY v2.1.0 was released on 2018-09-28. Most notable features of this release are instructor training seats mechanism and training applicants scoring mechanism. More on them in \"New features\" below. New features Piotr upgraded Django to v2.1 and included some other deployment-related features: \"AMY_\" prefix for all env vars, moved includable templates to a separate directory, removed logout page (instead we get redirected to login page with a message), and sped-up All Events page. Piotr brought back sticky navigation bar - it was removed in v2.0. Piotr added ORCID to PersonSerialized in API. Big: Piotr extended Memberships to include training seats mechanism; it helps admins keep track of and control people assigned to Instructor Training events out of their organization Membership. Big: Piotr added Training Requests (semi-automated) scoring mechanism, for admins' convenience. Bugfixes Jonah fixed Google Maps API (it wasn't showing maps properly). Piotr removed old residues of Bower that somehow survived v2.0.0 release. Piotr fixed missing pagination and not working correctly filters on workshop requests page. Piotr made a bunch of fixes and improvements to the Instructors by date report page (speed-ups, visual improvements, colorization etc.). Big: Piotr adjusted EventRequest , EventSubmission and DCSelfOrganizedEventRequest so that they have the same features: the same states (pending, accepted, discarded) the same actions (accept & create new event, change state to accepted, discard, edit). Piotr hunted and fixed JavaScript loading error in #1334. Piotr unified some forms buttons (they were displaying \"Cancel\" button).","title":"AMY release v2.1.0"},{"location":"releases/v2.1.0/#amy-release-v210","text":"Major AMY v2.1.0 was released on 2018-09-28. Most notable features of this release are instructor training seats mechanism and training applicants scoring mechanism. More on them in \"New features\" below.","title":"AMY release v2.1.0"},{"location":"releases/v2.1.0/#new-features","text":"Piotr upgraded Django to v2.1 and included some other deployment-related features: \"AMY_\" prefix for all env vars, moved includable templates to a separate directory, removed logout page (instead we get redirected to login page with a message), and sped-up All Events page. Piotr brought back sticky navigation bar - it was removed in v2.0. Piotr added ORCID to PersonSerialized in API. Big: Piotr extended Memberships to include training seats mechanism; it helps admins keep track of and control people assigned to Instructor Training events out of their organization Membership. Big: Piotr added Training Requests (semi-automated) scoring mechanism, for admins' convenience.","title":"New features"},{"location":"releases/v2.1.0/#bugfixes","text":"Jonah fixed Google Maps API (it wasn't showing maps properly). Piotr removed old residues of Bower that somehow survived v2.0.0 release. Piotr fixed missing pagination and not working correctly filters on workshop requests page. Piotr made a bunch of fixes and improvements to the Instructors by date report page (speed-ups, visual improvements, colorization etc.). Big: Piotr adjusted EventRequest , EventSubmission and DCSelfOrganizedEventRequest so that they have the same features: the same states (pending, accepted, discarded) the same actions (accept & create new event, change state to accepted, discard, edit). Piotr hunted and fixed JavaScript loading error in #1334. Piotr unified some forms buttons (they were displaying \"Cancel\" button).","title":"Bugfixes"},{"location":"releases/v2.1.1/","text":"AMY minor release v2.1.1 Minor AMY release v2.1.1 was issued on 2018-10-06. It includes various small fixes to either bugs in API, or missed features from v2.1.0 big labels (instructor training seats in Memberships). Bugfixes Kunal fixed settings, so that AMY in debug mode now accepts connections from localhost too. Piotr added default ordering on languages. Piotr added missing \"Open training seat\" to bulk-match form on All Training Requests page. Piotr fixed filtering on Events API endpoint (it was throwing 500 Server Error). New features Piotr added country field to Persons API endpoint, and enhanced the filter so that it's possible to filter by the country. Piotr added country field to Events API endpoint filter, and replaced old filtering in Published Events API endpoint with that from Events API endpoint.","title":"AMY minor release v2.1.1"},{"location":"releases/v2.1.1/#amy-minor-release-v211","text":"Minor AMY release v2.1.1 was issued on 2018-10-06. It includes various small fixes to either bugs in API, or missed features from v2.1.0 big labels (instructor training seats in Memberships).","title":"AMY minor release v2.1.1"},{"location":"releases/v2.1.1/#bugfixes","text":"Kunal fixed settings, so that AMY in debug mode now accepts connections from localhost too. Piotr added default ordering on languages. Piotr added missing \"Open training seat\" to bulk-match form on All Training Requests page. Piotr fixed filtering on Events API endpoint (it was throwing 500 Server Error).","title":"Bugfixes"},{"location":"releases/v2.1.1/#new-features","text":"Piotr added country field to Persons API endpoint, and enhanced the filter so that it's possible to filter by the country. Piotr added country field to Events API endpoint filter, and replaced old filtering in Published Events API endpoint with that from Events API endpoint.","title":"New features"},{"location":"releases/v2.10.0/","text":"AMY release v2.10.0 - 2020-01-12 Major AMY release v2.10.0 . New features Piotr added more badges to badge column on all persons / event details / workshop staff pages - #1594 maneesha added notes about changing email or GH identificator - #1588 Piotr extended Gender choices in multiple forms and models - #1597 Piotr added a secondary email field to multiple forms and models - #1599 maneesha updated Code of Conduct - #1601 Piotr added a priority field to Tag model - #1603 Piotr extended Training Request confirmation email with a copy of applicant's form - #1606 Bugfixes Piotr updated important dependency to a newer version: Django v2.2.9 - #1592 maneesha updated readme with instructions for creating cache tables - #1590 maneesha fixed wrong Etherpad link for signing up for demo sessions - #1585 Piotr reworked login page to be more responsive on smaller screens - #1595 Piotr fixed Django-Compressor, a dependency for performance of CSS / JS file serving, poor performance due to cache changes - #1600 Piotr fixed wrong display and saving of values in \"Additional contact\" widget - #1596 Piotr fixed wrong permission name for WorkshopInquiryAssign view - #1602 Piotr fixed searching for LC instructors on All Trainees page, fixed eligibility conditions for all badges, and slightly changed behavior due to now 3 separate instructor badges being used - #1593 Piotr updated some dependencies due to some deprecation warnings - #1604","title":"AMY release v2.10.0 - 2020-01-12"},{"location":"releases/v2.10.0/#amy-release-v2100-2020-01-12","text":"Major AMY release v2.10.0 .","title":"AMY release v2.10.0 - 2020-01-12"},{"location":"releases/v2.10.0/#new-features","text":"Piotr added more badges to badge column on all persons / event details / workshop staff pages - #1594 maneesha added notes about changing email or GH identificator - #1588 Piotr extended Gender choices in multiple forms and models - #1597 Piotr added a secondary email field to multiple forms and models - #1599 maneesha updated Code of Conduct - #1601 Piotr added a priority field to Tag model - #1603 Piotr extended Training Request confirmation email with a copy of applicant's form - #1606","title":"New features"},{"location":"releases/v2.10.0/#bugfixes","text":"Piotr updated important dependency to a newer version: Django v2.2.9 - #1592 maneesha updated readme with instructions for creating cache tables - #1590 maneesha fixed wrong Etherpad link for signing up for demo sessions - #1585 Piotr reworked login page to be more responsive on smaller screens - #1595 Piotr fixed Django-Compressor, a dependency for performance of CSS / JS file serving, poor performance due to cache changes - #1600 Piotr fixed wrong display and saving of values in \"Additional contact\" widget - #1596 Piotr fixed wrong permission name for WorkshopInquiryAssign view - #1602 Piotr fixed searching for LC instructors on All Trainees page, fixed eligibility conditions for all badges, and slightly changed behavior due to now 3 separate instructor badges being used - #1593 Piotr updated some dependencies due to some deprecation warnings - #1604","title":"Bugfixes"},{"location":"releases/v2.11.0/","text":"AMY release v2.11.0 - 2020-02-24 Major AMY release v2.11.0 . New features Piotr restricted choices to \"administrator\" field - #1613 Piotr added an automation email project, part 1 - #1616 Bugfixes maneesha added a text informing users to submit missing self-organised workshops from their trainee dashboard - #1611 Later, Piotr updated this text according to Talisha 's comment - #1621 Piotr fixed autoresponder context in Training Request form messages for requesters - #1619 Piotr fixed empty manual attendance bug - #1622","title":"AMY release v2.11.0 - 2020-02-24"},{"location":"releases/v2.11.0/#amy-release-v2110-2020-02-24","text":"Major AMY release v2.11.0 .","title":"AMY release v2.11.0 - 2020-02-24"},{"location":"releases/v2.11.0/#new-features","text":"Piotr restricted choices to \"administrator\" field - #1613 Piotr added an automation email project, part 1 - #1616","title":"New features"},{"location":"releases/v2.11.0/#bugfixes","text":"maneesha added a text informing users to submit missing self-organised workshops from their trainee dashboard - #1611 Later, Piotr updated this text according to Talisha 's comment - #1621 Piotr fixed autoresponder context in Training Request form messages for requesters - #1619 Piotr fixed empty manual attendance bug - #1622","title":"Bugfixes"},{"location":"releases/v2.11.1/","text":"AMY release v2.11.1 - 2020-02-24 A hotfix AMY release v2.11.1. Bugfixes Piotr fixed wrong timestamps for Email Automation actions. They were set up with short values for testing purposes.","title":"AMY release v2.11.1 - 2020-02-24"},{"location":"releases/v2.11.1/#amy-release-v2111-2020-02-24","text":"A hotfix AMY release v2.11.1.","title":"AMY release v2.11.1 - 2020-02-24"},{"location":"releases/v2.11.1/#bugfixes","text":"Piotr fixed wrong timestamps for Email Automation actions. They were set up with short values for testing purposes.","title":"Bugfixes"},{"location":"releases/v2.12.0/","text":"AMY release v2.12.0 - 2020-05-02 Major AMY release v2.12.0 . New features Piotr extended matching Training Request with person to secondary email - #1629 Piotr added instructors as PostWorkshopAction context (similarly to helpers ) - #1634 Piotr added reports_link as PostWorkshopAction context - #1637 maneesha updated workshop URL help text on self-organised submission form - #1638 Piotr added PostWorkshopAction to \"accept & create new event\" views (3) for Workshop Requests, Workshop Inquiries, and Self-organised Submissions respectively. Additionally, the views were turned into Class-Based Views - #1633 Piotr added a collection of upgrades to Email Automation ( #1639 ): \"previous\", \"next\" buttons on Preview page RQJob (when created) saves in DB related event's slug and list of related emails RQ Worker (3rd party software) logs were enabled additional log messages added for Django Admin actions regarding RQJobs (like cancel, preview, reschedule, send now, or retry) configuration for Black was added, and some files were formatted with it \"View queue\" button was moved from Email Templates to RQJobs (more suitable) Jobs (from RQ library) now update RQJobs (from AMY) status when their (Jobs from RQ library) status changes. Piotr updated handling of contact <meta> tag to support multiple values - also in Event models - #1642 - as part of this PR some bug were fixed, too Piotr added updating template functionality to existing RQJobs. Existing admin endpoints started requiring POST. Some styling was improved, too - #1645 Piotr added tags to all actions' context - #1649 Bugfixes Piotr fixed an error caused by non-transactional database operation when matching Training Request with existing Person - #1627 Piotr solved internal error with Redis container not having permissions to write to /data - #1628 maneesha clarified text for self-organised submission form, so that it doesn't sound like only a certified instructor or member site could submit the form - #1630 Piotr fixed Instructors Over Time report - #1632 Piotr changed the way <meta> workshop tags are handled by AMY - now slug meta tag is ignored. #1631 Piotr updated social-auth-core dependency to sustain GitHub log-in functionality - #1636 Piotr fixed lack of redirection to page specified by ?next= param in URL after successful GitHub login - #1643 Piotr fixed HTML errors on Event edit page ( #1642 - as part of this PR some new features were introduced, too): multiple comment fields Task and Sponsorship forms had multiple <form> tags around them some fields in Task and Sponsorship forms had the same IDs, so both forms were prefixed","title":"AMY release v2.12.0 - 2020-05-02"},{"location":"releases/v2.12.0/#amy-release-v2120-2020-05-02","text":"Major AMY release v2.12.0 .","title":"AMY release v2.12.0 - 2020-05-02"},{"location":"releases/v2.12.0/#new-features","text":"Piotr extended matching Training Request with person to secondary email - #1629 Piotr added instructors as PostWorkshopAction context (similarly to helpers ) - #1634 Piotr added reports_link as PostWorkshopAction context - #1637 maneesha updated workshop URL help text on self-organised submission form - #1638 Piotr added PostWorkshopAction to \"accept & create new event\" views (3) for Workshop Requests, Workshop Inquiries, and Self-organised Submissions respectively. Additionally, the views were turned into Class-Based Views - #1633 Piotr added a collection of upgrades to Email Automation ( #1639 ): \"previous\", \"next\" buttons on Preview page RQJob (when created) saves in DB related event's slug and list of related emails RQ Worker (3rd party software) logs were enabled additional log messages added for Django Admin actions regarding RQJobs (like cancel, preview, reschedule, send now, or retry) configuration for Black was added, and some files were formatted with it \"View queue\" button was moved from Email Templates to RQJobs (more suitable) Jobs (from RQ library) now update RQJobs (from AMY) status when their (Jobs from RQ library) status changes. Piotr updated handling of contact <meta> tag to support multiple values - also in Event models - #1642 - as part of this PR some bug were fixed, too Piotr added updating template functionality to existing RQJobs. Existing admin endpoints started requiring POST. Some styling was improved, too - #1645 Piotr added tags to all actions' context - #1649","title":"New features"},{"location":"releases/v2.12.0/#bugfixes","text":"Piotr fixed an error caused by non-transactional database operation when matching Training Request with existing Person - #1627 Piotr solved internal error with Redis container not having permissions to write to /data - #1628 maneesha clarified text for self-organised submission form, so that it doesn't sound like only a certified instructor or member site could submit the form - #1630 Piotr fixed Instructors Over Time report - #1632 Piotr changed the way <meta> workshop tags are handled by AMY - now slug meta tag is ignored. #1631 Piotr updated social-auth-core dependency to sustain GitHub log-in functionality - #1636 Piotr fixed lack of redirection to page specified by ?next= param in URL after successful GitHub login - #1643 Piotr fixed HTML errors on Event edit page ( #1642 - as part of this PR some new features were introduced, too): multiple comment fields Task and Sponsorship forms had multiple <form> tags around them some fields in Task and Sponsorship forms had the same IDs, so both forms were prefixed","title":"Bugfixes"},{"location":"releases/v2.12.1/","text":"AMY release v2.11.2 - 2020-05-10 A hotfix AMY release v2.12.1 . Bugfixes Piotr fixed Select2 tag widget error when using on empty Event Form - #1652 Piotr fixed missing prefixes from Task and Award forms (multiple places) - #1660 Piotr run linting and Black formatting on some files - #1661 Features Fran\u00e7ois updated and extended confirmation emails sent after each of forms (Workshop Request, Inquiry, and Self-Organised Submission) is submitted - #1658","title":"AMY release v2.11.2 - 2020-05-10"},{"location":"releases/v2.12.1/#amy-release-v2112-2020-05-10","text":"A hotfix AMY release v2.12.1 .","title":"AMY release v2.11.2 - 2020-05-10"},{"location":"releases/v2.12.1/#bugfixes","text":"Piotr fixed Select2 tag widget error when using on empty Event Form - #1652 Piotr fixed missing prefixes from Task and Award forms (multiple places) - #1660 Piotr run linting and Black formatting on some files - #1661","title":"Bugfixes"},{"location":"releases/v2.12.1/#features","text":"Fran\u00e7ois updated and extended confirmation emails sent after each of forms (Workshop Request, Inquiry, and Self-Organised Submission) is submitted - #1658","title":"Features"},{"location":"releases/v2.13.0/","text":"AMY release v2.13.0 - 2020-06-21 Major AMY release v2.13.0 . New features maneesha extended local development instructions with description of how to run Docker and Redis locally - #1662 Both maneesha and Piotr worked on getting Administrator field required: maneesha provided the changeset, Piotr helped with test cases - #1663 Piotr extended search criteria to cover person's secondary email - #1671 Piotr implemented a new email trigger: Instructors and Host Introduction - #1670 Piotr implemented a new email trigger: Confirming Supporting Instructor - #1674 maneesha and Piotr removed git_version.py file - #1665 Piotr hid \"Lessons Covered\" from SOS mix&match accept & create a new event form - #1675 Bugfixes Piotr fixed required permission name for setting state of Workshop Inquiries and Self-Organised Submissions - #1667 Piotr reverted the removed \"Comment\" box from Event Update view - #1672","title":"AMY release v2.13.0 - 2020-06-21"},{"location":"releases/v2.13.0/#amy-release-v2130-2020-06-21","text":"Major AMY release v2.13.0 .","title":"AMY release v2.13.0 - 2020-06-21"},{"location":"releases/v2.13.0/#new-features","text":"maneesha extended local development instructions with description of how to run Docker and Redis locally - #1662 Both maneesha and Piotr worked on getting Administrator field required: maneesha provided the changeset, Piotr helped with test cases - #1663 Piotr extended search criteria to cover person's secondary email - #1671 Piotr implemented a new email trigger: Instructors and Host Introduction - #1670 Piotr implemented a new email trigger: Confirming Supporting Instructor - #1674 maneesha and Piotr removed git_version.py file - #1665 Piotr hid \"Lessons Covered\" from SOS mix&match accept & create a new event form - #1675","title":"New features"},{"location":"releases/v2.13.0/#bugfixes","text":"Piotr fixed required permission name for setting state of Workshop Inquiries and Self-Organised Submissions - #1667 Piotr reverted the removed \"Comment\" box from Event Update view - #1672","title":"Bugfixes"},{"location":"releases/v2.13.1/","text":"AMY release v2.13.1 - 2020-08-10 Minor AMY release v2.13.1 . New features maneesha make numerous adjustments to workshop request forms field naming - #1676 Piotr extended Introduction email to work for 2 or more supporting instructors if the event is online - #1677 Piotr added a new instructor_availability field for Workshop Request and Inquiry forms - #1691 Piotr added Supporting Instructors to the Post Workshop action - #1692 Bugfixes Piotr decreased the number of required supporting instructors down to 1 for online events - #1685 Piotr fixed bug related to empty emails not accepted by the MailGun - #1684 Piotr changed the Person.family name field to be non-nullable, which should solve 500 error messages when creating a person without family name - #1688 Piotr fixed 2 bugs in one PR: cancel RQJob bug (500 error) and occasional two emails scheduled for Introduction action - #1694 Piotr finally brought back some missed test case from #1684 - #1695","title":"AMY release v2.13.1 - 2020-08-10"},{"location":"releases/v2.13.1/#amy-release-v2131-2020-08-10","text":"Minor AMY release v2.13.1 .","title":"AMY release v2.13.1 - 2020-08-10"},{"location":"releases/v2.13.1/#new-features","text":"maneesha make numerous adjustments to workshop request forms field naming - #1676 Piotr extended Introduction email to work for 2 or more supporting instructors if the event is online - #1677 Piotr added a new instructor_availability field for Workshop Request and Inquiry forms - #1691 Piotr added Supporting Instructors to the Post Workshop action - #1692","title":"New features"},{"location":"releases/v2.13.1/#bugfixes","text":"Piotr decreased the number of required supporting instructors down to 1 for online events - #1685 Piotr fixed bug related to empty emails not accepted by the MailGun - #1684 Piotr changed the Person.family name field to be non-nullable, which should solve 500 error messages when creating a person without family name - #1688 Piotr fixed 2 bugs in one PR: cancel RQJob bug (500 error) and occasional two emails scheduled for Introduction action - #1694 Piotr finally brought back some missed test case from #1684 - #1695","title":"Bugfixes"},{"location":"releases/v2.13.2/","text":"AMY release v2.13.2 - 2020-08-16 Minor AMY release v2.13.2 . New features Fran\u00e7ois enabled Travis-CI in checks - #1696 Piotr added additional contact addresses for use in the Post Workshop action - #1690 maneesha enhanced description of the number_attendees field for Workshop request & inquiry - #1673 Bugfixes Piotr fixed a bug concerning empty email addresses in the scheduled emails - #1698 Piotr extended Post Workshop action to work also for \"Circuits\" workshops - #1689","title":"AMY release v2.13.2 - 2020-08-16"},{"location":"releases/v2.13.2/#amy-release-v2132-2020-08-16","text":"Minor AMY release v2.13.2 .","title":"AMY release v2.13.2 - 2020-08-16"},{"location":"releases/v2.13.2/#new-features","text":"Fran\u00e7ois enabled Travis-CI in checks - #1696 Piotr added additional contact addresses for use in the Post Workshop action - #1690 maneesha enhanced description of the number_attendees field for Workshop request & inquiry - #1673","title":"New features"},{"location":"releases/v2.13.2/#bugfixes","text":"Piotr fixed a bug concerning empty email addresses in the scheduled emails - #1698 Piotr extended Post Workshop action to work also for \"Circuits\" workshops - #1689","title":"Bugfixes"},{"location":"releases/v2.14.0/","text":"AMY release v2.14.0 - 2020-09-06 Major AMY release v2.14.0 . This release was driven by the two email actions that were implemented in August: ask for website and reminder to recruit helpers . New features Piotr implemented Ask For Website email action - #1701 Piotr also implemented Reminder To Recruit Helpers email action - #1703 maneesha extended memberships with registration code - #1706 maneesha added \"Online or in-person?\" question to all three workshop forms (workshop request, inquiry, and self-organized submission), and Piotr helped with the tests - #1704 Piotr extended and adjusted reports of membership workshops - #1708","title":"AMY release v2.14.0 - 2020-09-06"},{"location":"releases/v2.14.0/#amy-release-v2140-2020-09-06","text":"Major AMY release v2.14.0 . This release was driven by the two email actions that were implemented in August: ask for website and reminder to recruit helpers .","title":"AMY release v2.14.0 - 2020-09-06"},{"location":"releases/v2.14.0/#new-features","text":"Piotr implemented Ask For Website email action - #1701 Piotr also implemented Reminder To Recruit Helpers email action - #1703 maneesha extended memberships with registration code - #1706 maneesha added \"Online or in-person?\" question to all three workshop forms (workshop request, inquiry, and self-organized submission), and Piotr helped with the tests - #1704 Piotr extended and adjusted reports of membership workshops - #1708","title":"New features"},{"location":"releases/v2.14.1/","text":"AMY release v2.14.1 - 2020-10-18 Minor AMY release v2.14.1 . New features maneesha extended calculation of person's appearance as Supporting Instructor in person's profile - #1721 Piotr added a new Event.public_status field for denoting if event is public or private - #1726 Bugfixes Piotr fixed logic for AskForWebsite and RecruitHelpers email actions - #1725","title":"AMY release v2.14.1 - 2020-10-18"},{"location":"releases/v2.14.1/#amy-release-v2141-2020-10-18","text":"Minor AMY release v2.14.1 .","title":"AMY release v2.14.1 - 2020-10-18"},{"location":"releases/v2.14.1/#new-features","text":"maneesha extended calculation of person's appearance as Supporting Instructor in person's profile - #1721 Piotr added a new Event.public_status field for denoting if event is public or private - #1726","title":"New features"},{"location":"releases/v2.14.1/#bugfixes","text":"Piotr fixed logic for AskForWebsite and RecruitHelpers email actions - #1725","title":"Bugfixes"},{"location":"releases/v2.15.0/","text":"AMY release v2.15.0 - 2020-12-06 Major AMY release v2.15.0 . This release contains some big changes, like \"Acknowledge Workshop Request review\" manually-triggered emails and documentation generated and hosted at project's GitHub page . The new feature for preselecting options on \"Accept & create a new event\" forms should be useful, too. Many thanks to our contributors, Kunal and Stephan , for fixing the accordion bug, fixing typos and improving our documentation! See below for more details. New features Piotr added \"Acknowledge Workshop Request review\" manual emails feature - #1712 Stephan added documentation generation commands, and improved the documentation accessibility - #1739 Piotr added a new \"workshop listed on websites\" question to WRFs - #1741 Piotr added 2 new fields to Self-Organised Submission form (start & end dates) - #1742 Piotr added a constraint for only allowing \"Learner\" role on open/member seat tasks - #1743 Piotr added automatic selection of \"TTT open application\" when TTT tag is selected - #1744 Piotr extended \"Accept & create a new event\" form with some automatic preselections - #1746 Piotr extended \"AskForWebsite\" email automation action with supporting instructors role - #1748 maneesha changed heading on the dashboard to better reflect actual workflows - #1751 maneesha added a membership agreement link - #1753 Bugfixes Piotr fixed issues reported by CodeQL quality-assurance tool - #1713 Kunal fixed broken accordion component on training request form - #1733 Piotr updated Python Pillow library dependency - #1728 Kunal fixed typo in training request confirmation email - #1732 maneesha fixed verbiage on workshop landing page and workshop request form - #1735 maneesha changed position where \"is workshop public\" question is shown at, making it more prominent - #1737","title":"AMY release v2.15.0 - 2020-12-06"},{"location":"releases/v2.15.0/#amy-release-v2150-2020-12-06","text":"Major AMY release v2.15.0 . This release contains some big changes, like \"Acknowledge Workshop Request review\" manually-triggered emails and documentation generated and hosted at project's GitHub page . The new feature for preselecting options on \"Accept & create a new event\" forms should be useful, too. Many thanks to our contributors, Kunal and Stephan , for fixing the accordion bug, fixing typos and improving our documentation! See below for more details.","title":"AMY release v2.15.0 - 2020-12-06"},{"location":"releases/v2.15.0/#new-features","text":"Piotr added \"Acknowledge Workshop Request review\" manual emails feature - #1712 Stephan added documentation generation commands, and improved the documentation accessibility - #1739 Piotr added a new \"workshop listed on websites\" question to WRFs - #1741 Piotr added 2 new fields to Self-Organised Submission form (start & end dates) - #1742 Piotr added a constraint for only allowing \"Learner\" role on open/member seat tasks - #1743 Piotr added automatic selection of \"TTT open application\" when TTT tag is selected - #1744 Piotr extended \"Accept & create a new event\" form with some automatic preselections - #1746 Piotr extended \"AskForWebsite\" email automation action with supporting instructors role - #1748 maneesha changed heading on the dashboard to better reflect actual workflows - #1751 maneesha added a membership agreement link - #1753","title":"New features"},{"location":"releases/v2.15.0/#bugfixes","text":"Piotr fixed issues reported by CodeQL quality-assurance tool - #1713 Kunal fixed broken accordion component on training request form - #1733 Piotr updated Python Pillow library dependency - #1728 Kunal fixed typo in training request confirmation email - #1732 maneesha fixed verbiage on workshop landing page and workshop request form - #1735 maneesha changed position where \"is workshop public\" question is shown at, making it more prominent - #1737","title":"Bugfixes"},{"location":"releases/v2.16.0/","text":"AMY release v2.16.0 - 2021-01-30 Major AMY release v2.16.0 . This release contains long-time cooking change: migration to a new database server PostgreSQL. The server will improve AMY performance and work during high load. New features Piotr migrated AMY to use new server PostgreSQL, and removed some unused code - #1750 Piotr improved search by introducing membership search and some changes to search page UI - #1768 Piotr extended some automated email templates with list of host roles in the workshop - #1770 Piotr improved membership agreement dates: they're now required, default to 1 year long agreement, and show warnings if the time range changes - #1771 Piotr changed the assignment widget to a much more versatile form with drop down selection - #1772 maneesha updated wording on Training Request confirmation email - #1769 Bugfixes Fran\u00e7ois updated license with corrected name of The Carpentries - #1763 Fran\u00e7ois updated default email address used by Carpentries team - #1766","title":"AMY release v2.16.0 - 2021-01-30"},{"location":"releases/v2.16.0/#amy-release-v2160-2021-01-30","text":"Major AMY release v2.16.0 . This release contains long-time cooking change: migration to a new database server PostgreSQL. The server will improve AMY performance and work during high load.","title":"AMY release v2.16.0 - 2021-01-30"},{"location":"releases/v2.16.0/#new-features","text":"Piotr migrated AMY to use new server PostgreSQL, and removed some unused code - #1750 Piotr improved search by introducing membership search and some changes to search page UI - #1768 Piotr extended some automated email templates with list of host roles in the workshop - #1770 Piotr improved membership agreement dates: they're now required, default to 1 year long agreement, and show warnings if the time range changes - #1771 Piotr changed the assignment widget to a much more versatile form with drop down selection - #1772 maneesha updated wording on Training Request confirmation email - #1769","title":"New features"},{"location":"releases/v2.16.0/#bugfixes","text":"Fran\u00e7ois updated license with corrected name of The Carpentries - #1763 Fran\u00e7ois updated default email address used by Carpentries team - #1766","title":"Bugfixes"},{"location":"releases/v2.16.1/","text":"AMY release v2.16.1 - 2021-02-14 St. Valentine's AMY bugfix release v2.16.1 . This release contains a small bugfix for duplicate results yielded by AssignmentForm . Security dependency package bump was also included, as well as some files cleanup and maintenance. New features Piotr cleaned up some files, directories, and performed small maintenance on the data stored in repository (e.g. list of authors) - #1783 Bugfixes dependabot upgraded cryptography due to security issue in that package Piotr fixed assignment form issue - #1793","title":"AMY release v2.16.1 - 2021-02-14"},{"location":"releases/v2.16.1/#amy-release-v2161-2021-02-14","text":"St. Valentine's AMY bugfix release v2.16.1 . This release contains a small bugfix for duplicate results yielded by AssignmentForm . Security dependency package bump was also included, as well as some files cleanup and maintenance.","title":"AMY release v2.16.1 - 2021-02-14"},{"location":"releases/v2.16.1/#new-features","text":"Piotr cleaned up some files, directories, and performed small maintenance on the data stored in repository (e.g. list of authors) - #1783","title":"New features"},{"location":"releases/v2.16.1/#bugfixes","text":"dependabot upgraded cryptography due to security issue in that package Piotr fixed assignment form issue - #1793","title":"Bugfixes"},{"location":"releases/v2.2.0/","text":"AMY release v2.2.0 Major AMY v2.2.0 was released on 2018-11-01. Most notable feature of this release if the new unified workshop request form . New features Piotr upgraded Python and front-end dependencies, and later discovered that one Python dependency degraded, so it was reverted. Piotr disabled profile upgrade requests - from now on people are forced to use their AMY account to upgrade. Piotr added bulk upload of manual scores for training applications. Piotr added multiple refinements to the all training requests page: display of group and affiliation columns, contact email changed to the one provided if no person is matching given record, or to the one from matched person otherwise. Big: Piotr removed TODOs from AMY. Big: Piotr implemented a new unified workshop form, replacing three now-deprecated models/forms: EventRequest, EventSubmission, DCSelfOrganizedEventRequest. The mechanics of this new form (changing state, accepting and creating an event, editing) are taken from the deprecated forms. Piotr , as part of new unified form, added curriculum identificators to the form and to event objects. Piotr added revision history tree to object history view, so that it's possible to browse through various change revisions and compare them. Piotr implemented a new admin notification emails propagation - emails are sent to various addresses depending on the country of the request object. Bugfixes Piotr fixed bugs in Memberships filter. Piotr fixed instructor badges display bug. Kunal fixed outdated README. Piotr brought back removed code from Bootstrap3->4 migration, which was used to display form buttons on top of the forms (as addition to only bottom of the form). Piotr added missing instructor training seat details on the Organization details page.","title":"AMY release v2.2.0"},{"location":"releases/v2.2.0/#amy-release-v220","text":"Major AMY v2.2.0 was released on 2018-11-01. Most notable feature of this release if the new unified workshop request form .","title":"AMY release v2.2.0"},{"location":"releases/v2.2.0/#new-features","text":"Piotr upgraded Python and front-end dependencies, and later discovered that one Python dependency degraded, so it was reverted. Piotr disabled profile upgrade requests - from now on people are forced to use their AMY account to upgrade. Piotr added bulk upload of manual scores for training applications. Piotr added multiple refinements to the all training requests page: display of group and affiliation columns, contact email changed to the one provided if no person is matching given record, or to the one from matched person otherwise. Big: Piotr removed TODOs from AMY. Big: Piotr implemented a new unified workshop form, replacing three now-deprecated models/forms: EventRequest, EventSubmission, DCSelfOrganizedEventRequest. The mechanics of this new form (changing state, accepting and creating an event, editing) are taken from the deprecated forms. Piotr , as part of new unified form, added curriculum identificators to the form and to event objects. Piotr added revision history tree to object history view, so that it's possible to browse through various change revisions and compare them. Piotr implemented a new admin notification emails propagation - emails are sent to various addresses depending on the country of the request object.","title":"New features"},{"location":"releases/v2.2.0/#bugfixes","text":"Piotr fixed bugs in Memberships filter. Piotr fixed instructor badges display bug. Kunal fixed outdated README. Piotr brought back removed code from Bootstrap3->4 migration, which was used to display form buttons on top of the forms (as addition to only bottom of the form). Piotr added missing instructor training seat details on the Organization details page.","title":"Bugfixes"},{"location":"releases/v2.2.1/","text":"AMY minor release v2.2.1 Minor AMY release v2.2.1 was issued on 2018-10-06. It includes various small fixes to either bugs in API, or missed features from v2.1.0 big labels (instructor training seats in Memberships). Bugfixes Piotr fixed duplicate results in PersonViewSet API list endpoint. New features Tracy extended text for requested_workshop_types field in WorkshopRequest model to include Library Carpentry.","title":"AMY minor release v2.2.1"},{"location":"releases/v2.2.1/#amy-minor-release-v221","text":"Minor AMY release v2.2.1 was issued on 2018-10-06. It includes various small fixes to either bugs in API, or missed features from v2.1.0 big labels (instructor training seats in Memberships).","title":"AMY minor release v2.2.1"},{"location":"releases/v2.2.1/#bugfixes","text":"Piotr fixed duplicate results in PersonViewSet API list endpoint.","title":"Bugfixes"},{"location":"releases/v2.2.1/#new-features","text":"Tracy extended text for requested_workshop_types field in WorkshopRequest model to include Library Carpentry.","title":"New features"},{"location":"releases/v2.3.0/","text":"AMY release v2.3.0 Major AMY v2.3.0 was released, with a delay, on 2018-12-13. The biggest highlight of this release is definitely not very visible to end-users: code reorganization into applications (modules). Current AMY internal modules structure is described in models in applications document. Changes made to workshop request form are also noticeable. New features Piotr reorganized code into smaller and more themed modules (e.g. forms accessible to unauthorized users are in extforms , user requests are in extrequests , fiscal stuff is in fiscal , etc.). Piotr added a small warning for trainings that fall out of agreement dates. Piotr updated Person model with a lesson publication consent field; the field is editable from person edit form (by admins), from self-update form (by users themselves), and is exposed to authorized users via API. Piotr added new Tag s: ITT, LSO and LMO, and also changed display of tags in AMY (now they offer a tooltip with long name). Piotr removed Event.admin_fee and Event.invoice_status from display in various places. Piotr started working on deployment automation, which resulted in expanded test suite coverage (now for Python 3.6 and 3.7-dev!), and two additional settings read from envvars. finally, Piotr fixed and improved multiple issues reported for workshop request form. Bugfixes Drew added missing Library Carpentry links that should be available on form confirmation page. Piotr fixed bulk upload server error. Piotr fixed some corner-case migration file reading default encoding for non-UTF-8 operating systems.","title":"AMY release v2.3.0"},{"location":"releases/v2.3.0/#amy-release-v230","text":"Major AMY v2.3.0 was released, with a delay, on 2018-12-13. The biggest highlight of this release is definitely not very visible to end-users: code reorganization into applications (modules). Current AMY internal modules structure is described in models in applications document. Changes made to workshop request form are also noticeable.","title":"AMY release v2.3.0"},{"location":"releases/v2.3.0/#new-features","text":"Piotr reorganized code into smaller and more themed modules (e.g. forms accessible to unauthorized users are in extforms , user requests are in extrequests , fiscal stuff is in fiscal , etc.). Piotr added a small warning for trainings that fall out of agreement dates. Piotr updated Person model with a lesson publication consent field; the field is editable from person edit form (by admins), from self-update form (by users themselves), and is exposed to authorized users via API. Piotr added new Tag s: ITT, LSO and LMO, and also changed display of tags in AMY (now they offer a tooltip with long name). Piotr removed Event.admin_fee and Event.invoice_status from display in various places. Piotr started working on deployment automation, which resulted in expanded test suite coverage (now for Python 3.6 and 3.7-dev!), and two additional settings read from envvars. finally, Piotr fixed and improved multiple issues reported for workshop request form.","title":"New features"},{"location":"releases/v2.3.0/#bugfixes","text":"Drew added missing Library Carpentry links that should be available on form confirmation page. Piotr fixed bulk upload server error. Piotr fixed some corner-case migration file reading default encoding for non-UTF-8 operating systems.","title":"Bugfixes"},{"location":"releases/v2.4.0/","text":"AMY release v2.4.0 Major AMY v2.4.0 was released on 2019-01-02. This release is sporting a new commenting system that replaces old \"notes\" fields on Events, Persons, Organizations, Memberships, Training Requests and Workshop Requests. The summary of other changes is available below. New features Piotr enabled resizing for permission box on Person Edit Permissions page. Piotr changed filtering logic in Find Workshop Staff - now instead of conjoining badges ( badge1 AND badge2 AND badge3 ), we're summing them ( badge1 OR badge2 OR badge3 ). Piotr added the Library Carpentry tag Piotr extended \"Instructors num taught\" by splitting the summary per each tag (SWC, DC, LC, TTT), and adding country field. Piotr added commenting system, based on former Django Contrib application django-comments . Also the comments support Markdown now. Piotr extended \"Find Workshop Staff\" with CSV download (which required a bit of internal changes). Piotr extended \"Workshops/Learners/Instructors over time\" with additional filters. Bugfixes Piotr added redirects from old URLs (pre-v2.3.0), to new (v2.3.0+) ones.","title":"AMY release v2.4.0"},{"location":"releases/v2.4.0/#amy-release-v240","text":"Major AMY v2.4.0 was released on 2019-01-02. This release is sporting a new commenting system that replaces old \"notes\" fields on Events, Persons, Organizations, Memberships, Training Requests and Workshop Requests. The summary of other changes is available below.","title":"AMY release v2.4.0"},{"location":"releases/v2.4.0/#new-features","text":"Piotr enabled resizing for permission box on Person Edit Permissions page. Piotr changed filtering logic in Find Workshop Staff - now instead of conjoining badges ( badge1 AND badge2 AND badge3 ), we're summing them ( badge1 OR badge2 OR badge3 ). Piotr added the Library Carpentry tag Piotr extended \"Instructors num taught\" by splitting the summary per each tag (SWC, DC, LC, TTT), and adding country field. Piotr added commenting system, based on former Django Contrib application django-comments . Also the comments support Markdown now. Piotr extended \"Find Workshop Staff\" with CSV download (which required a bit of internal changes). Piotr extended \"Workshops/Learners/Instructors over time\" with additional filters.","title":"New features"},{"location":"releases/v2.4.0/#bugfixes","text":"Piotr added redirects from old URLs (pre-v2.3.0), to new (v2.3.0+) ones.","title":"Bugfixes"},{"location":"releases/v2.4.1/","text":"AMY minor release v2.4.1 Minor AMY release v2.4.1 was issued on 2019-01-20. It includes fixes related to removal of \"Notes\" fields from various objects, and changes to the deployment documentation or Travis continuous integration testing. Bugfixes Piotr removed \"Comment\" column from Workshop Request list page, because related field was already gone due to introduction of commenting system in v2.4.0 . Piotr fixed error related to adding comments when new memberships are created - it was supposed to add comments when they are edited. New features Piotr updated Travis configuration to work with Python 3.7, instead of Python 3.7-dev. Piotr updated procedures.md with information about using Ansible Playbooks for AMY deployment.","title":"AMY minor release v2.4.1"},{"location":"releases/v2.4.1/#amy-minor-release-v241","text":"Minor AMY release v2.4.1 was issued on 2019-01-20. It includes fixes related to removal of \"Notes\" fields from various objects, and changes to the deployment documentation or Travis continuous integration testing.","title":"AMY minor release v2.4.1"},{"location":"releases/v2.4.1/#bugfixes","text":"Piotr removed \"Comment\" column from Workshop Request list page, because related field was already gone due to introduction of commenting system in v2.4.0 . Piotr fixed error related to adding comments when new memberships are created - it was supposed to add comments when they are edited.","title":"Bugfixes"},{"location":"releases/v2.4.1/#new-features","text":"Piotr updated Travis configuration to work with Python 3.7, instead of Python 3.7-dev. Piotr updated procedures.md with information about using Ansible Playbooks for AMY deployment.","title":"New features"},{"location":"releases/v2.5.0/","text":"AMY release v2.5.0 Major AMY v2.5.0 was released on 2019-02-03. This release brings a bunch of fixes and contributions from other people. New features Maneesha renamed 'Group Name' to 'Registration Code' in Training Requests. Elizabeth updated email addresses on the training form page. Piotr added searching in comments, as this stopped working when we moved from notes fields to comments system. Piotr added display of badge & award data in membership details. Piotr added Datatables for tests in one table (event tasks). If it works out, we may add Datatables to other tables in AMY. Bugfixes Piotr fixed errors in fake_database.py script. Piotr fixed migration checking in Travis-CI script; now Travis correctly checks for missing migrations as part of the continuous-integration. Maneesha fixed Makefile and wrong path to git_version.py file. Maintenance Piotr removed Invoice and Profile Update requests - both features haven't been used for a long time.","title":"AMY release v2.5.0"},{"location":"releases/v2.5.0/#amy-release-v250","text":"Major AMY v2.5.0 was released on 2019-02-03. This release brings a bunch of fixes and contributions from other people.","title":"AMY release v2.5.0"},{"location":"releases/v2.5.0/#new-features","text":"Maneesha renamed 'Group Name' to 'Registration Code' in Training Requests. Elizabeth updated email addresses on the training form page. Piotr added searching in comments, as this stopped working when we moved from notes fields to comments system. Piotr added display of badge & award data in membership details. Piotr added Datatables for tests in one table (event tasks). If it works out, we may add Datatables to other tables in AMY.","title":"New features"},{"location":"releases/v2.5.0/#bugfixes","text":"Piotr fixed errors in fake_database.py script. Piotr fixed migration checking in Travis-CI script; now Travis correctly checks for missing migrations as part of the continuous-integration. Maneesha fixed Makefile and wrong path to git_version.py file.","title":"Bugfixes"},{"location":"releases/v2.5.0/#maintenance","text":"Piotr removed Invoice and Profile Update requests - both features haven't been used for a long time.","title":"Maintenance"},{"location":"releases/v2.5.1/","text":"AMY minor release v2.5.1 Minor AMY release v2.5.1 was issued on 2019-02-13. This issue concentrated on bringing a relatively big new feature: preserving checked checkboxes on All Training Requests page. This feature changes the way training requests are displayed, and what actions admins can take. More details in the pull request . Bugfixes Piotr updated the language registry, fixing the way some languages with multiple names are represented (e.g. \"Dutch Flemish\" -> \"Dutch, Flemish\"). New features Piotr made (big) changes to the All Training Requests page that include preserving checkboxes along page refreshes. Piotr added ?next URL parameter to the action_required_policy view, thus enhancing its capabilities.","title":"AMY minor release v2.5.1"},{"location":"releases/v2.5.1/#amy-minor-release-v251","text":"Minor AMY release v2.5.1 was issued on 2019-02-13. This issue concentrated on bringing a relatively big new feature: preserving checked checkboxes on All Training Requests page. This feature changes the way training requests are displayed, and what actions admins can take. More details in the pull request .","title":"AMY minor release v2.5.1"},{"location":"releases/v2.5.1/#bugfixes","text":"Piotr updated the language registry, fixing the way some languages with multiple names are represented (e.g. \"Dutch Flemish\" -> \"Dutch, Flemish\").","title":"Bugfixes"},{"location":"releases/v2.5.1/#new-features","text":"Piotr made (big) changes to the All Training Requests page that include preserving checkboxes along page refreshes. Piotr added ?next URL parameter to the action_required_policy view, thus enhancing its capabilities.","title":"New features"},{"location":"releases/v2.6.0/","text":"AMY release v2.6.0 Major AMY release v2.6.0 was issued on 2019-03-05. Bugfixes Piotr changed (again) the place jQuery is imported in base.html . Piotr enabled compression of CSS files (CSS maps were rendering un-compressed files unusable). Piotr reworked the Makefile so that some potentially risky commands don't behave in a risky way. More in #1476 . New features Piotr parametrized Django Admin URL (so now it's not available under '/admin', but somewhere random). Piotr added Criterium model (for sending emails regarding workshops in specific geographic areas to specific addresses) and Continent model (for defining continents). Continents are used in searching (All Events and Find Workshop Staff pages). Piotr changed wording and behavior of minority questions in Training Request form. Now the field doesn't ask for details, and works with automatic scoring. Piotr extended workshop tags validation to accept split latitude and longitude tags. This feature was requested upstream in workshop template repository. Piotr reworked Training Progress page in two Pull Requests: a warning note (regarding missing data) was added, some misleading information and links were updated. Piotr added Library Carpentry requirements to the training process.","title":"AMY release v2.6.0"},{"location":"releases/v2.6.0/#amy-release-v260","text":"Major AMY release v2.6.0 was issued on 2019-03-05.","title":"AMY release v2.6.0"},{"location":"releases/v2.6.0/#bugfixes","text":"Piotr changed (again) the place jQuery is imported in base.html . Piotr enabled compression of CSS files (CSS maps were rendering un-compressed files unusable). Piotr reworked the Makefile so that some potentially risky commands don't behave in a risky way. More in #1476 .","title":"Bugfixes"},{"location":"releases/v2.6.0/#new-features","text":"Piotr parametrized Django Admin URL (so now it's not available under '/admin', but somewhere random). Piotr added Criterium model (for sending emails regarding workshops in specific geographic areas to specific addresses) and Continent model (for defining continents). Continents are used in searching (All Events and Find Workshop Staff pages). Piotr changed wording and behavior of minority questions in Training Request form. Now the field doesn't ask for details, and works with automatic scoring. Piotr extended workshop tags validation to accept split latitude and longitude tags. This feature was requested upstream in workshop template repository. Piotr reworked Training Progress page in two Pull Requests: a warning note (regarding missing data) was added, some misleading information and links were updated. Piotr added Library Carpentry requirements to the training process.","title":"New features"},{"location":"releases/v2.7.0/","text":"AMY release v2.7.0 Major AMY release v2.7.0 was issued on 2019-04-05. Bugfixes Piotr fixed some bugs related to Django Compressor use (especially top navbar not sticky, and \"select all\" not working) Piotr updated Fake Database script with the newer better models. New features Piotr added a Trainer badge to Find Workshop Staff + its API endpoint Piotr changed the way attendance for events is calculated; now it's a maximum of (manually entered attendance, 'learner' tasks count). Piotr added LC to the statistics at All Activity Over Time API/page. Piotr added prefilling of event form when admin Accepts & creates an event from a Workshop Request. Piotr added an email autoresponder to people who submit their workshop requests.","title":"AMY release v2.7.0"},{"location":"releases/v2.7.0/#amy-release-v270","text":"Major AMY release v2.7.0 was issued on 2019-04-05.","title":"AMY release v2.7.0"},{"location":"releases/v2.7.0/#bugfixes","text":"Piotr fixed some bugs related to Django Compressor use (especially top navbar not sticky, and \"select all\" not working) Piotr updated Fake Database script with the newer better models.","title":"Bugfixes"},{"location":"releases/v2.7.0/#new-features","text":"Piotr added a Trainer badge to Find Workshop Staff + its API endpoint Piotr changed the way attendance for events is calculated; now it's a maximum of (manually entered attendance, 'learner' tasks count). Piotr added LC to the statistics at All Activity Over Time API/page. Piotr added prefilling of event form when admin Accepts & creates an event from a Workshop Request. Piotr added an email autoresponder to people who submit their workshop requests.","title":"New features"},{"location":"releases/v2.8.0/","text":"AMY release v2.8.0 Major AMY release v2.8.0 was issued on 2019-06-19, more than two months after previous release v2.7.0. New features Piotr reworked \"Find Duplicate Persons\" view, so that now it's using a table and radio buttons for selecting merge candidates. Piotr also added \"mark as reviewed\" feature to \"Find Duplicate Persons\", allowing to dismiss possible duplicates until they are updated. If they are updated at least 1 minute after \"mark as reviewed\" timestamp, then they will show up on \"Find Duplicate Persons\" page. Piotr added special log file for logging failed login attempts. This will be later used for fail2ban to disallow IPs with too many failed login attempts. Maneesha changed description of host responsibilities agreement on the workshop request form.","title":"AMY release v2.8.0"},{"location":"releases/v2.8.0/#amy-release-v280","text":"Major AMY release v2.8.0 was issued on 2019-06-19, more than two months after previous release v2.7.0.","title":"AMY release v2.8.0"},{"location":"releases/v2.8.0/#new-features","text":"Piotr reworked \"Find Duplicate Persons\" view, so that now it's using a table and radio buttons for selecting merge candidates. Piotr also added \"mark as reviewed\" feature to \"Find Duplicate Persons\", allowing to dismiss possible duplicates until they are updated. If they are updated at least 1 minute after \"mark as reviewed\" timestamp, then they will show up on \"Find Duplicate Persons\" page. Piotr added special log file for logging failed login attempts. This will be later used for fail2ban to disallow IPs with too many failed login attempts. Maneesha changed description of host responsibilities agreement on the workshop request form.","title":"New features"},{"location":"releases/v2.9.0/","text":"AMY release v2.9.0 Major AMY release v2.9.0 was issued on 2019-09-16, almost three months after previous major release v2.8.0. This release sports a big project, three (instead of one) workshop request forms: inquiry form for people just coming to The Carpentries, request form for people who know precisely what they want, self-organised workshop submission form for instructors, who want their self-organised workshop to be recorded. New features Piotr upgraded Django to latest version v2.2.5. Piotr added new option for Lesson Publication Consent field. Piotr added \"Chemistry\" for auto-scoring mechanism for the Instructor Training Request. Piotr implemented a big project called Three Workshop Request Forms. on top of that changes, Piotr changed Training Request form to work better with people who tend to forget to provide registration code. Bug fixes Maneesha fixed login page - now the columns have clear headers and in case of troubles, a contact email is provided. Fran\u00e7ois fixed sysadmin email address (for error messages). Piotr added lesson publication consent field displayed in user's profile after logging in. Piotr replaced troublesome Django-Autocomplete-Light with much better (so far) Django-Select2 in his quest to use best autocompletion for AMY. Fran\u00e7ois fixed small typo in user profile's page. Maneesha replaced wrong GitHub repo address with correct one in the AMY footer.","title":"AMY release v2.9.0"},{"location":"releases/v2.9.0/#amy-release-v290","text":"Major AMY release v2.9.0 was issued on 2019-09-16, almost three months after previous major release v2.8.0. This release sports a big project, three (instead of one) workshop request forms: inquiry form for people just coming to The Carpentries, request form for people who know precisely what they want, self-organised workshop submission form for instructors, who want their self-organised workshop to be recorded.","title":"AMY release v2.9.0"},{"location":"releases/v2.9.0/#new-features","text":"Piotr upgraded Django to latest version v2.2.5. Piotr added new option for Lesson Publication Consent field. Piotr added \"Chemistry\" for auto-scoring mechanism for the Instructor Training Request. Piotr implemented a big project called Three Workshop Request Forms. on top of that changes, Piotr changed Training Request form to work better with people who tend to forget to provide registration code.","title":"New features"},{"location":"releases/v2.9.0/#bug-fixes","text":"Maneesha fixed login page - now the columns have clear headers and in case of troubles, a contact email is provided. Fran\u00e7ois fixed sysadmin email address (for error messages). Piotr added lesson publication consent field displayed in user's profile after logging in. Piotr replaced troublesome Django-Autocomplete-Light with much better (so far) Django-Select2 in his quest to use best autocompletion for AMY. Fran\u00e7ois fixed small typo in user profile's page. Maneesha replaced wrong GitHub repo address with correct one in the AMY footer.","title":"Bug fixes"},{"location":"releases/v2.9.1/","text":"AMY minor release v2.9.1 Minor AMY release v2.9.1 was issued on 2019-09-24, and is a follow-up to previous major release v2.9.0 . This release mostly consists of bugfixes following the release of a major feature, namely three workshop request forms. New features Piotr extended CSV download of Training Requests with a review_process (Application Type) column. Bug fixes Piotr updated repository links in the procedures.md documentation file. Piotr updated missing pagination widgets on All Workshop Inquiries and All Self-Organised Submissions pages. Piotr fixed super-narrow admin-selection widget (it only occurred if there was no admin selected previously). Piotr fixed incorrect permission names in some workshop inquiries- and self-organised submissions-related pages. Piotr fixed a data migration (self-organised Workshop Requests -> Self-Organised Submissions), which was missing some fields Piotr enabled cache for Select2 widget queries, which fixed a bug related to users' inability to search/autocomplete.","title":"AMY minor release v2.9.1"},{"location":"releases/v2.9.1/#amy-minor-release-v291","text":"Minor AMY release v2.9.1 was issued on 2019-09-24, and is a follow-up to previous major release v2.9.0 . This release mostly consists of bugfixes following the release of a major feature, namely three workshop request forms.","title":"AMY minor release v2.9.1"},{"location":"releases/v2.9.1/#new-features","text":"Piotr extended CSV download of Training Requests with a review_process (Application Type) column.","title":"New features"},{"location":"releases/v2.9.1/#bug-fixes","text":"Piotr updated repository links in the procedures.md documentation file. Piotr updated missing pagination widgets on All Workshop Inquiries and All Self-Organised Submissions pages. Piotr fixed super-narrow admin-selection widget (it only occurred if there was no admin selected previously). Piotr fixed incorrect permission names in some workshop inquiries- and self-organised submissions-related pages. Piotr fixed a data migration (self-organised Workshop Requests -> Self-Organised Submissions), which was missing some fields Piotr enabled cache for Select2 widget queries, which fixed a bug related to users' inability to search/autocomplete.","title":"Bug fixes"},{"location":"releases/v2.9.2/","text":"AMY minor release v2.9.2 Minor AMY release v2.9.2 was issued on 2019-09-25, and is a follow-up to previous major release v2.9.0 . This release fixes two UI-related bugs. Bug fixes Piotr fixed wrong link to \"assign\" buttons on Self-Organised Submission and Workshop Inquiry details pages. Piotr updated invalid permission name for action buttons widget on both Self-Organised Submissions and Workshop Inquiry details pages.","title":"AMY minor release v2.9.2"},{"location":"releases/v2.9.2/#amy-minor-release-v292","text":"Minor AMY release v2.9.2 was issued on 2019-09-25, and is a follow-up to previous major release v2.9.0 . This release fixes two UI-related bugs.","title":"AMY minor release v2.9.2"},{"location":"releases/v2.9.2/#bug-fixes","text":"Piotr fixed wrong link to \"assign\" buttons on Self-Organised Submission and Workshop Inquiry details pages. Piotr updated invalid permission name for action buttons widget on both Self-Organised Submissions and Workshop Inquiry details pages.","title":"Bug fixes"},{"location":"releases/v2.9.3/","text":"AMY minor release v2.9.3 Minor AMY release v2.9.3 was issued on 2019-09-28. It only enlarges font on buttons with CSS class .btn-lg .","title":"AMY minor release v2.9.3"},{"location":"releases/v2.9.3/#amy-minor-release-v293","text":"Minor AMY release v2.9.3 was issued on 2019-09-28. It only enlarges font on buttons with CSS class .btn-lg .","title":"AMY minor release v2.9.3"},{"location":"releases/v2.9.4/","text":"AMY minor release v2.9.4 Minor AMY release v2.9.4 was issued on 2019-10-04. It fixes an invalid data validation/cleaning in EventForm when a \"Mix & Match\" curriculum was selected (as it requires a corresponding tag \"Circuits\", and the validation didn't check this).","title":"AMY minor release v2.9.4"},{"location":"releases/v2.9.4/#amy-minor-release-v294","text":"Minor AMY release v2.9.4 was issued on 2019-10-04. It fixes an invalid data validation/cleaning in EventForm when a \"Mix & Match\" curriculum was selected (as it requires a corresponding tag \"Circuits\", and the validation didn't check this).","title":"AMY minor release v2.9.4"},{"location":"releases/v2.9.5/","text":"AMY minor release v2.9.5 Minor AMY release v2.9.5 was issued on 2019-09-25, and is another follow-up to previous major release v2.9.0 . This release fixes some bugs and includes dependency upgrades. Bug fixes Piotr fixed wrong link permission name for some WorkshopInquiryRequest views (previous name: change_workshopinquiry , new correct name: change_workshopinquiryrequest ). Other dependabot provided dependency upgrades for Django (v2.2.5 -> v2.2.8) and Pillow (v5.3.0 -> v6.2.0).","title":"AMY minor release v2.9.5"},{"location":"releases/v2.9.5/#amy-minor-release-v295","text":"Minor AMY release v2.9.5 was issued on 2019-09-25, and is another follow-up to previous major release v2.9.0 . This release fixes some bugs and includes dependency upgrades.","title":"AMY minor release v2.9.5"},{"location":"releases/v2.9.5/#bug-fixes","text":"Piotr fixed wrong link permission name for some WorkshopInquiryRequest views (previous name: change_workshopinquiry , new correct name: change_workshopinquiryrequest ).","title":"Bug fixes"},{"location":"releases/v2.9.5/#other","text":"dependabot provided dependency upgrades for Django (v2.2.5 -> v2.2.8) and Pillow (v5.3.0 -> v6.2.0).","title":"Other"},{"location":"releases/v3.0.0/","text":"AMY release v3.0.0 - 2021-05-29 This major AMY release v3.0.0 contains three projects: new memberships (worked on by Piotr ) new consents (worked on by LB ) profile archival (worked on by LB ). Memberships and profile archival are currently enabled, but consents will be enabled with v3.1.0 release. Each of the project contains a lot of features and bugfixes, as they underwent staging testing on a test server. Currently, some of the features are still worked on in memberships and consents projects. Ticket trackers for each of the projects: memberships: https://github.com/carpentries/amy/projects/2 consents: https://github.com/carpentries/amy/projects/3 profile archival: https://github.com/carpentries/amy/projects/4 Piotr asd - #1000 LB asd - #1000 Maneesha asd - #1000 New features For complete list of features, please follow project links above. LB applied uniform formatting to whole codebase - #1814 LB expanded Find Workshop Staff with knowledge domain search - #1806 Piotr switched CI from Travis to GitHub - #1868 Maneesha updated trainee progress view - #1864 Piotr improved some workflows, removed obsolete files - #1876 Maneesha updated trainee progress view - #1864 Maneesha updated wording for pre-approved registration of trainees - #1863 Piotr added pre-commit for isort (import sorting utility) - #1906 Piotr added workshop URL validation - #1902 Piotr brought back instructor survey links - #1910 Bugfixes For complete list of bugfixes, please follow project links above. LB fixed main branch name - #1802 LB fixed help text for event country - #1803 Maneesha updated documentation with new membership fields - #1789 Maneesha updated database documentation - #1809 Maneesha updated database documentation - #1825 [Zhian][] updated database documentation - #1866 Dependabot updated some dependencies: https://github.com/carpentries/amy/pull/1818 https://github.com/carpentries/amy/pull/1847 https://github.com/carpentries/amy/pull/1846 https://github.com/carpentries/amy/pull/1865 https://github.com/carpentries/amy/pull/1894 https://github.com/carpentries/amy/pull/1901 LB removed initial slug from \"Accept and create a new event\" forms - #1815 Piotr fixed Django messages formatting in Django Admin - #1898","title":"AMY release v3.0.0 - 2021-05-29"},{"location":"releases/v3.0.0/#amy-release-v300-2021-05-29","text":"This major AMY release v3.0.0 contains three projects: new memberships (worked on by Piotr ) new consents (worked on by LB ) profile archival (worked on by LB ). Memberships and profile archival are currently enabled, but consents will be enabled with v3.1.0 release. Each of the project contains a lot of features and bugfixes, as they underwent staging testing on a test server. Currently, some of the features are still worked on in memberships and consents projects. Ticket trackers for each of the projects: memberships: https://github.com/carpentries/amy/projects/2 consents: https://github.com/carpentries/amy/projects/3 profile archival: https://github.com/carpentries/amy/projects/4 Piotr asd - #1000 LB asd - #1000 Maneesha asd - #1000","title":"AMY release v3.0.0 - 2021-05-29"},{"location":"releases/v3.0.0/#new-features","text":"For complete list of features, please follow project links above. LB applied uniform formatting to whole codebase - #1814 LB expanded Find Workshop Staff with knowledge domain search - #1806 Piotr switched CI from Travis to GitHub - #1868 Maneesha updated trainee progress view - #1864 Piotr improved some workflows, removed obsolete files - #1876 Maneesha updated trainee progress view - #1864 Maneesha updated wording for pre-approved registration of trainees - #1863 Piotr added pre-commit for isort (import sorting utility) - #1906 Piotr added workshop URL validation - #1902 Piotr brought back instructor survey links - #1910","title":"New features"},{"location":"releases/v3.0.0/#bugfixes","text":"For complete list of bugfixes, please follow project links above. LB fixed main branch name - #1802 LB fixed help text for event country - #1803 Maneesha updated documentation with new membership fields - #1789 Maneesha updated database documentation - #1809 Maneesha updated database documentation - #1825 [Zhian][] updated database documentation - #1866 Dependabot updated some dependencies: https://github.com/carpentries/amy/pull/1818 https://github.com/carpentries/amy/pull/1847 https://github.com/carpentries/amy/pull/1846 https://github.com/carpentries/amy/pull/1865 https://github.com/carpentries/amy/pull/1894 https://github.com/carpentries/amy/pull/1901 LB removed initial slug from \"Accept and create a new event\" forms - #1815 Piotr fixed Django messages formatting in Django Admin - #1898","title":"Bugfixes"},{"location":"releases/v3.1.0/","text":"AMY release v3.1.0 - 2021-06-16 Major AMY release v3.1.0 . This release brings Consent project to production server. (The new features will be enabled soon after the release). There are also some bugfixes and dependency updates. New features Piotr added code linting to GitHub Continuous Integration pipelines - #1966 and #1978 LB removed old-style consents from Trainee Dashboard - #1971 LB removed old-style consents from filter - #1970 LB removed old-style consents from API serializers - #1967 LB changed person serializer and view to only show active consents (API) - #1975 Bugfixes dependabot updated Django and Pillow dependencies Piotr fixed non-unique membership members being created in the development database script - #1980 maneesha fixed documentation not mentioning a superuser created in the development database script - #1981","title":"AMY release v3.1.0 - 2021-06-16"},{"location":"releases/v3.1.0/#amy-release-v310-2021-06-16","text":"Major AMY release v3.1.0 . This release brings Consent project to production server. (The new features will be enabled soon after the release). There are also some bugfixes and dependency updates.","title":"AMY release v3.1.0 - 2021-06-16"},{"location":"releases/v3.1.0/#new-features","text":"Piotr added code linting to GitHub Continuous Integration pipelines - #1966 and #1978 LB removed old-style consents from Trainee Dashboard - #1971 LB removed old-style consents from filter - #1970 LB removed old-style consents from API serializers - #1967 LB changed person serializer and view to only show active consents (API) - #1975","title":"New features"},{"location":"releases/v3.1.0/#bugfixes","text":"dependabot updated Django and Pillow dependencies Piotr fixed non-unique membership members being created in the development database script - #1980 maneesha fixed documentation not mentioning a superuser created in the development database script - #1981","title":"Bugfixes"},{"location":"releases/v3.2.0/","text":"AMY release v3.2.0 - 2021-07-03 Minor AMY release v3.2.0 . This release brings two exciting new features. First - consents migration - means we can enable consents in the production server. Second - Pipenv tool - means we can install and manage AMY dependencies in a more secure way. Both features are very exciting. New features LB migrated old consents to the new ones, which enables the new system in AMY - #1984 Piotr switched AMY's Software Supply Chain to use Pipenv - #1965","title":"AMY release v3.2.0 - 2021-07-03"},{"location":"releases/v3.2.0/#amy-release-v320-2021-07-03","text":"Minor AMY release v3.2.0 . This release brings two exciting new features. First - consents migration - means we can enable consents in the production server. Second - Pipenv tool - means we can install and manage AMY dependencies in a more secure way. Both features are very exciting.","title":"AMY release v3.2.0 - 2021-07-03"},{"location":"releases/v3.2.0/#new-features","text":"LB migrated old consents to the new ones, which enables the new system in AMY - #1984 Piotr switched AMY's Software Supply Chain to use Pipenv - #1965","title":"New features"},{"location":"releases/v3.2.1/","text":"AMY release v3.2.1 - 2021-07-11 AMY bugfix release v3.2.1 . This release contains two bugfixes, including a major one that prevented users for using AMY on some important pages. Bugfixes Piotr fixed Countries Filter issue - #1997 Piotr fixed warning membership message after invalid calculation issue - #1998","title":"AMY release v3.2.1 - 2021-07-11"},{"location":"releases/v3.2.1/#amy-release-v321-2021-07-11","text":"AMY bugfix release v3.2.1 . This release contains two bugfixes, including a major one that prevented users for using AMY on some important pages.","title":"AMY release v3.2.1 - 2021-07-11"},{"location":"releases/v3.2.1/#bugfixes","text":"Piotr fixed Countries Filter issue - #1997 Piotr fixed warning membership message after invalid calculation issue - #1998","title":"Bugfixes"}]}